2020-08-17 01:36:13.420 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:36:19.791 DEBUG [main]com.wsy.blog.BlogApplicationTests.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:40:32.913 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:40:39.941 DEBUG [main]com.wsy.blog.BlogApplicationTests.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:45:28.426 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:45:36.909 DEBUG [main]com.wsy.blog.BlogApplicationTests.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:45:46.256 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:46:36.303 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:49:33.850 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:51:48.433 DEBUG [main]com.wsy.blog.BlogApplicationTests.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:52:46.123 DEBUG [main]com.wsy.blog.BlogApplicationTests.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:55:24.089 DEBUG [main]com.wsy.blog.BlogApplicationTests.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:56:31.019 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 01:56:55.701 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select `name`,header,signature,username,password from bl_admin where username=? 
2020-08-17 01:56:55.738 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: qq1437631334(String)
2020-08-17 01:56:55.789 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 01:56:55.979 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 01:56:55.982 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 356(Long), {"code":20000,"data":{"token":"5C120A3BCE636B1BBA78D9EC4A3C4BED"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 01:56:56.028 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 01:59:25.085 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:00:32.039 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 02:00:32.082 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: oops(String)
2020-08-17 02:00:32.120 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 02:00:32.228 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:00:32.256 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 231(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"5C120A3BCE636B1BBA78D9EC4A3C4BED"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:00:32.300 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:01:10.288 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 AND blog_type = ? 
2020-08-17 02:01:10.289 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 14(Integer)
2020-08-17 02:01:10.308 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 02:01:10.312 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 AND blog_type = ? order by created_time desc LIMIT ? 
2020-08-17 02:01:10.313 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 14(Integer), 5(Integer)
2020-08-17 02:01:10.335 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 02:01:10.363 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 02:01:10.364 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 02:01:10.385 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 02:01:10.406 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 02:01:10.407 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 02:01:10.424 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 02:01:10.451 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 02:01:10.452 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 02:01:10.470 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 02:01:10.490 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 02:01:10.491 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 02:01:10.512 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 02:01:10.543 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:01:10.545 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=14)](String), 1(Integer), null, POST(String), 348(Long), {"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4},"msg":"查询成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:01:10.585 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:01:40.219 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:01:40.220 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=这是评论, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 170(Long), {"code":20000,"msg":"评论成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:01:40.261 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:03:00.514 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:03:13.682 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 02:03:13.707 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294534531398889472(String)
2020-08-17 02:03:13.787 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 02:03:14.107 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:03:14.113 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=这是评论, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 473(Long), {"code":20000,"msg":"评论成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:03:14.168 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:06:52.023 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:07:10.620 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 02:07:10.675 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294534531398889472(String)
2020-08-17 02:07:10.743 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 02:07:11.006 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:07:11.008 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=芜湖 起飞12312312, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 458(Long), {"code":20000,"msg":"评论成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:07:11.063 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:08:35.284 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:09:01.666 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 02:09:01.728 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294534531398889472(String)
2020-08-17 02:09:01.794 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 02:09:02.056 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:09:02.058 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=芜3512312423飞12312312, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 429(Long), {"code":20000,"msg":"评论成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:09:02.139 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:09:12.014 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:09:12.016 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:09:12.074 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:13:15.728 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:13:29.651 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 02:13:29.692 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294534531398889472(String)
2020-08-17 02:13:29.752 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 02:13:30.038 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:13:30.041 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=123asdasczxczxcas, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 496(Long), {"code":20000,"msg":"评论成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:13:30.093 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:13:32.721 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 02:13:32.721 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294534531398889472(String)
2020-08-17 02:13:32.746 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 02:13:32.806 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:13:32.807 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=dfgcvxzzxcvzxcasd, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 90(Long), {"code":20000,"msg":"评论成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:13:32.856 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:13:39.513 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 02:13:39.516 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: pink(String)
2020-08-17 02:13:39.553 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 02:13:39.590 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:13:39.592 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=pink, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 108(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"token":"5C120A3BCE636B1BBA78D9EC4A3C4BED"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:13:39.640 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:14:01.327 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 02:14:01.328 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294534531398889472(String)
2020-08-17 02:14:01.353 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 02:14:01.406 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:14:01.407 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=吃撒OHJDOASDAS, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 81(Long), {"code":20000,"msg":"评论成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:14:01.465 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:14:03.571 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:14:03.573 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 130(Long), {"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:14:03.622 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:16:25.491 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:17:00.690 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:17:57.107 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:18:09.355 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:18:09.386 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 404(Long), {"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:18:09.448 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:18:12.883 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:18:12.885 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 49(Long), {"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:18:12.943 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 02:18:42.234 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 02:19:00.790 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 02:19:00.839 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 521(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 02:19:00.891 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:19:01.255 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 09:26:28.964 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select `name`,header,signature,username,password from bl_admin where username=? 
2020-08-17 09:26:28.996 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: qq1437631334(String)
2020-08-17 09:26:29.062 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 09:26:29.178 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:26:29.181 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 2283(Long), {"code":20000,"data":{"token":"3C5462B271D3165BFD995D872EA4FDD9"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 09:26:29.241 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:27:20.909 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 09:27:32.121 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:27:32.159 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 348(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 09:27:32.221 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:30:44.148 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:30:44.157 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:30:44.157 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:30:44.157 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:30:44.160 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:30:44.160 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:30:44.275 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:30:44.275 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:30:44.267 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:30:44.561 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:30:44.567 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:44.567 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 245(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:30:44.567 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:30:44.567 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:30:44.567 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 223(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:30:44.595 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:44.627 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:30:44.632 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:30:44.637 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:44.639 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:30:44.671 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:44.710 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:44.710 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:30:44.741 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:44.775 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:44.781 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:30:44.806 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:44.820 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 09:30:44.827 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 09:30:44.840 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:44.840 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:30:44.855 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 09:30:44.867 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 09:30:44.867 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 09:30:44.867 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:44.895 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 09:30:44.906 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:30:44.927 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:44.927 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:30:44.935 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 790(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:30:44.956 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:45.005 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:30:45.005 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:45.005 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:30:45.036 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:45.065 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:45.065 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:30:45.096 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:45.135 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:45.137 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:30:45.166 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:45.199 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:45.199 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:30:45.223 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:45.319 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:30:45.330 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 964(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":9,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597549506000,"version":10},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 09:30:45.391 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:30:55.109 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:30:55.109 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:30:55.149 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:30:55.149 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:30:55.149 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:30:55.173 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:30:55.173 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:30:55.173 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 10(Integer), 12(Integer), 1294647161643978752(String), 10(Integer)
2020-08-17 09:30:55.229 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:30:55.317 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:30:55.325 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 240(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":10,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597549506000,"version":10},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:30:55.381 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:32:35.439 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:32:35.441 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:32:35.485 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:32:35.488 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:32:35.491 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:32:35.543 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:32:35.544 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:32:35.545 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 11(Integer), 12(Integer), 1294647161643978752(String), 11(Integer)
2020-08-17 09:32:35.595 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:32:35.686 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:32:35.689 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 278(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":11,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599054000,"version":11},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:32:35.745 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:33:04.302 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:33:04.302 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:33:04.331 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:33:04.333 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:33:04.334 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:33:04.360 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:33:04.363 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:33:04.364 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 12(Integer), 12(Integer), 1294647161643978752(String), 12(Integer)
2020-08-17 09:33:04.417 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:33:04.501 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:33:04.502 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 248(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":12,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599155000,"version":12},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:33:04.561 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:33:42.053 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:33:42.053 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:33:42.085 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:33:42.085 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:33:42.093 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:33:42.118 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:33:42.118 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:33:42.118 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 13(Integer), 12(Integer), 1294647161643978752(String), 13(Integer)
2020-08-17 09:33:42.171 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:33:42.265 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:33:42.265 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 247(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":13,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599184000,"version":13},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:33:42.327 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:30.670 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:34:30.678 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:34:30.702 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:34:30.702 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:30.710 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:34:30.735 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:30.736 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:34:30.739 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 14(Integer), 12(Integer), 1294647161643978752(String), 14(Integer)
2020-08-17 09:34:30.794 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:34:30.886 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:30.888 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 238(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":14,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599221000,"version":14},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:34:30.947 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:39.157 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:34:39.159 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:34:39.196 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:34:39.204 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:39.204 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:34:39.228 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:39.236 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:34:39.236 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 15(Integer), 12(Integer), 1294647161643978752(String), 15(Integer)
2020-08-17 09:34:39.291 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:34:39.378 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:39.386 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 268(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":15,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599270000,"version":15},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:34:39.442 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:42.646 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:34:42.646 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:34:42.654 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:34:42.654 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:34:42.662 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:34:42.662 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:34:42.678 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:34:42.686 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:34:42.694 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:34:42.694 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:42.694 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:34:42.719 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:42.719 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:34:42.719 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:42.727 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:34:42.727 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:42.727 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:34:42.727 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 16(Integer), 12(Integer), 1294647161643978752(String), 16(Integer)
2020-08-17 09:34:42.751 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:42.777 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:34:42.777 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:42.785 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:42.793 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:34:42.833 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:42.873 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:42.873 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 227(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":16,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599278000,"version":16},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:34:42.873 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:42.873 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:34:42.897 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:42.929 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:42.937 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:42.937 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:34:42.969 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:42.993 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:42.993 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:34:43.025 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:43.057 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:43.057 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 419(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":15,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:34:43.113 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:43.699 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:34:43.699 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:34:43.731 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:34:43.754 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:43.754 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 1125(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:34:43.811 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:51.691 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 09:34:51.691 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: oops(String)
2020-08-17 09:34:51.723 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 09:34:51.763 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:51.763 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 104(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"2E677B91796CA6CB9FF54EDAF41855E2"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:34:51.819 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:52.096 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 09:34:52.096 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 09:34:52.104 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:34:52.112 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:34:52.112 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:34:52.112 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:34:52.112 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:34:52.112 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:34:52.128 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 09:34:52.128 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 09:34:52.136 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 09:34:52.144 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:34:52.144 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:34:52.144 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:34:52.168 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 09:34:52.184 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:52.184 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:52.184 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 72(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:34:52.184 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:34:52.184 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.192 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:34:52.200 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.200 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:34:52.224 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.232 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.240 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:52.248 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:52.256 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.256 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:34:52.264 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.264 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:34:52.288 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.288 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.344 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.344 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:34:52.344 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.344 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:34:52.376 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.376 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.416 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.416 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:34:52.416 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.416 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:34:52.440 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.440 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.480 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.480 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:34:52.480 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:34:52.488 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:34:52.512 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.512 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:34:52.544 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:52.544 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 440(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":16,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:34:52.544 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:34:52.552 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 448(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":16,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599282000,"version":17},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 09:34:52.602 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:34:52.610 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:35:25.021 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:35:25.021 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:35:25.053 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:35:25.061 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:35:25.061 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:35:25.086 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:35:25.093 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:35:25.093 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 17(Integer), 12(Integer), 1294647161643978752(String), 17(Integer)
2020-08-17 09:35:25.157 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:35:25.245 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:35:25.245 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 256(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":17,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599282000,"version":17},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:35:25.309 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:23.208 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:36:23.210 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:36:23.239 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:36:23.242 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:23.244 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:36:23.274 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:23.277 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:36:23.279 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 18(Integer), 12(Integer), 1294647161643978752(String), 18(Integer)
2020-08-17 09:36:23.335 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:36:23.428 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:23.429 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 254(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":18,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599324000,"version":18},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:36:23.489 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:25.465 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:36:25.473 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:36:25.473 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:36:25.481 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:36:25.481 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:36:25.481 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:36:25.481 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:36:25.489 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:36:25.497 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:36:25.521 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:36:25.521 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:36:25.521 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:36:25.521 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:25.521 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:36:25.529 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:25.529 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:36:25.545 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:25.553 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:36:25.553 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:25.553 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:36:25.553 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 19(Integer), 12(Integer), 1294647161643978752(String), 19(Integer)
2020-08-17 09:36:25.553 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:25.561 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:36:25.577 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:25.585 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:25.609 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:36:25.609 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:25.609 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:36:25.617 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:25.641 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:25.681 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:25.681 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:36:25.697 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:25.697 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 240(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":19,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599382000,"version":19},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:36:25.705 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:25.737 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:25.737 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:36:25.753 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:25.761 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:25.825 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:25.825 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:36:25.857 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:25.889 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:25.889 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 416(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":18,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:36:25.953 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:52.504 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:36:52.504 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:36:52.504 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:36:52.512 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:36:52.512 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:36:52.512 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:36:52.520 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:36:52.520 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:36:52.528 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:36:52.536 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:36:52.536 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:36:52.552 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:36:52.560 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:52.560 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:36:52.560 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:52.560 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:36:52.576 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:52.576 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:36:52.576 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:52.576 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 72(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:36:52.584 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:52.584 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:36:52.592 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 20(Integer), 12(Integer), 1294647161643978752(String), 20(Integer)
2020-08-17 09:36:52.600 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:52.624 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:52.632 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:52.640 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:36:52.640 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:52.640 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:36:52.664 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:52.696 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:52.696 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:36:52.728 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:52.728 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:52.728 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 240(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":20,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599385000,"version":20},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:36:52.760 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:52.760 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:36:52.784 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:52.784 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:36:52.816 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:36:52.816 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:36:52.840 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:36:52.872 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:36:52.872 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 368(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":19,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:36:52.936 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:37:49.228 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:37:49.236 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:37:49.236 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:37:49.236 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:37:49.236 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:37:49.236 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:37:49.252 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:37:49.252 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:37:49.260 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:37:49.268 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:37:49.284 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:37:49.284 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:37:49.284 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:37:49.292 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:37:49.292 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:37:49.300 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:37:49.308 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:37:49.308 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:37:49.316 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:37:49.316 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 88(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:37:49.316 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:37:49.324 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:37:49.324 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 21(Integer), 12(Integer), 1294647161643978752(String), 21(Integer)
2020-08-17 09:37:49.340 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:37:49.380 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:37:49.380 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:37:49.380 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:37:49.380 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:37:49.388 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:37:49.412 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:37:49.452 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:37:49.452 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:37:49.476 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:37:49.476 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:37:49.476 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 256(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":21,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599412000,"version":21},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:37:49.508 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:37:49.508 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:37:49.540 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:37:49.540 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:37:49.572 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:37:49.572 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:37:49.596 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:37:49.628 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:37:49.628 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 408(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":20,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:37:49.700 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:38:59.885 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:38:59.885 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:38:59.917 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:38:59.917 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:38:59.925 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:38:59.949 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:38:59.957 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:38:59.957 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 22(Integer), 12(Integer), 1294647161643978752(String), 22(Integer)
2020-08-17 09:39:00.013 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:39:00.104 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:00.112 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 255(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":22,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599469000,"version":22},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:39:00.168 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:39:01.295 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:39:01.295 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:39:01.295 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:39:01.303 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:39:01.303 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:39:01.303 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:39:01.303 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:39:01.303 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:39:01.327 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:39:01.327 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:39:01.327 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:39:01.335 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:39:01.335 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:01.343 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:39:01.359 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:01.367 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:01.367 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:01.367 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:01.383 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:39:01.383 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:39:01.383 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 72(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:39:01.383 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:39:01.383 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 23(Integer), 12(Integer), 1294647161643978752(String), 23(Integer)
2020-08-17 09:39:01.415 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:01.439 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:39:01.439 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:01.447 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:39:01.447 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:39:01.447 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:39:01.471 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:01.511 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:01.511 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:39:01.543 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:01.543 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:01.543 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 248(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":23,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599539000,"version":23},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:39:01.567 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:01.575 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:39:01.599 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:01.599 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:39:01.623 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:01.631 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:39:01.655 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:01.687 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:01.687 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 392(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":22,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:39:01.759 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:39:43.719 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:39:43.720 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:39:43.749 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:39:43.751 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:43.752 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:39:43.780 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:43.781 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:39:43.781 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 24(Integer), 12(Integer), 1294647161643978752(String), 24(Integer)
2020-08-17 09:39:43.834 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:39:43.926 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:43.926 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 236(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":24,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599541000,"version":24},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:39:43.982 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:39:50.895 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:50.896 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:39:50.904 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:39:50.905 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:39:50.951 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:39:50.963 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:39:50.964 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:39:50.965 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:39:50.992 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:39:50.996 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:39:50.997 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 25(Integer), 12(Integer), 1294647161643978752(String), 25(Integer)
2020-08-17 09:39:51.049 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:39:51.144 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:39:51.145 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 260(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":25,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599583000,"version":25},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:39:51.203 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:07.011 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:40:07.013 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:40:07.015 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:07.016 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:40:07.045 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:40:07.047 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:40:07.048 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:40:07.077 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:07.079 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:40:07.083 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:40:07.085 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 26(Integer), 12(Integer), 1294647161643978752(String), 26(Integer)
2020-08-17 09:40:07.145 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:40:07.233 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:07.234 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 255(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":26,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599590000,"version":26},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:40:07.295 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:09.160 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:40:09.168 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:40:09.168 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:40:09.168 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:40:09.168 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:40:09.168 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:40:09.168 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:40:09.168 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:40:09.192 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:40:09.192 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:40:09.192 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:40:09.192 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:40:09.192 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:40:09.200 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:40:09.224 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:40:09.224 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:40:09.224 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:09.224 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 27(Integer), 12(Integer), 1294647161643978752(String), 27(Integer)
2020-08-17 09:40:09.232 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:40:09.240 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:09.240 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:40:09.240 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:40:09.240 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:40:09.264 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:40:09.288 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:40:09.296 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:09.296 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:40:09.296 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:40:09.296 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:09.329 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:40:09.360 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:40:09.360 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:40:09.376 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:09.376 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 232(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599606000,"version":27},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:40:09.385 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:40:09.424 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:40:09.424 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:40:09.432 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:09.448 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:40:09.476 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:40:09.476 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:40:09.508 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:40:09.532 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:09.540 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 380(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":26,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:40:09.596 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:10.229 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:10.229 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:40:10.285 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:49.448 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:40:49.448 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:40:49.464 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:40:49.592 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:49.592 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=强啊王哥（此条五毛）, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 152(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 09:40:49.640 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:40:49.728 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:40:49.728 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:40:49.768 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:41:10.045 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:41:10.046 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:41:10.065 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:41:10.066 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:41:10.066 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:41:10.074 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:41:10.075 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:41:10.090 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:41:10.092 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:41:10.093 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 28(Integer), 12(Integer), 1294647161643978752(String), 28(Integer)
2020-08-17 09:41:10.129 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:41:10.136 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:41:10.189 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:41:10.191 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 167(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599608000,"version":28},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:41:10.234 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:41:21.384 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:41:21.384 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:41:21.409 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:41:21.459 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:41:21.459 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=芜湖   起飞！！！！, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 72(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 09:41:21.499 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:41:21.579 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:41:21.579 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:41:21.627 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:41:53.087 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 09:41:53.087 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: qq1437631334(String)
2020-08-17 09:41:53.127 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 09:41:53.167 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:41:53.167 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 80(Long), {"code":400006,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-08-17 09:41:53.207 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:01.059 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 09:42:01.059 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: pink(String)
2020-08-17 09:42:01.075 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 09:42:01.100 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:01.100 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=pink, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 40(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"token":"8E464400999D12C9BDDF4B63DDA4996A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:42:01.139 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:01.395 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:42:01.395 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:42:01.411 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:42:01.419 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:42:01.419 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:42:01.419 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 09:42:01.419 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 09:42:01.427 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:42:01.427 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:42:01.435 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:01.435 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:42:01.443 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:42:01.451 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 09:42:01.451 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 09:42:01.451 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 09:42:01.451 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:42:01.475 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.475 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:01.475 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:42:01.483 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 09:42:01.483 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:01.483 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:42:01.499 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.515 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.515 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:42:01.531 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.531 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:42:01.539 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.547 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:01.563 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.571 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.571 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:42:01.595 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.595 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:42:01.595 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.619 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.627 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.627 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:42:01.651 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.651 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:42:01.659 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.675 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.691 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.691 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:42:01.707 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.707 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:42:01.715 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.739 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.739 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:01.747 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:42:01.763 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:01.771 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 360(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:42:01.771 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:01.803 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:01.803 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 400(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 09:42:01.827 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:01.859 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:07.668 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:42:07.668 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:07.668 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808463692021760(String)
2020-08-17 09:42:07.668 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:42:07.740 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:07.740 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:42:07.748 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:42:07.748 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:42:07.772 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:42:07.772 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:42:07.780 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: docker 安装 mysql5.7(String), http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">1.安装mysql5.7 docker镜像</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">拉取官方mysql5.7镜像&nbsp;</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs apache" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attribute" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">docker</span> pull mysql:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5</span>.<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="" width="742" height="313" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">查看镜像库</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">docker</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">images</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;<img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="" width="799" height="105" /></p>
<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">2.创建mysql容器</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在本地创建mysql的映射目录</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">mkdir -p <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data /</span>root<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>logs <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql/conf</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">touch</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">my.cnf</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">创建容器,将数据,日志,配置文件映射到本机</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker run -p <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span> --name mysql -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/conf:/</span>etc<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>conf.d -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/logs:/</span>logs -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data:/</span>var<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">mysql:</span><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5.7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-d:</strong>&nbsp;后台运行容器</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-e&nbsp;</strong>设置参数</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="" width="1200" height="81" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">启动mysql容器</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs sql" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;">start</span> mysql</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="" width="473" height="64" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;查看/root/mysql/data目录是否有数据文件</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="" width="1172" height="99" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">使用工具连接测试</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">参考链接：<a href="https://blog.csdn.net/weixin_40461281/article/details/92610876">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>(String), 1(Integer), 3(Integer), 14(Integer), 123(Integer), 1293808463692021760(String), 4(Integer)
2020-08-17 09:42:07.852 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:42:07.934 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:07.934 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, PUT(String), 306(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:42:08.014 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:16.301 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:42:16.301 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808463692021760(String)
2020-08-17 09:42:16.373 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:42:16.477 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:16.485 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=很棒啊 很实用, commentUser=null, commentBlog=null, commentBlogId=1293808463692021760, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 176(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 09:42:16.541 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:42:16.701 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:42:16.701 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, GET(String), 96(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:42:16.773 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:08.649 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:43:08.650 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:43:08.661 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:43:08.662 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:43:08.663 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:43:08.663 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:43:08.669 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:43:08.678 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:43:08.681 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808463692021760(String)
2020-08-17 09:43:08.693 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:43:08.694 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:43:08.697 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:08.697 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:43:08.729 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:08.730 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 67(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:43:08.731 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:08.732 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:08.732 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, GET(String), 71(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:43:08.733 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:43:08.745 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:08.746 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:43:08.748 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:08.748 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:43:08.758 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:08.775 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:08.777 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:43:08.778 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: docker 安装 mysql5.7(String), http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">1.安装mysql5.7 docker镜像</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">拉取官方mysql5.7镜像&nbsp;</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs apache" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attribute" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">docker</span> pull mysql:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5</span>.<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="" width="742" height="313" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">查看镜像库</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">docker</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">images</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;<img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="" width="799" height="105" /></p>
<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">2.创建mysql容器</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在本地创建mysql的映射目录</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">mkdir -p <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data /</span>root<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>logs <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql/conf</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">touch</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">my.cnf</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">创建容器,将数据,日志,配置文件映射到本机</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker run -p <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span> --name mysql -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/conf:/</span>etc<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>conf.d -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/logs:/</span>logs -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data:/</span>var<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">mysql:</span><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5.7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-d:</strong>&nbsp;后台运行容器</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-e&nbsp;</strong>设置参数</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="" width="1200" height="81" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">启动mysql容器</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs sql" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;">start</span> mysql</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="" width="473" height="64" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;查看/root/mysql/data目录是否有数据文件</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="" width="1172" height="99" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">使用工具连接测试</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">参考链接：<a href="https://blog.csdn.net/weixin_40461281/article/details/92610876">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>(String), 1(Integer), 4(Integer), 14(Integer), 123(Integer), 1293808463692021760(String), 5(Integer)
2020-08-17 09:43:08.790 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:08.802 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:08.803 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:43:08.805 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:08.829 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:08.854 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:43:08.860 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:08.861 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:43:08.886 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:08.913 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:08.914 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:43:08.939 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:08.942 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:08.943 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, PUT(String), 292(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":4,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599727000,"version":5},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:43:08.974 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:08.976 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:43:09.013 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:09.025 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:09.046 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:09.047 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 386(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:43:09.115 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:34.551 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:43:34.552 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808463692021760(String)
2020-08-17 09:43:34.555 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:43:34.556 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:43:34.557 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:43:34.558 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:43:34.559 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:43:34.560 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:43:34.598 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:43:34.598 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:43:34.598 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:43:34.624 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:43:34.626 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:34.628 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:43:34.633 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:34.634 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:43:34.635 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:34.636 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 78(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:43:34.638 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:34.639 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 79(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:43:34.651 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:34.652 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, GET(String), 76(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:43:34.654 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:34.656 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:43:34.659 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: docker 安装 mysql5.7(String), http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">1.安装mysql5.7 docker镜像</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">拉取官方mysql5.7镜像&nbsp;</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs apache" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attribute" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">docker</span> pull mysql:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5</span>.<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="" width="742" height="313" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">查看镜像库</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">docker</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">images</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;<img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="" width="799" height="105" /></p>
<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">2.创建mysql容器</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在本地创建mysql的映射目录</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">mkdir -p <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data /</span>root<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>logs <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql/conf</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">touch</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">my.cnf</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">创建容器,将数据,日志,配置文件映射到本机</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker run -p <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span> --name mysql -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/conf:/</span>etc<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>conf.d -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/logs:/</span>logs -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data:/</span>var<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">mysql:</span><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5.7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-d:</strong>&nbsp;后台运行容器</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-e&nbsp;</strong>设置参数</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="" width="1200" height="81" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">启动mysql容器</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs sql" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;">start</span> mysql</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="" width="473" height="64" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;查看/root/mysql/data目录是否有数据文件</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="" width="1172" height="99" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">使用工具连接测试</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">参考链接：<a href="https://blog.csdn.net/weixin_40461281/article/details/92610876">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>(String), 1(Integer), 5(Integer), 14(Integer), 123(Integer), 1293808463692021760(String), 6(Integer)
2020-08-17 09:43:34.661 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:34.698 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:34.702 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:34.702 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:43:34.703 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:34.719 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:34.741 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:43:34.742 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:34.771 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:34.772 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:43:34.800 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:34.834 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:34.836 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, PUT(String), 311(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":5,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599788000,"version":6},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:43:34.837 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:34.838 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:43:34.865 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:34.904 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:43:34.905 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:43:34.906 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:43:34.931 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:43:34.961 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:43:34.962 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 412(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:43:35.018 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:13.911 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 09:44:13.913 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:44:13.939 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 09:44:13.976 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:13.978 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 82(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:44:14.038 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:17.077 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 09:44:17.077 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 09:44:17.104 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 09:44:17.105 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 09:44:17.106 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 09:44:17.133 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 09:44:17.167 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:17.168 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:44:17.199 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:17.231 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:17.233 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:44:17.260 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:17.289 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:17.289 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:44:17.316 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:17.348 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:17.349 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:44:17.376 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:17.405 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:17.406 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:44:17.435 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:17.467 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:17.468 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 389(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":5,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599814000,"version":7},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 09:44:17.525 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:19.130 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:44:19.131 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808463692021760(String)
2020-08-17 09:44:19.166 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:19.167 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, GET(String), 69(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:44:19.194 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:44:19.195 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:19.196 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:44:19.231 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:19.232 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:44:19.233 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: docker 安装 mysql5.7(String), http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">1.安装mysql5.7 docker镜像</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">拉取官方mysql5.7镜像&nbsp;</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs apache" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attribute" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">docker</span> pull mysql:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5</span>.<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="" width="742" height="313" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">查看镜像库</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">docker</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">images</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;<img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="" width="799" height="105" /></p>
<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">2.创建mysql容器</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在本地创建mysql的映射目录</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">mkdir -p <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data /</span>root<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>logs <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql/conf</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">touch</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">my.cnf</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">创建容器,将数据,日志,配置文件映射到本机</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker run -p <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span> --name mysql -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/conf:/</span>etc<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>conf.d -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/logs:/</span>logs -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data:/</span>var<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">mysql:</span><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5.7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-d:</strong>&nbsp;后台运行容器</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-e&nbsp;</strong>设置参数</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="" width="1200" height="81" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">启动mysql容器</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs sql" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;">start</span> mysql</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="" width="473" height="64" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;查看/root/mysql/data目录是否有数据文件</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="" width="1172" height="99" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">使用工具连接测试</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">参考链接：<a href="https://blog.csdn.net/weixin_40461281/article/details/92610876">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>(String), 1(Integer), 6(Integer), 14(Integer), 123(Integer), 1293808463692021760(String), 7(Integer)
2020-08-17 09:44:19.237 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:19.299 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:44:19.387 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:19.388 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, PUT(String), 292(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":6,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599814000,"version":7},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:44:19.461 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:31.229 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:44:31.230 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:44:31.233 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:44:31.233 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:44:31.235 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:44:31.235 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:44:31.250 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:44:31.250 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:44:31.251 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808463692021760(String)
2020-08-17 09:44:31.259 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:44:31.262 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:44:31.272 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:31.273 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:44:31.288 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:31.289 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 66(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:44:31.291 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:31.294 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:31.295 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 65(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:44:31.318 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:44:31.320 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:31.321 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:44:31.321 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:31.321 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:44:31.344 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:31.347 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:31.348 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:44:31.349 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:31.349 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: docker 安装 mysql5.7(String), http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">1.安装mysql5.7 docker镜像</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">拉取官方mysql5.7镜像&nbsp;</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs apache" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attribute" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">docker</span> pull mysql:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5</span>.<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="" width="742" height="313" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">查看镜像库</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">docker</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">images</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;<img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="" width="799" height="105" /></p>
<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">2.创建mysql容器</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在本地创建mysql的映射目录</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">mkdir -p <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data /</span>root<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>logs <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql/conf</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">touch</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">my.cnf</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">创建容器,将数据,日志,配置文件映射到本机</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker run -p <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span> --name mysql -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/conf:/</span>etc<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>conf.d -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/logs:/</span>logs -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data:/</span>var<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">mysql:</span><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5.7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-d:</strong>&nbsp;后台运行容器</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-e&nbsp;</strong>设置参数</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="" width="1200" height="81" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">启动mysql容器</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs sql" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;">start</span> mysql</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="" width="473" height="64" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;查看/root/mysql/data目录是否有数据文件</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="" width="1172" height="99" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">使用工具连接测试</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">参考链接：<a href="https://blog.csdn.net/weixin_40461281/article/details/92610876">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>(String), 1(Integer), 7(Integer), 14(Integer), 123(Integer), 1293808463692021760(String), 8(Integer)
2020-08-17 09:44:31.354 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:31.365 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:31.365 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:44:31.389 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:31.415 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:44:31.417 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:31.418 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:44:31.436 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:31.459 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:31.460 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:44:31.483 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:31.504 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:31.505 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 289(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:44:31.514 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:31.515 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, PUT(String), 296(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599858000,"version":8},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:44:31.549 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:31.588 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:57.136 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 09:44:57.136 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 09:44:57.162 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 09:44:57.164 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 09:44:57.165 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 09:44:57.196 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 09:44:57.228 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:57.228 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:44:57.254 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:57.285 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:57.285 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:44:57.315 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:57.347 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:57.348 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:44:57.374 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:57.405 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:57.407 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:44:57.434 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:57.465 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:57.466 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:44:57.493 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:57.535 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:57.536 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 454(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 09:44:57.592 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:44:59.471 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:44:59.473 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:44:59.502 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:44:59.503 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:44:59.503 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:44:59.531 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:44:59.533 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:44:59.533 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 29(Integer), 12(Integer), 1294647161643978752(String), 29(Integer)
2020-08-17 09:44:59.589 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:44:59.676 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:44:59.677 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 233(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":29,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:44:59.734 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:45:36.709 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:45:36.709 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:45:36.736 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:45:36.737 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:45:36.743 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:45:36.744 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:45:36.804 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:45:36.805 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:45:36.806 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:45:36.808 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:45:36.810 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:45:36.846 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:45:36.847 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:45:36.847 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 149(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:45:36.848 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:45:36.848 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:45:36.850 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:45:36.851 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:45:36.851 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:45:36.852 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 148(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:45:36.880 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:45:36.880 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:45:36.881 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:45:36.881 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 30(Integer), 12(Integer), 1294647161643978752(String), 30(Integer)
2020-08-17 09:45:36.902 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:45:36.910 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:45:36.911 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:45:36.916 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:45:36.934 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:45:36.940 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:45:36.970 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:45:36.971 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:45:36.996 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:45:37.027 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:45:37.029 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 337(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":30,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599899000,"version":30},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:45:37.030 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:45:37.031 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:45:37.057 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:45:37.087 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:45:37.088 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:45:37.088 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:45:37.114 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:45:37.148 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:45:37.149 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 455(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":29,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:45:37.205 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:47:32.797 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:47:32.799 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 09:47:32.868 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:48:31.075 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:48:31.078 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 09:48:31.140 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:49:19.435 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:49:19.436 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294534531398889472(String), [1294534531398889472](String), 1(Integer), null, GET(String), 35(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 09:49:19.512 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:50:25.766 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 09:51:03.284 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:51:03.284 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:51:03.285 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:51:03.298 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:51:03.350 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:51:03.350 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:51:03.350 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:51:03.351 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:51:03.403 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:51:03.405 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:51:03.405 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:51:03.406 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:51:03.426 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:03.430 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:51:03.450 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:03.458 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:03.472 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:51:03.499 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:03.504 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:51:03.506 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 31(Integer), 12(Integer), 1294647161643978752(String), 31(Integer)
2020-08-17 09:51:03.534 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:03.535 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:51:03.550 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:51:03.563 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:03.570 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:03.573 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 368(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:51:03.578 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:03.580 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 374(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:51:03.581 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:03.596 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 371(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:51:03.601 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:03.602 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:51:03.630 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:03.631 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:03.634 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:03.639 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:03.641 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 437(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":31,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599936000,"version":31},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:51:03.661 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:03.662 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:03.663 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:51:03.687 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:03.691 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:03.723 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:03.724 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:51:03.751 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:03.784 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:03.786 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 581(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":30,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:51:03.845 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:06.696 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:51:06.697 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:51:06.700 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:51:06.700 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:51:06.716 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:51:06.735 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:51:06.739 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:51:06.739 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:51:06.739 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:51:06.740 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:51:06.771 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:51:06.773 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:06.774 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 75(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:51:06.776 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:51:06.778 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:06.779 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:51:06.780 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:06.780 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:51:06.781 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:06.783 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 75(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:51:06.800 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:06.801 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:51:06.808 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:06.810 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:06.812 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:51:06.813 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 32(Integer), 12(Integer), 1294647161643978752(String), 32(Integer)
2020-08-17 09:51:06.821 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:06.837 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:06.838 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:51:06.842 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:06.859 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:06.864 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:06.867 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:51:06.899 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:06.900 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:51:06.927 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:06.963 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:06.963 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:51:06.964 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:06.964 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 269(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":32,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600263000,"version":32},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:51:06.990 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:07.020 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:51:07.021 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:51:07.025 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:51:07.045 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:51:07.082 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:51:07.083 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 381(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":31,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:51:07.136 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:53:42.758 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:53:42.759 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:53:42.765 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:53:42.766 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:53:42.786 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:53:42.802 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:53:42.803 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:53:42.827 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:53:42.833 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:53:42.834 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:53:42.835 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 33(Integer), 12(Integer), 1294647161643978752(String), 33(Integer)
2020-08-17 09:53:42.886 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:53:42.969 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:53:42.970 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 245(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":33,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600266000,"version":33},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:53:43.030 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:53:55.688 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:53:55.688 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:53:55.697 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:53:55.698 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:53:55.725 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:53:55.727 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:53:55.729 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:53:55.758 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:53:55.760 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:53:55.761 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 34(Integer), 12(Integer), 1294647161643978752(String), 34(Integer)
2020-08-17 09:53:55.763 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:53:55.814 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:53:55.896 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:53:55.897 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 236(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":34,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600422000,"version":34},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:53:55.952 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:02.276 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:54:02.277 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:54:02.295 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:02.296 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:02.305 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:54:02.309 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:02.311 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:54:02.344 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:02.346 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:54:02.346 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 35(Integer), 12(Integer), 1294647161643978752(String), 35(Integer)
2020-08-17 09:54:02.361 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:02.401 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:54:02.521 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:02.523 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 238(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":35,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600435000,"version":35},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:54:02.579 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:12.711 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:54:12.714 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:54:12.719 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:12.720 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:12.750 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:54:12.758 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:12.761 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:54:12.782 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:12.788 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:12.790 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:54:12.796 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 36(Integer), 12(Integer), 1294647161643978752(String), 36(Integer)
2020-08-17 09:54:12.848 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:54:12.955 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:12.959 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 261(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":36,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600442000,"version":36},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:54:13.020 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:22.626 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:54:22.626 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:54:22.631 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:54:22.632 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:54:22.635 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:54:22.636 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:54:22.646 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:54:22.647 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:54:22.648 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:22.649 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:22.655 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:54:22.662 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:54:22.663 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:54:22.678 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:54:22.679 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:22.679 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:54:22.684 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:22.685 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 63(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:22.693 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:22.694 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:54:22.696 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:22.697 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:22.700 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:22.704 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:22.706 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:54:22.709 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 37(Integer), 12(Integer), 1294647161643978752(String), 37(Integer)
2020-08-17 09:54:22.721 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:22.742 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:22.751 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:22.752 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:54:22.753 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:22.762 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:54:22.782 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:22.816 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:22.817 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:54:22.844 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:22.866 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:22.867 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 238(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":37,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600452000,"version":37},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:54:22.880 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:22.881 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:54:22.908 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:22.935 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:22.939 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:22.940 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:54:22.967 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:23.005 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:23.005 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 367(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":36,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:54:23.076 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:52.045 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:54:52.046 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:54:52.046 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:54:52.047 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:54:52.049 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:54:52.050 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:54:52.063 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:54:52.064 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:54:52.071 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:54:52.078 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:54:52.082 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:54:52.085 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:52.086 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:52.093 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:54:52.095 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:52.096 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:54:52.105 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:52.106 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 61(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:52.115 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:52.115 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:54:52.116 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:52.117 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 68(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:54:52.123 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:52.124 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:54:52.128 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 38(Integer), 12(Integer), 1294647161643978752(String), 38(Integer)
2020-08-17 09:54:52.131 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:52.142 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:52.160 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:52.171 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:52.172 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:54:52.176 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:52.184 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:54:52.198 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:52.230 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:52.233 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:54:52.261 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:52.278 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:52.280 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 241(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":38,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600462000,"version":38},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:54:52.299 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:52.302 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:54:52.331 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:52.351 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:54:52.363 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:54:52.364 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:54:52.392 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:54:52.423 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:54:52.423 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 384(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":37,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:54:52.482 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:55:05.455 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:55:05.456 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:55:05.465 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:55:05.466 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:55:05.483 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:55:05.484 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:55:05.484 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:55:05.510 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:55:05.513 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:55:05.514 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 39(Integer), 12(Integer), 1294647161643978752(String), 39(Integer)
2020-08-17 09:55:05.530 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:55:05.566 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:55:05.699 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:55:05.702 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 256(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":39,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600491000,"version":39},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:55:05.763 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:55:07.047 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:55:07.047 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:55:07.048 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:55:07.049 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:55:07.050 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:55:07.050 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:55:07.058 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:55:07.059 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:55:07.065 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:55:07.066 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:55:07.076 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:55:07.078 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:55:07.080 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:55:07.089 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:55:07.090 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:55:07.093 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:55:07.107 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:55:07.110 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 69(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:55:07.111 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:55:07.118 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:55:07.119 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:55:07.119 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:55:07.121 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:55:07.120 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:55:07.122 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:55:07.122 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 40(Integer), 12(Integer), 1294647161643978752(String), 40(Integer)
2020-08-17 09:55:07.150 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:55:07.167 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:55:07.173 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:55:07.180 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:55:07.184 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:55:07.186 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:55:07.215 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:55:07.249 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:55:07.250 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:55:07.261 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:55:07.263 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 227(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":40,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600505000,"version":40},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:55:07.278 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:55:07.321 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:55:07.323 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:55:07.325 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:55:07.354 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:55:07.386 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:55:07.387 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:55:07.416 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:55:07.448 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:55:07.449 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 403(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":39,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:55:07.509 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:56:53.667 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 09:56:53.668 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: oops(String)
2020-08-17 09:56:53.697 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 09:56:53.733 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:56:53.734 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 81(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"5E3A203E1795C973736EA6C83D1A3AB6"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 09:56:53.791 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:56:53.949 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 09:56:53.949 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 09:56:53.957 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 09:56:53.958 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:56:53.960 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 09:56:53.961 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 09:56:53.973 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 09:56:53.974 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 09:56:53.976 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:56:53.977 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:56:53.980 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 09:56:53.988 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 09:56:53.989 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 09:56:54.003 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 09:56:54.003 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:56:54.004 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:56:54.019 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:56:54.019 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 62(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:56:54.022 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:56:54.022 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:56:54.022 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 67(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:56:54.023 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:56:54.023 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:56:54.031 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:56:54.035 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 09:56:54.037 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 41(Integer), 12(Integer), 1294647161643978752(String), 41(Integer)
2020-08-17 09:56:54.050 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:56:54.076 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:56:54.080 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:56:54.087 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:56:54.089 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:56:54.091 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:56:54.119 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:56:54.154 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:56:54.155 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 09:56:54.184 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:56:54.186 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:56:54.188 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 237(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600506000,"version":41},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:56:54.219 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:56:54.220 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:56:54.248 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:56:54.248 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:56:54.282 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:56:54.284 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:56:54.312 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:56:54.346 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:56:54.347 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 392(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":40,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 09:56:54.423 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:57:19.753 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 09:57:19.754 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 09:57:19.784 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 09:57:19.837 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:57:19.837 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:57:19.896 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:57:20.600 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 09:57:20.601 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 09:57:20.630 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 09:57:20.639 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 09:57:20.640 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 09:57:20.670 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 09:57:20.702 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:20.702 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:57:20.731 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:20.765 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:20.768 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:57:20.799 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:20.834 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:20.835 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:57:20.864 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:20.897 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:20.898 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:57:20.911 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog where deleted = 0 order by created_time desc 
2020-08-17 09:57:20.912 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-08-17 09:57:20.926 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:20.939 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 8
2020-08-17 09:57:20.957 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:20.957 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:57:20.977 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:57:20.980 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 66(Long), {"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:57:20.984 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:21.038 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:57:21.052 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:57:21.053 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 502(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 09:57:21.114 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:57:21.972 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 09:57:21.973 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 09:57:22.003 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 1
2020-08-17 09:57:22.004 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 09:57:22.005 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 个人(String), 我的个人(String), 48(Integer), 1(Integer), 1(String), 49(Integer)
2020-08-17 09:57:22.060 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:57:22.152 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:57:22.153 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, PUT(String), 219(Long), {"code":20000,"data":{"aboutContent":"我的个人","aboutId":"1","aboutRead":48,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597522868000,"version":49},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:57:22.222 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:57:22.440 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog where deleted = 0 order by created_time desc 
2020-08-17 09:57:22.441 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-08-17 09:57:22.471 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 8
2020-08-17 09:57:22.502 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:57:22.502 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 69(Long), {"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 09:57:22.561 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:57:26.679 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 09:57:26.681 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 09:57:26.709 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 1
2020-08-17 09:57:26.713 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 09:57:26.714 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 个人(String), 我的个人(String), 49(Integer), 1(Integer), 1(String), 50(Integer)
2020-08-17 09:57:26.773 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 09:57:26.865 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:57:26.866 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, PUT(String), 214(Long), {"code":20000,"data":{"aboutContent":"我的个人","aboutId":"1","aboutRead":49,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597600641000,"version":50},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 09:57:26.931 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 09:57:27.566 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 09:57:27.566 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 09:57:27.594 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 09:57:27.596 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 09:57:27.597 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 09:57:27.630 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 09:57:27.670 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:27.671 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 09:57:27.699 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:27.734 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:27.736 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:57:27.764 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:27.799 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:27.800 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 09:57:27.829 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:27.862 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:27.863 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 09:57:27.892 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:27.925 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 09:57:27.928 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 09:57:27.956 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 09:57:27.988 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 09:57:27.988 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 423(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 09:57:28.046 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:10:39.514 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:10:39.515 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: wsy143763(String)
2020-08-17 10:10:39.541 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:10:39.567 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, `header`, nickname, user_email) values (?, ?, ?, ?, ?, ?) 
2020-08-17 10:10:39.568 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: wsy143763(String), d4c5c1db2e99021e03201f22bcdde6fc(String), 1(Integer), null, zz147258(String), 2388688213@qq.com(String)
2020-08-17 10:10:39.627 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:10:39.655 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:10:39.656 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=1, header=null, nickname=zz147258, userEmail=2388688213@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 2185(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 10:10:39.710 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:10:51.235 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:10:51.236 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: qq143763(String)
2020-08-17 10:10:51.263 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:10:51.313 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:10:51.314 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=qq143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 76(Long), {"code":400006,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-08-17 10:10:51.369 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:10:57.312 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:10:57.313 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: wsy143763(String)
2020-08-17 10:10:57.339 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 10:10:57.380 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:10:57.382 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 65(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597601439000,"nickname":"zz147258","password":"d4c5c1db2e99021e03201f22bcdde6fc","sex":1,"updateTime":1597601439000,"userEmail":"2388688213@qq.com","userId":13,"username":"wsy143763","version":1},"token":"0A5A6622F27F4C10444415F4D3945FB3"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 10:10:57.454 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:10:57.751 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 10:10:57.751 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 10:10:57.752 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 10:10:57.752 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 10:10:57.775 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 10:10:57.779 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 10:10:57.831 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:10:57.833 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 92(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:10:57.833 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:10:57.834 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 94(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:10:57.893 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:10:57.894 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:10:58.716 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 10:10:58.717 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 10:10:58.747 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 10:10:58.781 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:10:58.784 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:10:58.811 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:10:58.842 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:10:58.842 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:10:58.871 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:10:58.902 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:10:58.903 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 10:10:58.953 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:10:58.991 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:10:58.991 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:10:59.016 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:10:59.050 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:10:59.052 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:10:59.082 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:10:59.115 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:10:59.117 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 1397(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 10:10:59.172 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:11:01.742 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 10:11:01.743 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 10:11:01.768 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 10:11:01.771 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 10:11:01.772 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 10:11:01.801 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 10:11:01.836 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:11:01.837 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:11:01.864 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:11:01.897 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:11:01.899 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:11:01.924 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:11:01.961 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:11:01.965 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:11:01.991 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:11:02.021 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:11:02.022 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:11:02.049 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:11:02.083 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:11:02.085 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:11:02.110 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:11:02.143 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:11:02.144 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 402(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 10:11:02.202 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:11:05.117 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 10:11:05.118 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 10:11:05.127 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:11:05.130 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:11:05.147 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 10:11:05.149 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:11:05.149 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:11:05.174 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:11:05.175 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 10:11:05.175 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 42(Integer), 12(Integer), 1294647161643978752(String), 42(Integer)
2020-08-17 10:11:05.181 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:11:05.226 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 10:11:05.317 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:11:05.318 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 229(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":42,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 10:11:05.374 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:13:57.969 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 10:13:57.969 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 10:13:57.972 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 10:13:57.973 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 10:13:57.994 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 10:13:57.995 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 10:13:57.996 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 10:13:58.000 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 10:13:58.024 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:13:58.025 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:13:58.028 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 10:13:58.031 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:13:58.032 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:13:58.032 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:13:58.033 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 68(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:13:58.049 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:13:58.066 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:13:58.068 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 10:13:58.070 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 43(Integer), 12(Integer), 1294647161643978752(String), 43(Integer)
2020-08-17 10:13:58.077 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:13:58.078 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:13:58.090 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:13:58.100 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:13:58.125 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 10:13:58.128 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:13:58.129 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 10:13:58.152 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:13:58.175 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:13:58.176 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:13:58.197 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:13:58.207 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:13:58.208 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 247(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":43,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601464000,"version":43},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 10:13:58.222 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:13:58.223 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:13:58.247 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:13:58.263 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:13:58.271 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:13:58.271 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 314(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":42,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 10:13:58.318 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:13:58.962 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 10:13:58.963 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 10:13:58.985 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 10:13:59.003 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:13:59.003 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:13:59.010 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:13:59.011 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 1052(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:13:59.063 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:13:59.063 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:06.261 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 10:14:06.262 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 10:14:06.269 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 10:14:06.270 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 10:14:06.271 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 10:14:06.271 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 10:14:06.284 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 10:14:06.285 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 10:14:06.285 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 10:14:06.298 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 10:14:06.297 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 10:14:06.310 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:06.311 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:14:06.329 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:06.330 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:14:06.331 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:06.332 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 66(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:14:06.340 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 10:14:06.341 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:06.342 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:14:06.355 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:06.368 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:06.370 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 10:14:06.371 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 44(Integer), 12(Integer), 1294647161643978752(String), 44(Integer)
2020-08-17 10:14:06.387 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:06.388 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:06.389 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 60(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:14:06.397 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:06.422 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 10:14:06.425 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:06.427 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:14:06.451 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:06.451 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:06.483 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:06.485 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 10:14:06.514 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:06.517 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:06.518 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 258(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":44,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601637000,"version":44},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 10:14:06.545 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:06.548 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:14:06.573 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:06.575 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:06.607 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:06.607 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:14:06.633 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:06.664 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:06.666 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 400(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":43,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 10:14:06.727 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:28.702 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:14:28.703 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: wsy143763(String)
2020-08-17 10:14:28.731 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:14:28.764 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, `header`, nickname, user_email) values (?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:28.767 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: wsy143763(String), d4c5c1db2e99021e03201f22bcdde6fc(String), 1(Integer), null, nick(String), 2388688213@qq.com(String)
2020-08-17 10:14:28.821 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:28.853 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:28.854 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=1, header=null, nickname=nick, userEmail=2388688213@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 155(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 10:14:28.915 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:50.584 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:14:50.585 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: wsy143763(String)
2020-08-17 10:14:50.609 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 10:14:50.640 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:50.641 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 57(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597601668000,"nickname":"nick","password":"d4c5c1db2e99021e03201f22bcdde6fc","sex":1,"updateTime":1597601668000,"userEmail":"2388688213@qq.com","userId":14,"username":"wsy143763","version":1},"token":"0C57DE4D263F8707D5A0BF3AB7A2890A"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 10:14:50.695 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:50.901 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 10:14:50.902 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 10:14:50.904 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 10:14:50.905 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 10:14:50.906 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 10:14:50.906 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 10:14:50.907 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 10:14:50.907 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 10:14:50.932 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 10:14:50.932 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 10:14:50.933 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 10:14:50.934 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:50.935 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 10:14:50.936 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:14:50.941 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:50.942 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:14:50.958 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:50.959 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 85(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:14:50.964 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:50.965 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 10:14:50.967 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 45(Integer), 12(Integer), 1294647161643978752(String), 45(Integer)
2020-08-17 10:14:50.968 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:50.968 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 88(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:14:50.969 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:50.969 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:14:50.995 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:51.003 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:51.005 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:51.020 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 10:14:51.024 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:51.026 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:51.027 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:14:51.052 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:51.082 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:51.083 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 10:14:51.107 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:51.108 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 236(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601646000,"version":45},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 10:14:51.108 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:51.136 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:51.136 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:14:51.163 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:14:51.163 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:51.193 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:14:51.194 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:14:51.219 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:14:51.250 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:14:51.251 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 373(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":44,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 10:14:51.304 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:15:23.471 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 10:15:23.473 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 10:15:23.474 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 10:15:23.475 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 10:15:23.476 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 10:15:23.476 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 10:15:23.499 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 10:15:23.502 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 10:15:23.504 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 10:15:23.533 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:15:23.534 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 68(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:15:23.534 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:15:23.535 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 69(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:15:23.536 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:15:23.536 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:15:23.560 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:15:23.586 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:15:23.593 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:15:23.595 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:15:23.597 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:15:23.623 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:15:23.651 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:15:23.651 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 10:15:23.676 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:15:23.704 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:15:23.705 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:15:23.732 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:15:23.762 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:15:23.763 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:15:23.788 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:15:23.817 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:15:23.818 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 355(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 10:15:23.873 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:29:31.145 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 10:29:54.992 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:29:55.024 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 999(String)
2020-08-17 10:29:55.085 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:29:55.122 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, `header`, nickname, user_email) values (?, ?, ?, ?, ?, ?) 
2020-08-17 10:29:55.135 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: 999(String), e10adc3949ba59abbe56e057f20f883e(String), 2(Integer), null, 999(String), 1231123123(String)
2020-08-17 10:29:55.197 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:29:55.317 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:29:55.319 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=999, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=2, header=null, nickname=999, userEmail=1231123123, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 395(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 10:29:55.379 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:30:01.039 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:30:01.040 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 999(String)
2020-08-17 10:30:01.070 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 10:30:01.115 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:30:01.117 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=999, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 77(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597602594000,"nickname":"999","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597602594000,"userEmail":"1231123123","userId":16,"username":"999","version":1},"token":"95178B19B6DAB0C64DCCF243035164CB"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 10:30:01.189 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:30:01.537 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 10:30:01.538 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 10:30:01.547 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 10:30:01.549 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 10:30:01.550 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 10:30:01.553 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 10:30:01.571 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 10:30:01.576 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 10:30:01.586 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 10:30:01.602 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:30:01.603 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 76(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:30:01.616 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:30:01.618 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 90(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:30:01.620 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:30:01.621 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:30:01.650 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:30:01.653 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:30:01.661 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:30:01.681 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:30:01.682 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:30:01.710 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:30:01.743 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:30:01.743 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 10:30:01.773 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:30:01.805 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:30:01.806 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:30:01.835 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:30:01.870 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:30:01.871 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:30:01.899 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:30:01.938 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:30:01.939 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 404(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 10:30:02.004 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:32:32.555 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:32:32.556 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 123123(String)
2020-08-17 10:32:32.585 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:32:32.616 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, `header`, nickname, user_email) values (?, ?, ?, ?, ?, ?) 
2020-08-17 10:32:32.617 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: 123123(String), 4297f44b13955235245b2497399d7a93(String), 1(Integer), null, adqwe(String), qweqwe(String)
2020-08-17 10:32:32.675 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:32:32.705 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:32:32.706 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=123123, password=4297f44b13955235245b2497399d7a93, name=null, sex=1, header=null, nickname=adqwe, userEmail=qweqwe, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 151(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 10:32:32.772 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:39:54.717 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 10:42:21.821 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:42:21.867 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 111111(String)
2020-08-17 10:42:21.918 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:42:21.947 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, nickname, user_email) values (?, ?, ?, ?, ?, ?) 
2020-08-17 10:42:21.950 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: 111111(String), 96e79218965eb72c92a549dd5a330112(String), 1(Integer), null, 111111(String), 111111(String)
2020-08-17 10:42:22.120 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:42:22.122 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=111111, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at com.wsy.blog.service.impl.UserServiceImpl.save(UserServiceImpl.java:28)
	at com.wsy.blog.controller.UserController.register(UserController.java:138)
	at com.wsy.blog.controller.UserController$$FastClassBySpringCGLIB$$2c9cfdab.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.UserController$$EnhancerBySpringCGLIB$$2112efb3.register(<generated>)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
(String), POST(String), null, null, 127.0.0.1(String)
2020-08-17 10:42:22.175 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:45:42.835 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 10:45:57.694 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:45:57.721 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 111111(String)
2020-08-17 10:45:57.765 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:45:57.795 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, nickname, user_email) values (?, ?, ?, ?, ?) 
2020-08-17 10:45:57.797 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: 111111(String), 96e79218965eb72c92a549dd5a330112(String), 1(Integer), 111111(String), 111111(String)
2020-08-17 10:45:57.851 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:45:58.018 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:45:58.023 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=111111, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 355(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 10:45:58.079 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:46:07.118 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:46:07.119 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 111111(String)
2020-08-17 10:46:07.148 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 10:46:07.180 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:46:07.182 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=111111, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.wsy.blog.exception.BlogException: 该用户名已存在！
	at com.wsy.blog.controller.UserController.register(UserController.java:136)
	at com.wsy.blog.controller.UserController$$FastClassBySpringCGLIB$$2c9cfdab.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.UserController$$EnhancerBySpringCGLIB$$ab1a95c2.register(<generated>)
(String), POST(String), null, null, 127.0.0.1(String)
2020-08-17 10:46:07.239 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:46:09.660 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:46:09.661 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1111112(String)
2020-08-17 10:46:09.686 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:46:09.727 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, nickname, user_email) values (?, ?, ?, ?, ?) 
2020-08-17 10:46:09.729 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: 1111112(String), 96e79218965eb72c92a549dd5a330112(String), 1(Integer), 111111(String), 111111(String)
2020-08-17 10:46:09.785 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:46:09.814 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:46:09.815 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1111112, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 155(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 10:46:09.876 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:47:08.121 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:47:08.122 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 99999(String)
2020-08-17 10:47:08.153 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 10:47:08.188 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, nickname, user_email) values (?, ?, ?, ?, ?) 
2020-08-17 10:47:08.189 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: 99999(String), d3eb9a9233e52948740d7eb8c3062d14(String), 2(Integer), 99999(String), 99999(String)
2020-08-17 10:47:08.255 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:47:08.290 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:47:08.291 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=99999, password=d3eb9a9233e52948740d7eb8c3062d14, name=null, sex=2, header=null, nickname=99999, userEmail=99999, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 173(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 10:47:08.355 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:47:13.654 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 10:47:13.655 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 99999(String)
2020-08-17 10:47:13.681 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 10:47:13.742 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:47:13.743 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=99999, password=d3eb9a9233e52948740d7eb8c3062d14, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 95(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597603627000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82C2iAIuM8AACPXPf76OA103.jpg","nickname":"99999","password":"d3eb9a9233e52948740d7eb8c3062d14","sex":2,"updateTime":1597603627000,"userEmail":"99999","userId":21,"username":"99999","version":1},"token":"6F9F3977711DFF89BFD280EA6DCD9DA0"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 10:47:13.798 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:47:14.073 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 10:47:14.075 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 10:47:14.076 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 10:47:14.078 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 10:47:14.079 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 10:47:14.080 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 10:47:14.096 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 10:47:14.104 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 10:47:14.107 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 10:47:14.123 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:47:14.123 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 68(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:47:14.145 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:47:14.145 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 10:47:14.146 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:47:14.147 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 10:47:14.168 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:47:14.170 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:47:14.202 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 10:47:14.206 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:47:14.207 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 10:47:14.235 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:47:14.265 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:47:14.267 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 10:47:14.294 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:47:14.322 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:47:14.323 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 10:47:14.348 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:47:14.375 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 10:47:14.376 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 10:47:14.402 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 10:47:14.434 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 10:47:14.435 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 376(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 10:47:14.489 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:08:32.090 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 11:08:32.091 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 11:08:32.138 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 11:08:32.169 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:08:32.173 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 1489(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:08:32.238 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:08:32.708 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 11:08:32.709 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:08:32.740 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 11:08:32.768 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 11:08:32.769 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 11:08:32.798 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 11:08:32.826 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:08:32.827 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 2090(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:08:32.882 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:08:32.911 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:08:32.911 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:08:32.939 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:08:32.971 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:08:32.973 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:08:33.000 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:08:33.046 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:08:33.046 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:08:33.095 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:08:33.127 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:08:33.128 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:08:33.154 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:08:33.184 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:08:33.185 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:08:33.210 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:08:33.242 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:08:33.243 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 2561(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 11:08:33.297 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:09:19.700 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 11:09:19.701 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1437631334(String)
2020-08-17 11:09:19.734 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-08-17 11:09:19.767 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user (username, `password`, sex, nickname, user_email) values (?, ?, ?, ?, ?) 
2020-08-17 11:09:19.768 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.save.debug:159 -==> Parameters: 1437631334(String), 22beb15bae1724729125ef76cf2840a6(String), 1(Integer), w(String), 1437631334@qq.com(String)
2020-08-17 11:09:19.841 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:09:19.875 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:09:19.876 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1437631334, password=22beb15bae1724729125ef76cf2840a6, name=null, sex=1, header=null, nickname=w, userEmail=1437631334@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), com.wsy.blog.exception.BlogException: 该用户名已存在！
	at com.wsy.blog.controller.UserController.register(UserController.java:136)
	at com.wsy.blog.controller.UserController$$FastClassBySpringCGLIB$$2c9cfdab.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.UserController$$EnhancerBySpringCGLIB$$ab1a95c2.register(<generated>)
(String), POST(String), 192(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-08-17 11:09:19.955 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:09:31.054 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 11:09:31.055 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1437631334(String)
2020-08-17 11:09:31.082 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 11:09:31.110 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:09:31.111 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=1437631334, password=22beb15bae1724729125ef76cf2840a6, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 59(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV81A_2Acw06AACPXPf76OA574.jpg","nickname":"w","password":"22beb15bae1724729125ef76cf2840a6","sex":1,"updateTime":1597604959000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"token":"09A9B8762D4F062E94C34885D137E0BE"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 11:09:31.165 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:09:31.454 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 11:09:31.455 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 11:09:31.465 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 11:09:31.466 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 11:09:31.482 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 11:09:31.488 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 11:09:31.517 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:09:31.518 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 62(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:09:31.519 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 11:09:31.520 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:09:31.547 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 11:09:31.558 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:09:31.578 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:09:31.579 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:09:31.581 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:09:31.582 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:09:31.605 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:09:31.620 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:09:31.634 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:09:31.635 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:09:31.662 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:09:31.692 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:09:31.693 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:09:31.720 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:09:31.751 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:09:31.753 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:09:31.778 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:09:31.810 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:09:31.811 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:09:31.836 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:09:31.876 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:09:31.879 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 406(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 11:09:31.945 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:10:39.748 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 11:10:39.749 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:10:39.780 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 11:10:39.798 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 11:10:39.799 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 11:10:39.801 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 11:10:39.802 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 11:10:39.818 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:10:39.820 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 72(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:10:39.825 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 11:10:39.828 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 11:10:39.852 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:39.852 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:10:39.856 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:10:39.858 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 63(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:10:39.873 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:39.879 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:10:39.897 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:39.898 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:10:39.914 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:10:39.916 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:39.936 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:39.940 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:10:39.976 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:40.012 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:40.013 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:10:40.031 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:40.051 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:40.052 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:10:40.070 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:40.095 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:10:40.096 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 306(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 11:10:40.136 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:10:55.798 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 11:10:55.799 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1437631334(String)
2020-08-17 11:10:55.822 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 11:10:55.842 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:10:55.843 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=1437631334, password=22beb15bae1724729125ef76cf2840a6, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 47(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"22beb15bae1724729125ef76cf2840a6","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"token":"CFEE222A72481A5405FCC208E737CC0F"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 11:10:55.889 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:10:56.184 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 11:10:56.185 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 11:10:56.190 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 11:10:56.193 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 11:10:56.200 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 11:10:56.201 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:10:56.207 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 11:10:56.224 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 11:10:56.229 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 11:10:56.235 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:10:56.237 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 49(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:10:56.251 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:56.252 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:10:56.260 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:10:56.262 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 62(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:10:56.275 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:56.280 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:10:56.300 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:56.301 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:10:56.318 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:10:56.323 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:56.348 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:56.349 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:10:56.371 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:56.397 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:56.397 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:10:56.419 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:56.445 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:10:56.446 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:10:56.468 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:10:56.496 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:10:56.497 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), com.wsy.blog.exception.BlogException: 该用户名已存在！
	at com.wsy.blog.controller.UserController.register(UserController.java:136)
	at com.wsy.blog.controller.UserController$$FastClassBySpringCGLIB$$2c9cfdab.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.UserController$$EnhancerBySpringCGLIB$$ab1a95c2.register(<generated>)
(String), GET(String), 307(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 11:10:56.545 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:11:00.281 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:11:00.283 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:11:00.309 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:11:00.316 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 11:11:00.317 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:11:00.347 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:11:00.380 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:11:00.383 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:11:00.428 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:11:00.455 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:11:00.457 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:11:00.480 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:11:00.505 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:11:00.509 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:11:00.540 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:11:00.577 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:11:00.580 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:11:00.601 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:11:00.627 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:11:00.629 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:11:00.650 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:11:00.691 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:11:00.694 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 532(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601690000,"version":46},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:11:00.742 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:11:01.966 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:11:01.968 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 11:11:02.000 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:11:02.001 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:11:02.001 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:11:02.024 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:11:02.029 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:11:02.031 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 46(Integer), 12(Integer), 1294647161643978752(String), 46(Integer)
2020-08-17 11:11:02.074 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:11:02.151 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:11:02.152 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 259(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601690000,"version":46},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:11:02.200 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:11:02.249 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:11:02.250 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 357(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:11:02.298 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:11:08.600 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:11:08.601 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 11:11:08.626 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:11:08.783 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:11:08.784 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=我真帅, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 185(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 11:11:08.836 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:11:08.916 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:11:08.917 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:11:08.970 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:12:06.429 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 11:12:06.430 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:12:06.452 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 11:12:06.485 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:12:06.487 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:12:06.537 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:39.632 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 AND blog_type = ? 
2020-08-17 11:36:39.632 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:36:39.652 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:36:39.657 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 AND blog_type = ? order by created_time desc LIMIT ? 
2020-08-17 11:36:39.659 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 12(Integer), 5(Integer)
2020-08-17 11:36:39.681 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 1
2020-08-17 11:36:39.703 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:39.705 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:36:39.728 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:39.751 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:39.752 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=12)](String), 1(Integer), null, POST(String), 2149(Long), {"code":20000,"data":{"endRow":0,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597605061000,"version":47}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":1,"pages":1,"prePage":0,"size":1,"startRow":0,"total":1},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:36:39.795 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:43.070 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:36:43.072 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 11:36:43.095 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:36:43.096 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:43.096 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:36:43.115 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:43.116 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:36:43.117 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 47(Integer), 12(Integer), 1294647161643978752(String), 47(Integer)
2020-08-17 11:36:43.156 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:36:43.235 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:43.236 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 176(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597605061000,"version":47},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:36:43.281 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:47.018 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 11:36:47.019 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:36:47.056 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 11:36:47.091 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:47.093 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), com.wsy.blog.exception.BlogException: 该用户名已存在！
	at com.wsy.blog.controller.UserController.register(UserController.java:136)
	at com.wsy.blog.controller.UserController$$FastClassBySpringCGLIB$$2c9cfdab.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.UserController$$EnhancerBySpringCGLIB$$ab1a95c2.register(<generated>)
(String), GET(String), 65(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:36:47.135 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:52.130 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:36:52.130 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:36:52.152 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:36:52.153 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 11:36:52.154 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:36:52.176 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:36:52.198 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:52.199 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:36:52.218 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:52.246 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:52.247 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:36:52.266 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:52.291 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:52.293 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:36:52.316 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:52.345 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:52.348 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:36:52.368 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:52.394 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:52.398 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:36:52.418 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:52.452 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:52.453 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 318(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:36:52.498 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:54.198 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:36:54.198 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808631053139968(String)
2020-08-17 11:36:54.265 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:54.265 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293808631053139968(String), [1293808631053139968](String), 1(Integer), null, GET(String), 89(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:36:54.273 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:36:54.276 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:54.278 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:36:54.302 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:54.313 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:54.313 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:36:54.314 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: docker 安装 mysql5.7(String), http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">1.安装mysql5.7 docker镜像</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">拉取官方mysql5.7镜像&nbsp;</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs apache" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attribute" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">docker</span> pull mysql:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5</span>.<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="" width="742" height="313" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">查看镜像库</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">docker</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">images</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;<img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="" width="799" height="105" /></p>
<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">2.创建mysql容器</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在本地创建mysql的映射目录</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">mkdir -p <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data /</span>root<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>logs <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql/conf</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">touch</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">my.cnf</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">创建容器,将数据,日志,配置文件映射到本机</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker run -p <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span> --name mysql -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/conf:/</span>etc<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>conf.d -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/logs:/</span>logs -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data:/</span>var<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">mysql:</span><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5.7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-d:</strong>&nbsp;后台运行容器</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-e&nbsp;</strong>设置参数</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="" width="1200" height="81" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">启动mysql容器</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs sql" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;">start</span> mysql</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="" width="473" height="64" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;查看/root/mysql/data目录是否有数据文件</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="" width="1172" height="99" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">使用工具连接测试</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">参考链接：<a href="https://blog.csdn.net/weixin_40461281/article/details/92610876">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>(String), 20(Integer), 238(Integer), 231(Integer), 16(Integer), 2354(Integer), 1293808631053139968(String), 6(Integer)
2020-08-17 11:36:54.375 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:36:54.451 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:54.454 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293808631053139968(String), [1293808631053139968](String), 1(Integer), null, PUT(String), 281(Long), {"code":20000,"data":{"blogCollection":231,"blogComment":2354,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:36:54.517 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:56.612 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:36:56.613 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:36:56.635 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:36:56.638 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 11:36:56.642 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:36:56.666 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:36:56.689 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:56.690 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:36:56.712 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:56.734 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:56.735 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:36:56.757 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:56.782 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:56.782 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:36:56.801 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:56.825 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:56.827 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:36:56.846 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:56.867 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:56.868 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:36:56.891 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:56.917 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:56.918 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 330(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:36:56.966 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:58.310 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:36:58.312 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293808463692021760(String)
2020-08-17 11:36:58.368 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:58.369 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, GET(String), 73(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:36:58.385 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:36:58.387 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:36:58.389 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:36:58.409 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:36:58.410 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:36:58.412 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: docker 安装 mysql5.7(String), http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">1.安装mysql5.7 docker镜像</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">拉取官方mysql5.7镜像&nbsp;</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs apache" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attribute" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">docker</span> pull mysql:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5</span>.<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="" width="742" height="313" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">查看镜像库</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">docker</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">images</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;<img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="" width="799" height="105" /></p>
<h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><a style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;" name="t1"></a><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">2.创建mysql容器</strong></h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在本地创建mysql的映射目录</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">mkdir -p <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data /</span>root<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>logs <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql/conf</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs properties" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;"><span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">touch</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">my.cnf</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">创建容器,将数据,日志,配置文件映射到本机</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs groovy" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker run -p <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">3306</span> --name mysql -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/conf:/</span>etc<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/mysql/</span>conf.d -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/logs:/</span>logs -v <span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/root/</span>mysql<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/data:/</span>var<span class="hljs-regexp" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class="hljs-attr" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">mysql:</span><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;">5.7</span></code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-d:</strong>&nbsp;后台运行容器</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">-e&nbsp;</strong>设置参数</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="" width="1200" height="81" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">启动mysql容器</p>
<pre class="has" style="box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><code class="hljs sql" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;">docker <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;">start</span> mysql</code></pre>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="" width="473" height="64" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">&nbsp;查看/root/mysql/data目录是否有数据文件</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;"><img class="has" style="box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;" src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="" width="1172" height="99" /></p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">使用工具连接测试</p>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">参考链接：<a href="https://blog.csdn.net/weixin_40461281/article/details/92610876">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>(String), 1(Integer), 8(Integer), 14(Integer), 123(Integer), 1293808463692021760(String), 9(Integer)
2020-08-17 11:36:58.442 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:36:58.465 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:36:58.534 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:36:58.535 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293808463692021760(String), [1293808463692021760](String), 1(Integer), null, PUT(String), 245(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:36:58.595 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:02.278 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:02.279 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 19212(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:37:02.324 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:02.450 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:37:02.450 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:37:02.473 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:37:02.475 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 11:37:02.476 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:37:02.498 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:37:02.519 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:02.520 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:37:02.542 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:02.566 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:02.567 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:37:02.586 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:02.611 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:02.612 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:37:02.633 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:02.658 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:02.662 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:37:02.682 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:02.708 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:02.710 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:37:02.730 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:02.754 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:02.757 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 309(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:37:02.802 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:05.135 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:37:05.135 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 11:37:05.160 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:37:05.160 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:05.161 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:05.162 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:37:05.162 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), com.wsy.blog.exception.BlogException: 该用户名已存在！
	at com.wsy.blog.controller.UserController.register(UserController.java:136)
	at com.wsy.blog.controller.UserController$$FastClassBySpringCGLIB$$2c9cfdab.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.UserController$$EnhancerBySpringCGLIB$$ab1a95c2.register(<generated>)
(String), GET(String), 48(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:37:05.182 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:05.183 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:37:05.183 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 48(Integer), 12(Integer), 1294647161643978752(String), 48(Integer)
2020-08-17 11:37:05.211 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:05.226 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:37:05.302 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:05.305 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 189(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":48,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:37:05.349 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:08.762 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 11:37:08.763 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:37:08.782 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 11:37:08.807 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:08.809 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 50(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:37:08.852 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:10.751 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 AND blog_type = ? 
2020-08-17 11:37:10.751 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:37:10.774 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:37:10.777 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 AND blog_type = ? order by created_time desc LIMIT ? 
2020-08-17 11:37:10.778 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 12(Integer), 5(Integer)
2020-08-17 11:37:10.799 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 1
2020-08-17 11:37:10.822 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:10.824 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:37:10.844 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:10.866 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:10.867 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=12)](String), 1(Integer), null, POST(String), 136(Long), {"code":20000,"data":{"endRow":0,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":48,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606624000,"version":49}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":1,"pages":1,"prePage":0,"size":1,"startRow":0,"total":1},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:37:10.914 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:12.365 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:37:12.366 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 11:37:12.389 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:37:12.391 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:37:12.393 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:37:12.394 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:12.395 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 47(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:37:12.413 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:37:12.414 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:37:12.415 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 49(Integer), 12(Integer), 1294647161643978752(String), 49(Integer)
2020-08-17 11:37:12.440 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:37:12.460 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:37:12.525 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:37:12.526 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 183(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":49,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606624000,"version":49},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:37:12.570 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:40:05.784 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 11:41:17.705 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 11:41:17.705 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 11:41:17.709 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 11:41:17.745 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:41:17.757 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 11:41:17.757 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:41:17.757 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 11:41:17.759 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 11:41:17.822 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 11:41:17.823 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 11:41:17.824 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 11:41:17.824 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:41:17.836 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:41:17.839 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:41:17.883 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:41:17.886 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:41:17.887 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:41:17.898 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:41:17.900 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 50(Integer), 12(Integer), 1294647161643978752(String), 50(Integer)
2020-08-17 11:41:17.926 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:41:17.944 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:41:17.947 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 432(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:41:17.949 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:41:17.950 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 434(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:41:17.951 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:41:17.952 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 436(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:41:17.965 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:41:17.967 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:41:17.967 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:41:18.010 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:41:18.011 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:41:18.015 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:41:18.034 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:41:18.041 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:41:18.041 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:41:18.067 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:41:18.068 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 553(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":50,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606632000,"version":50},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:41:18.071 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:41:18.100 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:41:18.101 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:41:18.124 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:41:18.128 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:41:18.160 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:41:18.161 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:41:18.189 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:41:18.221 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:41:18.222 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 710(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":49,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 11:41:18.286 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:44:11.886 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 11:44:11.886 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 11:44:11.886 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 11:44:11.886 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 11:44:11.888 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:44:11.888 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 11:44:11.888 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 11:44:11.888 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 11:44:11.918 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 11:44:11.920 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 11:44:11.921 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 11:44:11.922 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 11:44:11.938 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:44:11.943 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:44:11.974 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:44:12.088 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 102(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:44:12.150 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:44:12.151 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:44:12.195 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 272(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:44:12.196 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:44:12.195 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:44:12.231 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:44:12.236 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:44:12.237 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 11:44:12.239 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:44:12.240 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 51(Integer), 12(Integer), 1294647161643978752(String), 51(Integer)
2020-08-17 11:44:12.265 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:44:12.267 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:44:12.271 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:44:12.296 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:44:12.313 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:44:12.318 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:44:12.348 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:44:12.392 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:44:12.395 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:44:12.407 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:44:12.418 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 560(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606877000,"version":51},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:44:12.433 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:44:12.478 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:44:12.482 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:44:12.485 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:44:12.516 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:44:12.556 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:44:12.559 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:44:12.587 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:44:12.618 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:44:12.619 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 768(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":50,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 11:44:12.677 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:01.690 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 11:48:01.692 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 11:48:01.720 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 11:48:01.756 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:01.756 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 131(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:48:01.817 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:02.450 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog where deleted = 0 order by created_time desc 
2020-08-17 11:48:02.452 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-08-17 11:48:02.482 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 8
2020-08-17 11:48:02.533 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:02.534 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 75(Long), {"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 11:48:02.592 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:05.839 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 11:48:05.840 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 11:48:05.869 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 1
2020-08-17 11:48:05.870 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 11:48:05.871 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 个人(String), 我的个人(String), 50(Integer), 1(Integer), 1(String), 51(Integer)
2020-08-17 11:48:05.923 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 11:48:06.021 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:06.022 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, PUT(String), 215(Long), {"code":20000,"data":{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597600646000,"version":51},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 11:48:06.082 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:38.171 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:48:38.172 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:48:38.202 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:48:38.208 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 11:48:38.209 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:48:38.240 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:48:38.273 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:38.275 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:48:38.303 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:38.337 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:38.338 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:38.365 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:38.397 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:38.400 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:48:38.428 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:38.469 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:38.470 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:38.505 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:38.544 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:38.544 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:48:38.574 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:38.741 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:38.742 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 642(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:48:38.801 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:40.024 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:48:40.024 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:48:40.051 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:48:40.054 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by blog_goods desc LIMIT ? 
2020-08-17 11:48:40.055 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:48:40.089 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:48:40.122 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:40.123 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:48:40.160 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:40.206 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:40.208 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:40.242 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:40.275 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:40.275 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:48:40.315 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:40.347 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:40.349 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:48:40.387 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:40.418 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:40.419 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:40.446 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:40.483 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:40.485 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=blog_goods, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 461(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:48:40.545 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:42.694 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:48:42.694 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:48:42.721 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:48:42.722 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by blog_comment desc LIMIT ? 
2020-08-17 11:48:42.723 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:48:42.756 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:48:42.788 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:42.789 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:48:42.816 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:42.858 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:42.858 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:42.885 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:42.918 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:42.918 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:42.946 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:42.978 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:42.979 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:48:43.007 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:43.038 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:43.038 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:43.066 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:43.123 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:43.125 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=blog_comment, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 427(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:48:43.195 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:45.428 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:48:45.430 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:48:45.457 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:48:45.459 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by blog_read desc LIMIT ? 
2020-08-17 11:48:45.459 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:48:45.488 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:48:45.520 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:45.520 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:48:45.548 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:45.579 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:45.581 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:48:45.612 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:45.643 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:45.643 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:48:45.670 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:45.701 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:45.703 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 11:48:45.730 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:45.762 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:45.764 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:45.790 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:45.823 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:45.823 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=blog_read, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 395(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:48:45.882 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 11:48:46.676 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 11:48:46.677 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 11:48:46.707 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 11:48:46.708 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by blog_collection desc LIMIT ? 
2020-08-17 11:48:46.709 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 11:48:46.737 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 11:48:46.769 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:46.770 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:46.797 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:46.829 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:46.830 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 11:48:46.857 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:46.889 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:46.890 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 11:48:46.916 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:46.950 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:46.951 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 11:48:46.978 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:47.010 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 11:48:47.011 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 11:48:47.037 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 11:48:47.071 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 11:48:47.072 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=blog_collection, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 398(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 11:48:47.131 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:04:50.806 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 12:05:17.869 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 12:05:17.869 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 12:05:17.869 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 12:05:17.913 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 12:05:17.913 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 12:05:17.913 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 12:05:18.082 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 12:05:18.085 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:05:18.111 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 12:05:18.112 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 12:05:18.112 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 12:05:18.113 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:05:18.123 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:05:18.126 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 12:05:18.197 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 12:05:18.198 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.202 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 12:05:18.243 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.243 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 12:05:18.259 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.268 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.311 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:05:18.312 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.313 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:05:18.315 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.316 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 603(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:05:18.317 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 12:05:18.321 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:05:18.323 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 607(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:05:18.337 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.337 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.389 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:05:18.395 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.398 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:05:18.397 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 12:05:18.398 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.399 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 12:05:18.423 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.429 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.450 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.454 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:05:18.460 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.462 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:05:18.489 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.499 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.515 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.519 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 12:05:18.596 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:05:18.596 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.598 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 12:05:18.670 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:05:18.677 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:05:18.679 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 747(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 12:05:18.708 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:05:18.710 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 1032(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 12:05:18.732 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:05:18.778 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:02.941 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 12:07:02.942 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 12:07:02.980 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 12:07:03.008 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:03.009 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 74(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:03.051 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:03.294 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 12:07:03.295 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 12:07:03.325 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 12:07:03.353 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:03.354 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 82(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:03.398 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:10.827 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 12:07:10.828 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:10.848 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:10.850 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:10.851 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:10.874 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:10.902 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:10.903 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 12:07:10.923 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:10.964 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:10.964 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:07:10.988 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:11.008 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:11.009 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 12:07:11.029 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:11.053 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:11.054 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:07:11.072 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:11.094 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:11.095 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 268(Long), {"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:11.140 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:15.114 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_about WHERE deleted = 0 
2020-08-17 12:07:15.115 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:15.135 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:15.136 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==>  Preparing: SELECT about_id, about_title, about_content, about_read, created_time, update_time, version, enable FROM bl_about WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:15.136 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:15.160 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:15.189 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:15.190 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 78(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597293061000,"version":1},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597607285000,"version":52}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:15.237 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:19.089 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getAllBack.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count,`enable`,deleted from bl_type where deleted = 0 
2020-08-17 12:07:19.092 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getAllBack.debug:159 -==> Parameters: 
2020-08-17 12:07:19.121 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getAllBack.debug:159 -<==      Total: 11
2020-08-17 12:07:19.157 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:19.161 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAllBack(String), [](String), 1(Integer), null, GET(String), 66(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"deleted":0,"enable":1,"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:19.206 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:20.289 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_about WHERE deleted = 0 
2020-08-17 12:07:20.289 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:20.308 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:20.309 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==>  Preparing: SELECT about_id, about_title, about_content, about_read, created_time, update_time, version, enable FROM bl_about WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:20.310 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:20.329 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:20.353 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:20.354 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 92(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597293061000,"version":1},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597607285000,"version":52}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:20.401 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:22.189 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where about_id = ? and deleted = 0 
2020-08-17 12:07:22.190 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-08-17 12:07:22.210 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-17 12:07:22.212 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 12:07:22.212 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 个人(String), 我的个人(String), 50(Integer), 0(Integer), 1(String), 52(Integer)
2020-08-17 12:07:22.252 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 12:07:22.313 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:22.314 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/disable/1(String), [1](String), 1(Integer), null, PUT(String), 158(Long), {"code":20000,"msg":"弃用成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:22.358 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:22.396 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_about WHERE deleted = 0 
2020-08-17 12:07:22.396 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:22.419 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:22.421 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==>  Preparing: SELECT about_id, about_title, about_content, about_read, created_time, update_time, version, enable FROM bl_about WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:22.421 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:22.456 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:22.478 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:22.479 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 85(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597293061000,"version":1},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:22.520 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:24.047 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where about_id = ? and deleted = 0 
2020-08-17 12:07:24.049 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-08-17 12:07:24.072 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-17 12:07:24.075 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getByEnable.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where deleted = 0 and enable = 1 
2020-08-17 12:07:24.077 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getByEnable.debug:159 -==> Parameters: 
2020-08-17 12:07:24.099 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getByEnable.debug:159 -<==      Total: 0
2020-08-17 12:07:24.108 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 12:07:24.111 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 测试2(String), 测试2(String), 1(Integer), 2(String), 1(Integer)
2020-08-17 12:07:24.148 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 12:07:24.224 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:24.227 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/2(String), [2](String), 1(Integer), null, PUT(String), 191(Long), {"code":20000,"msg":"启用成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:24.276 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:24.332 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_about WHERE deleted = 0 
2020-08-17 12:07:24.336 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:24.360 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:24.364 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==>  Preparing: SELECT about_id, about_title, about_content, about_read, created_time, update_time, version, enable FROM bl_about WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:24.367 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:24.395 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:24.430 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:24.434 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 92(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":1,"updateTime":1597608443000,"version":2},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:24.488 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:26.716 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 12:07:26.718 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 12:07:26.741 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 1
2020-08-17 12:07:26.742 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 12:07:26.742 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 测试2(String), 测试2(String), 1(Integer), 1(Integer), 2(String), 2(Integer)
2020-08-17 12:07:26.781 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 12:07:26.853 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:26.854 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, PUT(String), 150(Long), {"code":20000,"data":{"aboutContent":"测试2","aboutId":"2","aboutRead":1,"aboutTitle":"测试2","createdTime":1597293061000,"enable":1,"updateTime":1597608443000,"version":2},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:26.897 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:31.332 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where about_id = ? and deleted = 0 
2020-08-17 12:07:31.334 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-08-17 12:07:31.354 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-17 12:07:31.355 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 12:07:31.355 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 测试2(String), 测试2(String), 1(Integer), 0(Integer), 2(String), 3(Integer)
2020-08-17 12:07:31.391 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 12:07:31.470 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:31.471 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/disable/2(String), [2](String), 1(Integer), null, PUT(String), 155(Long), {"code":20000,"msg":"弃用成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:31.515 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:31.550 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_about WHERE deleted = 0 
2020-08-17 12:07:31.551 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:31.570 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:31.571 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==>  Preparing: SELECT about_id, about_title, about_content, about_read, created_time, update_time, version, enable FROM bl_about WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:31.572 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:31.592 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:31.622 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:31.623 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 67(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":1,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597608451000,"version":4},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:31.664 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:33.216 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 12:07:33.220 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 12:07:33.222 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 12:07:33.223 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 12:07:33.226 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 12:07:33.227 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 12:07:33.243 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 12:07:33.244 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 12:07:33.245 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 12:07:33.245 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 12:07:33.253 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 12:07:33.265 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 0
2020-08-17 12:07:33.265 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:33.267 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 77(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:33.269 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:33.270 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 12:07:33.289 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:33.290 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 85(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:33.291 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:33.313 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:33.344 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:33.345 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 12:07:33.345 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:33.346 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 0(Integer), com.wsy.blog.exception.BlogException: 目前暂时没有关于我的！
	at com.wsy.blog.service.impl.AboutServiceImpl.read(AboutServiceImpl.java:86)
	at com.wsy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$e7d4fe8f.invoke(<generated>)
	at com.wsy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac36c7f.read(<generated>)
	at com.wsy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$e7d4fe8f.invoke(<generated>)
	at com.wsy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$a1d99307.read(<generated>)
	at com.wsy.blog.controller.AboutController.read(AboutController.java:114)
	at com.wsy.blog.controller.AboutController$$FastClassBySpringCGLIB$$e190bfa5.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$7e3280a4.read(<generated>)
(String), PUT(String), 78(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597293061000,"version":1},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597607285000,"version":52}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:33.349 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:33.364 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:33.386 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:33.395 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:33.396 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 12:07:33.417 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:33.444 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:33.444 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:07:33.464 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:33.506 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:07:33.507 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 12:07:33.527 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:07:33.553 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:33.555 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 359(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:33.606 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:37.719 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog where deleted = 0 order by created_time desc 
2020-08-17 12:07:37.720 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-08-17 12:07:37.741 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 8
2020-08-17 12:07:37.770 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:37.772 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 49(Long), {"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:37.817 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:43.301 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where about_id = ? and deleted = 0 
2020-08-17 12:07:43.303 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:43.323 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-08-17 12:07:43.324 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getByEnable.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where deleted = 0 and enable = 1 
2020-08-17 12:07:43.325 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getByEnable.debug:159 -==> Parameters: 
2020-08-17 12:07:43.345 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getByEnable.debug:159 -<==      Total: 0
2020-08-17 12:07:43.346 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 12:07:43.347 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 123(String), <p>123456</p>(String), 1(Integer), 4(String), 3(Integer)
2020-08-17 12:07:43.386 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 12:07:43.459 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:43.460 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enable/4(String), [4](String), 1(Integer), null, PUT(String), 172(Long), {"code":20000,"msg":"启用成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:43.503 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:43.554 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_about WHERE deleted = 0 
2020-08-17 12:07:43.555 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:43.575 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:43.576 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==>  Preparing: SELECT about_id, about_title, about_content, about_read, created_time, update_time, version, enable FROM bl_about WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:43.577 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:43.597 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AboutMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:43.623 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:43.624 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 87(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597608463000,"version":4},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":1,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597608451000,"version":4},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:43.669 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:45.781 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 12:07:45.782 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 12:07:45.805 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 1
2020-08-17 12:07:45.806 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 12:07:45.806 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 123(String), <p>123456</p>(String), 1(Integer), 1(Integer), 4(String), 4(Integer)
2020-08-17 12:07:45.847 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 12:07:45.914 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:45.915 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, PUT(String), 154(Long), {"code":20000,"data":{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":1,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597608463000,"version":4},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 12:07:45.958 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:49.561 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAllBack.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count,`enable`,deleted from bl_type where deleted = 0 
2020-08-17 12:07:49.562 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAllBack.debug:159 -==> Parameters: 
2020-08-17 12:07:49.590 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getAllBack.debug:159 -<==      Total: 11
2020-08-17 12:07:49.617 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:49.618 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAllBack(String), [](String), 1(Integer), null, GET(String), 61(Long), {"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"deleted":0,"enable":1,"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:49.662 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:52.030 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 12:07:52.030 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 12:07:52.052 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 12:07:52.075 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:52.076 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:52.119 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:07:53.935 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_user WHERE deleted = 0 
2020-08-17 12:07:53.936 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:07:53.956 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:07:53.958 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getPage.debug:159 -==>  Preparing: SELECT user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version FROM bl_user WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:07:53.958 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:07:53.979 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.UserMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:07:54.013 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:07:54.013 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 75(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"22beb15bae1724729125ef76cf2840a6","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},{"createdTime":1597522539000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82C2iAIuM8AACPXPf76OA103.jpg","nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597599783000,"userEmail":"2131231","userId":11,"username":"pink","version":1},{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},{"createdTime":1597345023000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","name":"w","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597353309000,"userEmail":"1437631334@qq.com","userId":3,"username":"wsy1437631334","version":2}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 12:07:54.063 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 12:08:14.023 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_log 
2020-08-17 12:08:14.024 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:08:14.049 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:08:14.055 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.getPage.debug:159 -==>  Preparing: SELECT log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time FROM bl_log order by created_time desc LIMIT ? 
2020-08-17 12:08:14.058 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.getPage.debug:159 -==> Parameters: 10(Integer)
2020-08-17 12:08:14.097 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.getPage.debug:159 -<==      Total: 10
2020-08-17 12:45:38.949 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 12:45:38.950 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 12:45:39.338 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 12:45:39.344 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 12:45:39.349 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 12:45:39.795 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 12:45:40.242 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:45:40.243 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 12:45:40.597 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:45:41.383 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:45:41.384 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:45:43.517 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:45:43.919 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:45:43.919 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 12:45:44.098 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:45:44.238 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 12:45:44.238 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 12:45:44.592 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 12:45:44.872 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 12:45:44.873 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), com.wsy.blog.exception.BlogException: 目前暂时没有关于我的！
	at com.wsy.blog.service.impl.AboutServiceImpl.read(AboutServiceImpl.java:86)
	at com.wsy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$e7d4fe8f.invoke(<generated>)
	at com.wsy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac36c7f.read(<generated>)
	at com.wsy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$e7d4fe8f.invoke(<generated>)
	at com.wsy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$a1d99307.read(<generated>)
	at com.wsy.blog.controller.AboutController.read(AboutController.java:114)
	at com.wsy.blog.controller.AboutController$$FastClassBySpringCGLIB$$e190bfa5.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$7e3280a4.read(<generated>)
(String), POST(String), 11070(Long), {"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 12:45:46.924 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:03:02.493 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 13:12:36.821 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 13:16:16.066 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 13:16:33.088 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:16:33.088 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:16:33.088 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:16:33.167 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:16:33.167 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:16:33.166 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:16:33.309 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:16:33.314 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:16:33.315 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:16:33.387 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.392 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:16:33.415 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.421 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 13:16:33.422 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 13:16:33.440 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.441 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:16:33.453 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 13:16:33.500 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.502 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 13:16:33.502 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 13:16:33.521 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.522 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:16:33.533 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 13:16:33.553 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.570 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.570 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:16:33.585 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.587 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:16:33.590 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:16:33.594 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 657(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:16:33.598 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.601 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:16:33.603 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 664(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:16:33.607 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.632 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.633 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:16:33.639 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.642 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:16:33.654 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:16:33.660 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.663 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:16:33.664 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.690 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.691 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:16:33.711 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:16:33.713 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 778(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:16:33.721 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.751 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.754 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:16:33.778 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:16:33.782 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.820 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:33.825 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:16:33.854 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:33.908 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:16:33.912 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 722(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 13:16:33.979 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:16:41.059 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:16:41.062 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:16:41.093 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:16:41.097 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:16:41.099 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:16:41.125 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:16:41.130 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:16:41.138 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 52(Integer), 12(Integer), 1294647161643978752(String), 52(Integer)
2020-08-17 13:16:41.195 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:16:41.284 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:16:41.287 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 275(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":52,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:16:41.347 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:16:41.351 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:16:41.353 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 330(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:16:41.404 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:17:53.633 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 13:18:57.607 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:18:57.608 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:18:57.608 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:18:57.607 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:18:57.656 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:18:57.656 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:18:57.656 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:18:57.657 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:18:57.759 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:18:57.781 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:18:57.781 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:18:57.782 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:18:57.793 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:18:57.799 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:18:57.820 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:18:57.822 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:18:57.822 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:18:57.842 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:18:57.865 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:18:57.868 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:18:57.869 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 53(Integer), 12(Integer), 1294647161643978752(String), 53(Integer)
2020-08-17 13:18:57.870 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:18:57.889 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:18:57.919 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:18:57.923 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:18:57.924 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:18:57.941 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:18:57.967 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:18:57.969 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:18:57.988 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:18:57.998 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:18:58.003 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 530(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:18:58.005 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:18:58.006 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 533(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:18:58.006 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:18:58.008 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 525(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":53,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612600000,"version":53},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:18:58.013 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:18:58.014 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:18:58.016 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:18:58.017 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 533(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:18:58.034 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:18:58.048 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:18:58.052 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:18:58.054 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:18:58.080 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:18:58.101 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:18:58.103 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 594(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":52,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:18:58.145 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:19:00.476 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:19:00.478 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:19:00.522 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:19:00.543 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:19:00.545 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:19:00.567 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:19:00.594 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:19:00.597 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 0(Integer), 	at com.wsy.blog.service.impl.BlogServiceImpl.good(BlogServiceImpl.java:146)
	at com.wsy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$8bee96ac.invoke(<generated>)
	at com.wsy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ec3234f8.good(<generated>)
	at com.wsy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$8bee96ac.invoke(<generated>)
	at com.wsy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b17a7cde.good(<generated>)
	at com.wsy.blog.controller.BlogController.good(BlogController.java:154)
	at com.wsy.blog.controller.BlogController$$FastClassBySpringCGLIB$$caaea0c2.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$29e4c9bf.good(<generated>)
(String), POST(String), null, null, 127.0.0.1(String)
2020-08-17 13:19:00.642 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:19:23.968 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:19:23.969 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:19:24.016 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:19:24.040 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:19:24.041 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:19:24.063 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:19:56.959 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:19:56.961 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 0(Integer), 	at com.wsy.blog.service.impl.BlogServiceImpl.good(BlogServiceImpl.java:146)
	at com.wsy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$8bee96ac.invoke(<generated>)
	at com.wsy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ec3234f8.good(<generated>)
	at com.wsy.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$8bee96ac.invoke(<generated>)
	at com.wsy.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b17a7cde.good(<generated>)
	at com.wsy.blog.controller.BlogController.good(BlogController.java:154)
	at com.wsy.blog.controller.BlogController$$FastClassBySpringCGLIB$$caaea0c2.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.BlogController$$EnhancerBySpringCGLIB$$29e4c9bf.good(<generated>)
(String), POST(String), null, null, 127.0.0.1(String)
2020-08-17 13:19:57.010 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:20:07.124 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 13:20:35.703 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:20:35.772 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:20:35.890 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:20:35.925 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:20:35.930 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:20:35.959 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:20:36.113 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:20:36.120 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 54(Integer), 12(Integer), 1294647161643978752(String), 54(Integer)
2020-08-17 13:20:36.179 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:20:36.340 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:20:36.343 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:20:36.347 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 965(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":54,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612763000,"version":54},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:20:36.347 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 973(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:20:36.399 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:20:36.408 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:01.741 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:21:01.742 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:21:01.750 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:01.752 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:01.772 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:21:01.773 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:01.774 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:01.801 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:01.802 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:21:01.803 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 55(Integer), 12(Integer), 1294647161643978752(String), 55(Integer)
2020-08-17 13:21:01.804 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:01.859 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:21:01.960 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:01.964 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 242(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":55,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612835000,"version":55},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:02.034 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:07.183 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:21:07.184 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:21:07.207 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:21:07.209 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:21:07.212 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:21:07.215 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:21:07.215 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:21:07.216 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:21:07.216 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:21:07.222 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:07.224 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:07.235 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:21:07.240 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:07.242 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:21:07.242 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:21:07.253 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:21:07.255 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:07.256 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:07.280 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:07.281 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:07.286 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:07.287 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:07.288 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 92(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:07.288 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:21:07.289 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:07.290 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 56(Integer), 12(Integer), 1294647161643978752(String), 56(Integer)
2020-08-17 13:21:07.291 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:07.308 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:07.310 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:21:07.333 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:07.343 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:07.345 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:07.347 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:21:07.359 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:07.361 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:21:07.407 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:07.441 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:07.442 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:21:07.447 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:07.448 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 279(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":56,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612861000,"version":56},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:07.465 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:07.490 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:07.491 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:07.510 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:07.514 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:07.543 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:07.547 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 373(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":55,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:07.595 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:28.013 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:21:28.014 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:21:28.016 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:21:28.016 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:21:28.017 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:21:28.017 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:21:28.020 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:21:28.021 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:21:28.039 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:28.040 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:28.075 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:21:28.075 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:21:28.075 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:21:28.075 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:21:28.078 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:28.081 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:28.090 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:28.104 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:28.105 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 94(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:28.106 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:28.107 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:21:28.108 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 57(Integer), 12(Integer), 1294647161643978752(String), 57(Integer)
2020-08-17 13:21:28.116 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:28.118 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:28.120 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:28.121 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:21:28.148 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:28.152 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:28.152 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:21:28.175 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:28.185 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:28.186 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:21:28.215 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:28.235 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:28.237 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 244(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":57,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612867000,"version":57},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:28.252 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:28.253 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:21:28.280 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:28.298 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:28.317 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:28.319 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:21:28.348 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:28.384 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:28.385 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:28.415 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:28.452 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:28.453 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 437(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":56,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:28.521 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:45.028 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:21:45.029 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:21:45.033 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:45.035 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:45.063 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:21:45.066 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:45.067 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:45.092 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:45.095 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:45.098 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:21:45.101 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 58(Integer), 12(Integer), 1294647161643978752(String), 58(Integer)
2020-08-17 13:21:45.163 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:21:45.425 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:45.433 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 428(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":58,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612887000,"version":58},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:45.507 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:46.958 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:21:46.959 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:21:46.960 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:21:46.960 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:21:46.961 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:21:46.961 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:21:46.964 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:21:46.967 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:21:46.971 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:46.973 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:46.983 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:21:46.990 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:21:46.991 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:21:46.992 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:21:46.998 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:47.000 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:47.010 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:47.012 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 55(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:47.021 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:47.022 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:21:47.022 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:47.030 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:47.030 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:47.031 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 63(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:21:47.032 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:21:47.034 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 59(Integer), 12(Integer), 1294647161643978752(String), 59(Integer)
2020-08-17 13:21:47.042 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:47.060 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:47.070 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:47.072 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:21:47.087 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:47.088 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:21:47.094 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:47.121 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:47.122 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:21:47.144 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:47.172 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:47.173 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:21:47.181 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:47.183 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 246(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":59,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612904000,"version":59},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:47.197 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:47.225 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:21:47.226 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:21:47.246 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:21:47.247 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:21:47.279 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:21:47.282 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 321(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":58,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:21:47.333 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:22:10.762 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:22:10.765 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:22:10.788 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:22:10.790 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:22:10.790 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 45(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:22:10.791 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:22:10.791 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:22:10.812 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:22:10.815 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:22:10.817 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 60(Integer), 12(Integer), 1294647161643978752(String), 60(Integer)
2020-08-17 13:22:10.851 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:22:10.864 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:22:10.945 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:22:10.947 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 209(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":60,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612906000,"version":60},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:22:11.001 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:22:12.203 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:22:12.204 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:22:12.206 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:22:12.207 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:22:12.208 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:22:12.209 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:22:12.221 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:22:12.222 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:22:12.225 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:22:12.235 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:22:12.243 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:22:12.245 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:22:12.250 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:22:12.252 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:22:12.253 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:22:12.255 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:22:12.256 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 50(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:22:12.266 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:22:12.266 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:22:12.267 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 60(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:22:12.278 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:22:12.282 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:22:12.283 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 61(Integer), 12(Integer), 1294647161643978752(String), 61(Integer)
2020-08-17 13:22:12.296 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:22:12.303 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:22:12.303 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:22:12.305 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:22:12.321 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:22:12.326 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:22:12.335 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:22:12.365 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:22:12.366 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:22:12.394 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:22:12.402 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:22:12.404 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 204(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":61,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612930000,"version":61},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:22:12.425 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:22:12.426 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:22:12.455 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:22:12.455 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:22:12.494 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:22:12.496 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:22:12.524 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:22:12.553 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:22:12.554 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:22:12.581 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:22:12.614 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:22:12.615 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 405(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":60,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:22:12.673 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:23:25.074 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:23:25.074 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:23:25.076 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:23:25.077 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:23:25.084 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:23:25.086 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:23:25.100 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:23:25.102 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:23:25.103 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:23:25.105 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:23:25.105 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:23:25.106 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:23:25.110 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:23:25.130 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:23:25.132 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 76(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:23:25.135 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:23:25.137 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:23:25.137 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:23:25.140 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:23:25.142 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:23:25.145 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:23:25.148 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 82(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:23:25.152 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:23:25.165 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:23:25.170 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:23:25.172 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:23:25.173 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 62(Integer), 12(Integer), 1294647161643978752(String), 62(Integer)
2020-08-17 13:23:25.181 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:23:25.194 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:23:25.194 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:23:25.197 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:23:25.223 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:23:25.229 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:23:25.256 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:23:25.257 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:23:25.285 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:23:25.320 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:23:25.321 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:23:25.323 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:23:25.324 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 271(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":62,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612932000,"version":62},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:23:25.346 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:23:25.376 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:23:25.378 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:23:25.382 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:23:25.406 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:23:25.444 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:23:25.446 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 375(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":61,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:23:25.503 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:28.593 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:28.595 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:28.596 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:24:28.598 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:24:28.600 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:24:28.601 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:24:28.602 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:24:28.603 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:24:28.620 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:24:28.621 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:24:28.625 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:24:28.625 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:24:28.631 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:24:28.650 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:24:28.651 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:28.652 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:24:28.653 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:28.654 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:24:28.655 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:28.655 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 125(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:28.661 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:28.667 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:28.668 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 149(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:28.675 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:28.675 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:28.676 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:24:28.678 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 63(Integer), 12(Integer), 1294647161643978752(String), 63(Integer)
2020-08-17 13:24:28.702 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:28.702 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:28.703 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:24:28.724 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:28.726 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:28.727 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:24:28.759 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:28.760 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:24:28.782 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:28.806 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:28.807 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 303(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":63,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613004000,"version":63},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:24:28.809 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:28.809 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:24:28.834 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:28.854 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:28.862 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:28.863 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:24:28.887 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:28.918 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:28.919 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 401(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":62,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:24:28.975 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:32.941 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:24:32.942 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:24:32.951 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:24:32.952 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:24:32.953 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:24:32.953 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:24:32.961 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:24:32.962 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:24:32.968 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:24:32.973 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:32.973 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:24:32.974 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:32.984 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:24:32.990 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:24:32.991 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:32.992 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:24:32.993 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:32.994 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 55(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:33.002 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:33.003 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:33.015 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:33.023 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:33.023 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:24:33.024 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:24:33.024 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 64(Integer), 12(Integer), 1294647161643978752(String), 64(Integer)
2020-08-17 13:24:33.026 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:33.051 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:33.052 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:33.058 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:33.074 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:24:33.086 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:33.087 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:24:33.114 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:33.148 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:33.150 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:24:33.162 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:33.164 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 222(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":64,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613068000,"version":64},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:24:33.177 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:33.207 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:33.208 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:24:33.224 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:33.235 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:33.267 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:33.269 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:24:33.297 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:33.327 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:33.330 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 380(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":63,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:24:33.394 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:56.466 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, `password`, `name`, sex, `header`, nickname, user_email, created_time, update_time, version from bl_user where deleted = 0 and username = ? 
2020-08-17 13:24:56.468 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: oops(String)
2020-08-17 13:24:56.498 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 13:24:56.568 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:56.570 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 138(Long), {"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"F30D55D706F1D0E9D13A390908EB1656"},"msg":"登陆成功"}(String), 127.0.0.1(String)
2020-08-17 13:24:56.632 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:56.832 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:24:56.832 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:24:56.848 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:24:56.850 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:24:56.852 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:24:56.852 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:24:56.854 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:24:56.854 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:24:56.859 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:24:56.870 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:56.871 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:56.873 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:24:56.882 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:24:56.885 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:24:56.887 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:56.887 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:24:56.892 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:56.893 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 60(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:56.903 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:56.905 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 63(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:24:56.909 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:56.911 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:24:56.915 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:56.917 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:24:56.918 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 65(Integer), 12(Integer), 1294647161643978752(String), 65(Integer)
2020-08-17 13:24:56.920 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:56.934 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:56.951 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:56.953 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:56.963 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:56.965 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:24:56.977 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:24:56.987 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:57.017 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:57.019 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:24:57.044 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:57.103 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:57.105 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 246(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":65,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613072000,"version":65},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:24:57.106 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:57.108 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:24:57.135 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:57.169 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:24:57.171 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:24:57.173 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:24:57.196 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:24:57.227 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:24:57.229 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 391(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":64,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:24:57.278 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.141 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:26:02.142 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:26:02.143 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:26:02.143 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:26:02.147 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:26:02.147 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:26:02.162 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:02.163 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:02.167 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:26:02.168 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:26:02.169 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:26:02.181 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:02.182 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:02.188 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.188 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:02.189 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:26:02.190 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:26:02.190 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:02.192 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:26:02.192 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:02.211 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.211 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.212 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:02.212 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:26:02.212 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:26:02.212 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 66(Integer), 12(Integer), 1294647161643978752(String), 66(Integer)
2020-08-17 13:26:02.229 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:02.231 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:02.238 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.239 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.246 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.253 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.257 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:26:02.258 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 2(Integer), 66(Integer), 12(Integer), 1294647161643978752(String), 66(Integer)
2020-08-17 13:26:02.260 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.261 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:02.263 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:02.262 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:26:02.264 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:02.272 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:02.273 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:26:02.287 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.288 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:26:02.289 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 4(Integer), 66(Integer), 12(Integer), 1294647161643978752(String), 66(Integer)
2020-08-17 13:26:02.297 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.314 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 0
2020-08-17 13:26:02.321 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:02.322 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 65(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:02.329 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:02.329 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.330 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:02.343 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 0
2020-08-17 13:26:02.355 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:02.356 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 102(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:02.368 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.378 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.394 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:02.396 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:02.401 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:02.402 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 99(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:02.414 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:02.416 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:02.417 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:02.421 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:02.422 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:26:02.427 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.446 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.450 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:02.450 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:02.452 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 202(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":66,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613096000,"version":66},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:02.471 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:02.472 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 263(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":66,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613096000,"version":66},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:02.472 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:04.999 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:05.002 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 277(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":4,"blogId":"1294647161643978752","blogRead":66,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613161000,"version":66},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:05.005 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:05.006 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:26:05.031 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:05.039 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:05.043 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:05.052 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:05.062 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:05.064 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:26:05.091 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:05.120 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:05.121 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:26:05.152 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:05.184 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:05.184 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 3045(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":65,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:05.214 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:05.216 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 3076(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:05.237 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:05.238 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 3098(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:05.238 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:05.269 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:05.298 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:13.021 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:26:13.021 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:13.080 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:26:13.121 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:13.122 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:13.151 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:13.232 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:13.233 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:13.290 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:29.348 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:29.349 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:29.358 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:29.359 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:29.382 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:29.383 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:29.384 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:26:29.415 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:29.415 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:29.416 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:26:29.419 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 3(Integer), 67(Integer), 12(Integer), 1294647161643978752(String), 67(Integer)
2020-08-17 13:26:29.473 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:26:29.576 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:29.578 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 255(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":3,"blogId":"1294647161643978752","blogRead":67,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613172000,"version":67},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:29.641 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:31.961 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:26:31.962 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:26:31.977 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:26:31.978 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:26:31.979 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:26:31.981 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:26:31.987 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:26:31.994 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:31.995 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:32.001 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:26:32.010 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:32.011 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:32.013 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:26:32.019 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:32.020 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 55(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:32.031 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:32.034 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:32.035 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:26:32.035 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:32.036 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 68(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:26:32.049 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:32.050 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:26:32.064 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:32.064 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:32.066 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:26:32.068 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 3(Integer), 68(Integer), 12(Integer), 1294647161643978752(String), 68(Integer)
2020-08-17 13:26:32.070 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:32.074 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:32.084 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:32.103 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:32.104 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:26:32.124 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:26:32.128 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:32.159 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:32.161 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:26:32.185 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:32.215 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:32.218 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 254(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":3,"blogId":"1294647161643978752","blogRead":68,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613189000,"version":68},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:32.221 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:32.223 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:26:32.252 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:32.272 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:32.287 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:26:32.287 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:26:32.315 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:26:32.354 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:32.355 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 382(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":3,"blogId":"1294647161643978752","blogRead":67,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:32.419 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:26:34.287 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:26:34.287 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:34.348 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:26:34.380 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:26:34.382 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:26:34.413 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:26:34.470 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:26:34.471 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 185(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:26:34.535 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:33.238 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:27:33.239 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:33.248 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:33.250 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:27:33.267 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:27:33.268 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:33.269 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:27:33.296 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:33.298 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:27:33.299 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 4(Integer), 69(Integer), 12(Integer), 1294647161643978752(String), 69(Integer)
2020-08-17 13:27:33.319 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:33.353 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:27:33.447 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:33.449 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 236(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":4,"blogId":"1294647161643978752","blogRead":69,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613194000,"version":69},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:33.512 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:40.133 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:27:40.136 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:27:40.137 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:27:40.138 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:27:40.139 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:27:40.141 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:27:40.145 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:27:40.146 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:40.154 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:40.155 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:27:40.161 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:27:40.161 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:27:40.163 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:27:40.182 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:27:40.183 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:40.184 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:27:40.191 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:40.192 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:27:40.193 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:40.195 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 87(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:27:40.196 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:40.198 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 78(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:27:40.211 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:40.219 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:40.219 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:40.220 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:27:40.222 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 4(Integer), 70(Integer), 12(Integer), 1294647161643978752(String), 70(Integer)
2020-08-17 13:27:40.243 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:40.243 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:40.244 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:27:40.249 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:40.266 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:40.282 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:27:40.294 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:40.295 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:27:40.319 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:40.343 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:40.344 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:27:40.365 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:40.377 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:40.380 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 276(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":4,"blogId":"1294647161643978752","blogRead":70,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613253000,"version":70},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:40.392 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:40.393 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:27:40.415 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:40.444 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:40.446 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:40.447 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 339(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":4,"blogId":"1294647161643978752","blogRead":69,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:40.503 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:44.909 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:27:44.909 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:44.964 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:27:44.999 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:27:45.000 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:45.033 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:27:45.104 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:45.104 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 198(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:45.161 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:45.250 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:27:45.251 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:45.287 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:27:45.288 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:45.289 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:27:45.332 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:45.335 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:27:45.336 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 5(Integer), 71(Integer), 12(Integer), 1294647161643978752(String), 71(Integer)
2020-08-17 13:27:45.390 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:27:45.486 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:45.487 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 276(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":5,"blogId":"1294647161643978752","blogRead":71,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613264000,"version":71},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:45.567 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:51.701 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:27:51.702 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:27:51.706 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:27:51.707 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:27:51.709 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:27:51.710 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:27:51.724 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:27:51.725 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:51.728 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:51.729 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 57(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:27:51.760 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:27:51.762 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:51.762 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:27:51.764 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:27:51.766 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:27:51.771 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:27:51.789 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:51.792 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:27:51.793 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 5(Integer), 72(Integer), 12(Integer), 1294647161643978752(String), 72(Integer)
2020-08-17 13:27:51.818 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:51.818 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:51.819 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:27:51.834 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:51.836 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:27:51.837 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:51.838 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 124(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:27:51.849 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:27:51.867 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:51.892 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:51.904 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:51.905 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:27:51.913 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:51.940 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:51.941 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:51.944 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 269(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":5,"blogId":"1294647161643978752","blogRead":72,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613265000,"version":72},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:51.980 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:51.983 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:27:52.020 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:52.020 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:52.058 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:52.059 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:27:52.093 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:52.137 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:52.139 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:27:52.171 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:52.345 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:52.347 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 521(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":5,"blogId":"1294647161643978752","blogRead":71,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:52.600 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:52.837 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:27:52.838 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:52.888 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:27:52.917 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:27:52.918 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:52.944 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:27:53.002 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:53.003 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 168(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:53.059 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:27:53.175 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:27:53.176 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:27:53.201 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:27:53.203 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:27:53.205 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:27:53.229 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:27:53.231 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:27:53.233 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 6(Integer), 73(Integer), 12(Integer), 1294647161643978752(String), 73(Integer)
2020-08-17 13:27:53.305 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:27:53.385 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:27:53.386 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 234(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":6,"blogId":"1294647161643978752","blogRead":73,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613272000,"version":73},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:27:53.440 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:28:13.985 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:28:13.985 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:28:13.990 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:28:13.991 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:28:14.003 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:28:14.005 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:28:14.008 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:28:14.014 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:28:14.015 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:28:14.016 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:28:14.026 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:28:14.027 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:28:14.032 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:28:14.034 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:28:14.035 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:28:14.040 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:28:14.041 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 56(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:28:14.042 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:28:14.042 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:28:14.043 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:28:14.054 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:28:14.067 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:28:14.068 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:28:14.068 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 74(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:28:14.069 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:28:14.070 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 6(Integer), 74(Integer), 12(Integer), 1294647161643978752(String), 74(Integer)
2020-08-17 13:28:14.076 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:28:14.077 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:28:14.077 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:28:14.091 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:28:14.097 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:28:14.119 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:28:14.123 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:28:14.124 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:28:14.128 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:28:14.146 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:28:14.181 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:28:14.182 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:28:14.205 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:28:14.209 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:28:14.211 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 221(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":6,"blogId":"1294647161643978752","blogRead":74,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613272000,"version":74},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:28:14.233 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:28:14.235 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:28:14.257 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:28:14.264 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:28:14.289 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:28:14.291 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 297(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":6,"blogId":"1294647161643978752","blogRead":73,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:28:14.339 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:28:17.967 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:28:17.969 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:28:18.019 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:28:18.045 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:28:18.046 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:28:18.074 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:28:18.124 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:28:18.125 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 162(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:28:18.177 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:28:18.278 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:28:18.279 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:28:18.303 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:28:18.305 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:28:18.305 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:28:18.325 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:28:18.326 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:28:18.326 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 7(Integer), 75(Integer), 12(Integer), 1294647161643978752(String), 75(Integer)
2020-08-17 13:28:18.378 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:28:18.454 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:28:18.456 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 195(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":7,"blogId":"1294647161643978752","blogRead":75,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613297000,"version":75},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:28:18.528 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:30:01.024 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:30:01.026 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:30:01.040 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:30:01.041 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:30:01.053 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:30:01.054 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:30:01.171 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:30:01.172 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:30:01.225 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:30:01.226 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:30:01.227 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:30:01.232 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:30:01.238 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:30:01.267 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:30:01.281 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:30:01.280 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 244(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:30:01.357 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:30:01.357 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:30:01.358 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 7(Integer), 76(Integer), 12(Integer), 1294647161643978752(String), 76(Integer)
2020-08-17 13:30:01.370 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:30:01.371 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 323(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:30:01.374 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:30:01.375 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:30:01.467 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:30:01.468 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 370(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:30:01.637 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:30:01.744 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:30:01.792 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:30:01.826 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:30:01.849 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:30:01.850 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:30:02.091 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:30:02.093 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:30:02.153 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:30:02.154 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:30:02.277 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:30:02.278 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 1249(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":7,"blogId":"1294647161643978752","blogRead":76,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613298000,"version":76},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:30:02.304 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:30:02.348 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:30:02.351 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:30:02.368 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:30:02.382 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:30:02.410 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:30:02.411 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:30:02.436 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:30:02.463 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:30:02.465 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 1524(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":7,"blogId":"1294647161643978752","blogRead":75,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:30:02.519 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:30:21.439 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:30:21.441 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:30:21.536 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.339 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:31:12.340 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:31:12.347 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:31:12.347 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:31:12.351 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:31:12.351 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:31:12.363 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:31:12.364 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:31:12.391 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:31:12.390 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:31:12.391 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:31:12.391 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:31:12.423 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.423 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:12.424 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:12.424 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.425 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.425 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.427 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:31:12.427 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:31:12.430 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.431 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:12.431 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:12.443 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.444 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:31:12.445 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 77(Integer), 12(Integer), 1294647161643978752(String), 77(Integer)
2020-08-17 13:31:12.450 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:31:12.463 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.464 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:31:12.464 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 77(Integer), 12(Integer), 1294647161643978752(String), 77(Integer)
2020-08-17 13:31:12.465 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.465 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.475 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.480 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.481 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 89(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.487 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.501 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.502 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 86(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.559 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.590 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 0
2020-08-17 13:31:12.590 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.594 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:12.595 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:31:12.618 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.619 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.620 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.620 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 88(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.623 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.624 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 144(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.642 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.643 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 68787(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.649 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.650 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 285(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":77,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613421000,"version":77},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.667 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.672 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.678 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:12.680 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:31:12.693 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.710 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.712 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 341(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":77,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613421000,"version":77},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:12.712 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.714 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.753 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:12.754 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:31:12.798 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:12.799 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.829 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:12.830 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:31:12.857 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.904 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:12.905 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:12.933 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:12.962 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:12.963 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 627(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":76,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:13.020 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:19.067 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:31:19.070 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:31:19.080 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:31:19.083 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:31:19.088 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:31:19.088 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:31:19.090 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:19.091 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:19.092 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:31:19.092 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:31:19.093 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:19.094 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:19.100 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:31:19.112 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:31:19.114 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:19.116 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:19.120 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:31:19.123 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:19.124 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 61(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:19.133 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:31:19.139 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:19.144 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:19.145 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:19.148 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:31:19.150 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 78(Integer), 12(Integer), 1294647161643978752(String), 78(Integer)
2020-08-17 13:31:19.151 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:19.152 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:31:19.169 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:19.171 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 94(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:19.177 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:19.181 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:19.205 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:31:19.218 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:19.219 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:31:19.224 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:19.245 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:19.277 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:19.278 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:31:19.296 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:19.299 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 259(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":78,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613472000,"version":78},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:19.306 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:19.350 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:19.351 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:31:19.360 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:19.382 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:19.409 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:19.410 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:19.436 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:19.471 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:19.473 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 398(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":77,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:19.535 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:32.984 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:31:32.985 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:31:32.995 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:31:32.996 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:31:33.000 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:31:33.001 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:31:33.007 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:31:33.011 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:31:33.013 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:31:33.020 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:31:33.023 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:33.024 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:33.025 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:33.026 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:33.033 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:31:33.034 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:33.036 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 51(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:33.043 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:31:33.044 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:33.045 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:33.050 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:33.051 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:33.067 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:33.068 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:31:33.069 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:33.074 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:33.075 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:31:33.076 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 79(Integer), 12(Integer), 1294647161643978752(String), 79(Integer)
2020-08-17 13:31:33.078 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:33.083 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:33.097 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:33.105 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:33.127 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:33.127 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:31:33.132 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:31:33.156 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:33.187 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:33.187 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:31:33.215 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:33.225 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:33.226 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 243(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":79,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613478000,"version":79},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:33.247 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:33.248 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:31:33.275 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:33.281 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:33.307 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:33.307 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:33.338 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:33.372 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:33.373 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 382(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":78,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:33.432 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:35.684 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:31:35.685 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:31:35.693 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:31:35.694 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:31:35.697 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:31:35.698 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:31:35.710 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:31:35.712 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:31:35.711 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:35.712 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:31:35.713 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:35.718 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:35.719 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:35.721 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:31:35.724 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:31:35.742 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:31:35.743 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:35.743 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:35.744 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:35.745 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 60(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:35.749 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:35.751 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:35.757 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:35.758 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:31:35.765 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:35.770 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:35.772 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:35.773 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:31:35.774 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 80(Integer), 12(Integer), 1294647161643978752(String), 80(Integer)
2020-08-17 13:31:35.781 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:35.805 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:35.805 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:35.813 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:35.815 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:31:35.833 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:31:35.842 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:35.869 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:35.869 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:31:35.893 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:35.921 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:35.922 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:31:35.940 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:35.940 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 258(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":80,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613492000,"version":80},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:35.947 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:35.978 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:35.980 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:36.002 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:36.008 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:36.036 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:36.037 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 341(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":79,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:36.088 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:37.864 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:31:37.865 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:31:37.872 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:31:37.872 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:31:37.873 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:31:37.874 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:31:37.887 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:31:37.888 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:31:37.889 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:31:37.895 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:37.897 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:37.898 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:37.900 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:37.911 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:31:37.912 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:31:37.927 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:31:37.928 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:37.930 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:37.933 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:37.934 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 50(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:37.966 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:37.967 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:31:37.968 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:37.968 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:37.969 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 75(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:31:37.969 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:31:37.970 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 81(Integer), 12(Integer), 1294647161643978752(String), 81(Integer)
2020-08-17 13:31:37.974 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:37.985 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:37.989 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:37.993 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:38.017 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:31:38.023 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:38.024 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:31:38.031 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:38.049 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:38.087 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:38.088 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:31:38.103 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:38.104 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 242(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":81,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613495000,"version":81},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:38.114 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:38.146 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:38.149 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:31:38.165 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:31:38.175 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:38.207 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:31:38.207 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:31:38.234 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:31:38.269 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:31:38.271 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 396(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":80,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:31:38.329 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:03.773 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:33:03.774 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:33:03.781 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:33:03.782 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:33:03.785 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:33:03.786 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:33:03.796 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:33:03.800 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:03.801 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:33:03.808 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:03.809 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:03.811 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:03.813 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:03.824 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:33:03.826 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:03.836 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:03.836 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:03.838 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:33:03.839 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:03.840 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:33:03.855 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:03.856 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 81(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:03.882 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:03.882 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:03.884 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:33:03.885 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 82(Integer), 12(Integer), 1294647161643978752(String), 82(Integer)
2020-08-17 13:33:03.888 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:03.888 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:03.890 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:33:03.897 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:03.912 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:03.922 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:03.942 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:33:03.958 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:03.959 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:33:03.997 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:04.034 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:04.035 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:04.040 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:04.041 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 267(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":82,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613497000,"version":82},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:04.086 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:04.122 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:04.122 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:04.122 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:33:04.153 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:04.188 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:04.189 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:33:04.217 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:04.258 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:04.258 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 475(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":81,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:04.331 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:13.888 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:13.891 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:13.899 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:13.900 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:13.903 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:13.905 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 35(Long), {"code":20000,"data":false,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:13.920 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:13.922 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:13.923 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:13.952 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:13.956 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:33:13.957 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 123(Integer), 129(Integer), 1(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 6(Integer)
2020-08-17 13:33:13.959 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:13.966 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:14.012 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:33:14.112 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:14.115 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 254(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":129,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:14.188 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:16.856 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:33:16.856 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:16.917 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:33:16.945 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:16.947 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:16.975 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:17.031 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:17.033 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1293850133657653248, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 175(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:17.090 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:17.182 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:17.183 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:17.211 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:17.212 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:17.214 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:17.242 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:17.243 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:33:17.244 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 130(Integer), 1(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 7(Integer)
2020-08-17 13:33:17.297 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:33:17.403 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:17.404 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 250(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":130,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613596000,"version":7},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:17.467 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:23.775 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:33:23.776 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:33:23.777 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:33:23.778 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:33:23.779 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:33:23.780 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:33:23.788 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:23.788 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:23.793 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:23.793 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:23.794 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:23.794 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:23.797 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:33:23.804 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:33:23.807 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:33:23.826 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:23.827 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:23.827 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:23.827 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 49(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:23.829 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:23.835 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:23.835 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:33:23.837 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:23.838 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 61(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:23.840 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:23.841 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:23.864 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:23.866 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:23.868 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:33:23.869 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 131(Integer), 1(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 8(Integer)
2020-08-17 13:33:23.871 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:23.892 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:23.893 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:33:23.899 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:23.923 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:23.925 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:33:23.954 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:23.956 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:23.984 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:24.019 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:24.021 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 249(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":131,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613596000,"version":8},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:24.024 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:24.027 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:33:24.058 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:24.076 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:24.090 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:24.091 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:33:24.119 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:24.150 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:24.151 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 373(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":130,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":82,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:24.212 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:43.700 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:43.702 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:43.705 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:43.706 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:43.710 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:43.710 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:43.740 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:43.741 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:43.741 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:43.768 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:43.769 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:43.769 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:33:43.770 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 132(Integer), 1(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 9(Integer)
2020-08-17 13:33:43.773 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:43.823 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:33:43.920 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:43.922 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 243(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":132,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613603000,"version":9},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:43.988 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:45.151 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:33:45.151 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:33:45.152 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:33:45.153 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:33:45.155 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:33:45.156 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:33:45.167 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:45.168 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:45.170 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:45.170 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:45.172 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:33:45.175 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:45.176 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:33:45.176 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:45.184 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:33:45.200 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:45.201 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:45.202 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:45.203 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:45.203 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:45.206 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:45.207 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 54(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:45.223 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:45.224 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:33:45.234 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:45.237 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:45.237 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:45.239 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:33:45.241 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 133(Integer), 1(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 10(Integer)
2020-08-17 13:33:45.252 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:45.257 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:45.268 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:45.282 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:45.283 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:33:45.294 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:33:45.310 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:45.346 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:45.349 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:45.377 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:45.402 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:45.405 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 242(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":133,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613623000,"version":10},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:45.409 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:45.410 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:33:45.437 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:45.465 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:45.473 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:45.476 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:33:45.505 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:45.537 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:45.538 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 383(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":132,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":82,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:45.596 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:51.455 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:33:51.458 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 13:33:51.458 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:51.460 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 47(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:51.461 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:51.463 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:33:51.491 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:33:51.492 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:33:51.492 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:33:51.521 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:33:51.525 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:33:51.527 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 134(Integer), 1(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 11(Integer)
2020-08-17 13:33:51.533 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:51.533 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:33:51.579 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:33:51.677 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:33:51.678 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 268(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613624000,"version":11},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:33:51.733 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:01.418 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:34:01.419 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293896447598579712(String)
2020-08-17 13:34:01.436 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:01.438 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293896447598579712(String), [1293896447598579712](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":false,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:34:01.458 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:34:01.458 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:34:01.459 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:34:01.485 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:34:01.487 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:34:01.488 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试1(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif(String), <p>测试123213421</p>(String), 123(Integer), 1(Integer), 1(Integer), 14(Integer), 213(Integer), 1293896447598579712(String), 4(Integer)
2020-08-17 13:34:01.500 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:01.544 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:34:01.638 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:01.639 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293896447598579712(String), [1293896447598579712](String), 1(Integer), null, PUT(String), 249(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":213,"blogContent":"<p>测试123213421</p>","blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":1,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:34:01.672 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:01.673 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293896447598579712(String), [1293896447598579712](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:34:01.700 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:01.732 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:03.053 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:34:03.054 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1293896447598579712(String)
2020-08-17 13:34:03.106 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:34:03.137 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:34:03.138 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293896447598579712(String)
2020-08-17 13:34:03.168 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:34:03.221 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:03.222 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1293896447598579712, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 170(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:34:03.274 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:03.355 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:34:03.356 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293896447598579712(String)
2020-08-17 13:34:03.384 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:34:03.387 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:34:03.388 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:34:03.412 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:34:03.417 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:34:03.418 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试1(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif(String), <p>测试123213421</p>(String), 124(Integer), 2(Integer), 1(Integer), 14(Integer), 213(Integer), 1293896447598579712(String), 5(Integer)
2020-08-17 13:34:03.467 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:34:03.556 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:03.556 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293896447598579712(String), [1293896447598579712](String), 1(Integer), null, PUT(String), 224(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":213,"blogContent":"<p>测试123213421</p>","blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613642000,"version":5},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:34:03.613 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:09.162 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:34:09.167 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:34:09.179 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:09.184 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 62(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:34:09.185 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:09.187 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 63(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:34:09.219 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:34:09.221 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:34:09.222 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:34:09.242 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:09.249 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:34:09.253 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:34:09.253 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:34:09.255 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 83(Integer), 12(Integer), 1294647161643978752(String), 83(Integer)
2020-08-17 13:34:09.308 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:34:09.393 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:34:09.394 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 289(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":83,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613583000,"version":83},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:34:09.449 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:37.700 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:36:37.702 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:36:37.710 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:36:37.711 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:36:37.712 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:36:37.713 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:36:37.725 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:36:37.725 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:37.726 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 52(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:37.728 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:37.730 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:36:37.730 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:37.731 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 13:36:37.737 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:36:37.742 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:36:37.750 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:37.752 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:36:37.762 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:36:37.764 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:37.767 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:36:37.771 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:37.771 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:37.773 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 92(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:37.776 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:37.777 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:37.777 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:37.783 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:37.793 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:37.795 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:36:37.797 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 84(Integer), 12(Integer), 1294647161643978752(String), 84(Integer)
2020-08-17 13:36:37.806 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:37.807 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:36:37.833 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:37.833 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:37.837 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:37.861 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:36:37.863 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:37.866 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:36:37.887 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:37.920 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:37.922 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:36:37.944 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:37.948 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:37.950 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 279(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613648000,"version":84},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:36:37.988 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:37.989 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:36:38.012 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:38.016 DEBUG [http-nio-8080-exec-11]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:38.041 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:38.042 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 367(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":83,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:36:38.090 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:39.336 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:36:39.337 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:36:39.345 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:39.347 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:39.375 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:39.376 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":false,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:39.387 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:36:39.389 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:39.390 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:36:39.403 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:39.411 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:39.412 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:36:39.413 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 34(Integer), 2244(Integer), 23(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 10(Integer)
2020-08-17 13:36:39.434 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:39.466 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:36:39.542 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:39.543 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 228(Long), {"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2244,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:36:39.599 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:42.248 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==>  Preparing: update bl_blog set blog_goods = blog_goods + 1 where blog_id = ? 
2020-08-17 13:36:42.250 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:36:42.297 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.good.debug:159 -<==    Updates: 1
2020-08-17 13:36:42.320 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:36:42.321 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:36:42.367 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:36:42.426 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:42.427 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [Good(id=null, blogId=1293850784802377728, blog=null, userId=null, user=null)](String), 1(Integer), null, POST(String), 178(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-08-17 13:36:42.473 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:42.543 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:36:42.544 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:36:42.588 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:36:42.589 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:36:42.589 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:36:42.609 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:36:42.610 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:36:42.611 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2245(Integer), 23(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 11(Integer)
2020-08-17 13:36:42.659 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:36:42.743 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:42.747 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 209(Long), {"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597613801000,"version":11},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:36:42.804 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:54.012 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:36:54.013 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:36:54.069 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:36:54.174 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:54.176 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=很好 很有用！, commentUser=null, commentBlog=null, commentBlogId=1293850784802377728, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 158(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:54.223 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:36:54.334 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:36:54.336 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 61(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:36:54.392 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:52:55.687 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 13:53:48.471 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:53:48.569 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:53:48.827 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:53:48.846 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:53:48.849 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:53:48.889 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:53:48.891 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:53:48.894 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 631(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:53:48.920 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:53:48.922 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2246(Integer), 23(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 12(Integer)
2020-08-17 13:53:48.948 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:53:48.952 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 658(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:53:49.021 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:53:49.409 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:53:49.444 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:53:49.614 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:53:49.617 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 1304(Long), {"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2246,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597613802000,"version":12},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:53:49.771 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:54:23.172 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:54:23.173 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:54:23.192 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:54:23.195 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:54:23.213 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:54:23.215 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 92(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:54:23.234 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:54:23.238 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:54:23.240 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:54:23.254 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:54:23.276 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:54:23.278 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:54:23.279 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:54:23.281 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2247(Integer), 23(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 13(Integer)
2020-08-17 13:54:23.340 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:54:23.445 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:54:23.447 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 306(Long), {"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2247,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614829000,"version":13},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:54:23.524 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:15.010 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:55:15.011 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:55:15.014 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:15.016 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:15.017 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:55:15.018 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:55:15.022 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:55:15.025 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:55:15.027 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:55:15.027 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:55:15.041 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:55:15.047 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:55:15.056 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:55:15.063 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:15.074 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:55:15.079 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:15.092 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:15.092 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:55:15.093 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:55:15.097 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:15.100 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 65(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:15.107 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:15.109 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:15.110 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:15.112 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:15.113 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 87(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:15.114 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:55:15.118 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2248(Integer), 23(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 14(Integer)
2020-08-17 13:55:15.121 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:15.157 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:15.158 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:15.161 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:55:15.169 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:55:15.177 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:15.179 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:15.191 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:15.227 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:15.229 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:55:15.245 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:15.246 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 237(Long), {"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2248,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614863000,"version":14},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:15.257 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:15.296 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:15.296 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:55:15.308 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:15.325 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:15.359 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:15.360 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:55:15.388 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:15.426 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:15.429 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 423(Long), {"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2247,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:15.487 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:18.899 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==>  Preparing: update bl_blog set blog_collection = blog_collection + 1 where blog_id = ? 
2020-08-17 13:55:18.901 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:55:18.952 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -<==    Updates: 1
2020-08-17 13:55:18.954 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:55:18.954 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:55:19.012 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:55:19.254 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:19.256 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/collection(String), [Collection(id=null, User=null, userId=null, Blog=null, BlogId=1293850784802377728, createdTime=null)](String), 1(Integer), null, POST(String), 383(Long), {"code":20000,"msg":"收藏成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:19.312 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:19.398 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:55:19.400 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:55:19.442 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:55:19.448 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:19.451 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:55:19.481 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:19.485 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:55:19.490 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2249(Integer), 24(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 15(Integer)
2020-08-17 13:55:19.558 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:55:19.652 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:19.656 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 285(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2249,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614918000,"version":15},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:19.732 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:32.741 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:55:32.742 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:55:32.761 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:55:32.762 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:55:32.763 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:55:32.763 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:55:32.773 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:55:32.773 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:32.775 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:32.777 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:55:32.778 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:55:32.785 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:55:32.790 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:55:32.807 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:32.808 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:55:32.808 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:32.811 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:32.811 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 47(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:32.813 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 78(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:32.822 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:32.822 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:55:32.822 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 65(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:32.823 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:32.823 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:55:32.832 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:32.833 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:32.844 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:32.846 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:55:32.848 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2250(Integer), 24(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 16(Integer)
2020-08-17 13:55:32.869 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:32.871 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:32.874 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:55:32.885 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:32.885 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:32.903 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:55:32.909 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:32.958 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:32.961 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:55:32.991 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:32.994 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:32.994 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 233(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2250,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614919000,"version":16},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:33.029 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:33.031 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:55:33.045 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:33.063 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:33.097 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:33.098 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:55:33.126 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:33.161 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:33.162 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 419(Long), {"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2249,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:33.222 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:40.122 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:55:40.122 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:55:40.123 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:55:40.123 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:55:40.128 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:55:40.130 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:55:40.142 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:55:40.146 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:55:40.150 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:55:40.153 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:55:40.154 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:40.157 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:40.158 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:55:40.178 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:40.178 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 51(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:40.179 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:40.180 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:55:40.181 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:40.182 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:40.196 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:40.197 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 67(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:55:40.201 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:40.224 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:40.227 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:40.228 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:55:40.230 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:40.232 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:55:40.247 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:40.247 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:55:40.258 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:40.264 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:40.265 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:55:40.267 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2251(Integer), 24(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 17(Integer)
2020-08-17 13:55:40.269 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:40.270 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:40.295 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:40.296 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:55:40.323 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:40.329 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:55:40.353 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:40.354 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:55:40.377 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:40.406 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:55:40.407 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:55:40.420 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:40.422 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 305(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614932000,"version":17},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:40.428 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:55:40.459 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:55:40.461 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 338(Long), {"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2250,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:55:40.492 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:55:40.513 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:57:08.686 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:57:08.688 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:57:08.724 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:57:08.751 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:57:08.754 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 78(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:57:08.841 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:57:09.193 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 13:57:09.194 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:57:09.243 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 13:57:09.307 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:57:09.308 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 160(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:57:09.392 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:57:23.701 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 13:57:23.703 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 13:57:23.804 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 13:57:23.808 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 13:57:23.808 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 4(Integer)
2020-08-17 13:57:23.959 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 13:57:24.039 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:24.040 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:57:24.108 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:24.158 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:24.159 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:57:24.205 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:24.266 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:24.268 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:57:24.323 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:24.365 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:24.366 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:57:24.414 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:24.475 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:57:24.476 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 879(Long), {"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 13:57:24.578 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:57:27.601 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 13:57:27.602 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 13:57:27.645 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 13:57:27.646 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ?, ? 
2020-08-17 13:57:27.647 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 4(Integer), 4(Integer)
2020-08-17 13:57:27.707 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 13:57:27.742 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:27.743 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:57:27.765 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:27.790 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:27.791 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:57:27.811 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:27.861 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:27.862 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:57:27.888 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:27.913 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:27.913 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:57:27.941 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:28.005 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:57:28.006 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=2, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 381(Long), {"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614940000,"version":18},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613643000,"version":6}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 13:57:28.056 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:57:31.397 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:57:31.397 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:57:31.668 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:57:31.776 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:57:31.776 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:57:31.838 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:57:31.879 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:57:31.880 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getById/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 581(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614940000,"version":18},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:57:32.002 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:15.832 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select `name`,header,signature,username,password from bl_admin where username=? 
2020-08-17 13:58:15.833 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: qq1437631334(String)
2020-08-17 13:58:15.855 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-08-17 13:58:15.886 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:15.887 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 57(Long), {"code":20000,"data":{"token":"059F0F62A2CA29F063DCBCCB86695B3C"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 13:58:15.932 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:26.979 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:26.998 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1f6444c](String), 1(Integer), null, GET(String), 737(Long), {"code":20000,"data":"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png","msg":"上传成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 13:58:27.059 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:38.466 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:58:38.470 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:58:38.515 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:58:38.518 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:58:38.519 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2251(Integer), 24(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 18(Integer)
2020-08-17 13:58:38.571 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:58:38.642 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:38.644 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/update(String), [Blog(blogId=1293850784802377728, blogTitle=mybatis <if>标签踩坑, blogImage=http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg, blogContent=<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>, blogGoods=35, blogRead=2251, blogCollection=24, blogType=10, blogRemark=null, blogComment=1, blogSource=null, createdTime=Mon Jul 13 10:04:00 CST 2020, updateTime=Sun Aug 16 17:55:40 CST 2020, version=18, deleted=null)](String), 1(Integer), null, PUT(String), 198(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-17 13:58:38.695 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:38.776 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 13:58:38.777 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 13:58:38.826 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 13:58:38.828 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ?, ? 
2020-08-17 13:58:38.828 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 4(Integer), 4(Integer)
2020-08-17 13:58:38.861 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 13:58:38.889 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:38.894 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:58:38.972 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:39.023 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:39.031 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:58:39.058 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:39.103 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:39.110 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:58:39.133 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:39.164 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:39.164 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:58:39.191 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:39.222 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:39.223 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=2, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 445(Long), {"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615118000,"version":19},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613643000,"version":6}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 13:58:39.271 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:42.612 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:58:42.613 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:58:42.621 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:58:42.623 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:58:42.624 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:58:42.625 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:58:42.627 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:58:42.627 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:58:42.645 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:42.646 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 35(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:58:42.654 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:58:42.655 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:58:42.657 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:58:42.663 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:42.665 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:58:42.666 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 66(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:58:42.666 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:42.667 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:58:42.692 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:42.694 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:58:42.694 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:42.695 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 76(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:58:42.696 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2252(Integer), 24(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 19(Integer)
2020-08-17 13:58:42.697 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:42.696 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:42.698 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 72(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:58:42.699 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:42.701 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:58:42.731 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:42.737 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:42.743 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:58:42.761 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:42.767 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:42.774 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:42.776 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:58:42.805 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:42.840 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:42.843 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 244(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615118000,"version":19},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:58:42.847 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:42.849 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:58:42.877 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:42.900 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:58:42.909 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:42.912 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:58:42.940 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:42.976 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:58:42.979 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:58:43.006 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:58:43.042 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:58:43.044 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 428(Long), {"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:58:43.102 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:01.060 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:59:01.064 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:59:01.121 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:59:01.151 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:01.151 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:59:01.177 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:01.215 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:01.217 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getById/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 151(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615122000,"version":20},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:01.287 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:07.930 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:59:07.931 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:59:07.986 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:59:08.016 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:08.017 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:59:08.044 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:08.073 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:08.074 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getById/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 148(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615122000,"version":20},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:08.144 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:21.388 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:59:21.388 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:59:21.448 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:59:21.449 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:59:21.450 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2252(Integer), 24(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 20(Integer)
2020-08-17 13:59:21.511 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:59:21.597 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:21.598 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/update(String), [Blog(blogId=1293850784802377728, blogTitle=mybatis <if>标签踩坑, blogImage=http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg, blogContent=<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>, blogGoods=35, blogRead=2252, blogCollection=24, blogType=10, blogRemark=null, blogComment=1, blogSource=null, createdTime=Mon Jul 13 10:04:00 CST 2020, updateTime=Sun Aug 16 17:58:42 CST 2020, version=20, deleted=null)](String), 1(Integer), null, PUT(String), 239(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:21.663 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:21.715 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 13:59:21.715 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 13:59:21.740 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 13:59:21.742 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ?, ? 
2020-08-17 13:59:21.742 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 4(Integer), 4(Integer)
2020-08-17 13:59:21.779 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 4
2020-08-17 13:59:21.816 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:21.817 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:59:21.846 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:21.904 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:21.910 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:59:21.940 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:22.027 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:22.029 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:59:22.062 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:22.095 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:22.096 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:59:22.122 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:22.172 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:22.174 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=2, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 445(Long), {"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615161000,"version":21},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613643000,"version":6}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:22.237 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:24.955 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:59:24.957 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:59:24.960 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 13:59:24.961 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 13:59:24.962 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 13:59:24.963 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 13:59:24.966 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 13:59:24.967 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 13:59:24.968 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:24.970 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:24.972 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:24.974 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:24.986 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 13:59:24.993 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 13:59:24.995 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 13:59:25.012 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:25.013 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:59:25.018 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:25.031 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:25.033 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 71(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:25.035 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:25.036 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:25.038 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:25.040 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 70(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 13:59:25.070 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:25.071 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 13:59:25.085 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:59:25.087 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:25.088 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:59:25.094 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:25.097 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:25.103 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:25.114 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:25.117 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:59:25.121 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:25.121 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2253(Integer), 24(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 21(Integer)
2020-08-17 13:59:25.123 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 13:59:25.150 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:25.182 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:59:25.182 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:25.183 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 13:59:25.209 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:25.253 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:25.408 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 13:59:25.431 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:25.439 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:25.441 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 513(Long), {"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2253,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615161000,"version":21},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:59:25.463 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:25.465 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 508(Long), {"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 13:59:25.506 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:25.514 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:54.392 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==>  Preparing: update bl_blog set blog_collection = blog_collection + 1 where blog_id = ? 
2020-08-17 13:59:54.393 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:59:54.433 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -<==    Updates: 1
2020-08-17 13:59:54.434 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:59:54.437 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:59:54.482 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:59:54.609 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:54.610 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/collection(String), [Collection(id=null, User=null, userId=null, Blog=null, BlogId=1293850784802377728, createdTime=null)](String), 1(Integer), null, POST(String), 240(Long), {"code":20000,"msg":"收藏成功"}(String), 127.0.0.1(String)
2020-08-17 13:59:54.656 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 13:59:54.729 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 13:59:54.730 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 13:59:54.778 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 13:59:54.779 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 13:59:54.779 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 13:59:54.801 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 13:59:54.805 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 13:59:54.808 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2254(Integer), 25(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 22(Integer)
2020-08-17 13:59:54.858 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 13:59:54.942 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 13:59:54.943 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 227(Long), {"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2254,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615194000,"version":22},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 13:59:54.998 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:00.872 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:00:00.872 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:00:00.878 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:00:00.878 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:00:00.879 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:00:00.880 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:00:00.895 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:00:00.897 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:00.898 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:00.907 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:00:00.910 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:00:00.909 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:00:00.911 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 14:00:00.913 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:00.914 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 45(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:00.933 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:00.936 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 57(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:00.942 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:00.943 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:00:00.954 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:00.958 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:00.959 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 71(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:00.982 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:00.983 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:00:00.983 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:00.984 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:00.985 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:00:00.988 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:01.008 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:01.009 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:00:01.013 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:01.016 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:00:01.019 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2255(Integer), 25(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 23(Integer)
2020-08-17 14:00:01.022 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:01.030 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:01.055 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:01.057 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:00:01.079 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:01.080 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:00:01.107 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:01.108 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:00:01.128 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:01.157 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:01.158 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:00:01.171 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:01.172 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 299(Long), {"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2255,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615194000,"version":23},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:00:01.180 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:01.206 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:01.207 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 341(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2254,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:00:01.242 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:01.254 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:02.839 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:00:02.845 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:00:02.849 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:00:02.851 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:00:02.851 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:00:02.852 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:00:02.852 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 14:00:02.852 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:00:02.865 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:00:02.867 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:02.870 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:02.875 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:02.877 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:02.879 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:00:02.879 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:00:02.895 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:02.896 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 57(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:02.897 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:00:02.898 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:02.898 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:00:02.908 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:02.909 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:00:02.909 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:02.910 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 68(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:02.922 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:02.924 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:00:02.925 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2256(Integer), 25(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 24(Integer)
2020-08-17 14:00:02.928 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:02.929 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:02.936 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:02.950 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:02.966 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:02.967 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:00:02.970 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:00:02.971 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:02.996 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:03.028 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:03.028 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:00:03.046 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:03.047 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 218(Long), {"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615200000,"version":24},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:00:03.055 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:03.093 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:03.094 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:00:03.101 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:03.119 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:03.153 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:03.154 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:00:03.183 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:03.216 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:03.217 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 375(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2255,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:00:03.274 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:07.028 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:07.029 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:07.032 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:00:07.033 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 14:00:07.042 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:07.043 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 35(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:00:07.060 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:00:07.061 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:07.061 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:00:07.077 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:07.090 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:07.103 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:07.126 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:00:07.127 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 135(Integer), 1(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 12(Integer)
2020-08-17 14:00:07.181 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:00:07.268 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:07.269 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 272(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":135,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:00:07.328 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:10.108 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==>  Preparing: update bl_blog set blog_collection = blog_collection + 1 where blog_id = ? 
2020-08-17 14:00:10.109 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 14:00:10.160 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -<==    Updates: 1
2020-08-17 14:00:10.160 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:00:10.161 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 14:00:10.188 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:00:10.340 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:10.341 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/collection(String), [Collection(id=null, User=null, userId=null, Blog=null, BlogId=1293850133657653248, createdTime=null)](String), 1(Integer), null, POST(String), 262(Long), {"code":20000,"msg":"收藏成功"}(String), 127.0.0.1(String)
2020-08-17 14:00:10.396 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:00:10.471 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:00:10.471 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 14:00:10.504 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:00:10.506 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:00:10.508 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:00:10.537 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:00:10.540 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:00:10.542 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 136(Integer), 2(Integer), 13(Integer), 123(Integer), 1293850133657653248(String), 13(Integer)
2020-08-17 14:00:10.601 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:00:10.693 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:00:10.693 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 252(Long), {"code":20000,"data":{"blogCollection":2,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597615209000,"version":13},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:00:10.751 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:29.842 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:20:29.843 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:20:29.862 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:20:29.884 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:20:29.884 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:20:29.905 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:20:29.958 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 14:20:29.958 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 14:20:29.979 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 1
2020-08-17 14:20:29.982 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 14:20:29.983 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 123(String), <p>123456</p>(String), 2(Integer), 1(Integer), 4(String), 5(Integer)
2020-08-17 14:20:30.049 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:20:30.127 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:30.127 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 1363(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:30.172 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:30.194 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:30.194 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:20:30.212 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:30.213 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, PUT(String), 1613(Long), {"code":20000,"data":{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":2,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597608465000,"version":5},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:20:30.214 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:30.245 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:30.246 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:20:30.266 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:30.273 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:30.291 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:30.292 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:20:30.320 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:30.345 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:30.347 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:30.403 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:30.412 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 14:20:30.413 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:20:30.427 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:30.428 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:30.447 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:30.460 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 14:20:30.477 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:30.479 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 1949(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:20:30.494 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:30.496 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 90(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:30.543 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:30.573 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:30.573 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:20:30.574 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:20:30.595 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:20:30.622 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:30.625 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 2096(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:30.677 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:31.385 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 14:20:31.386 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 14:20:31.412 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 14:20:31.414 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 14:20:31.416 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 14:20:31.465 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 14:20:31.504 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:31.506 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:31.535 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:31.565 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:31.574 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:31.605 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:31.661 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:31.665 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:20:31.700 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:31.742 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:31.745 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:31.772 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:31.808 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:31.810 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:20:31.838 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:31.871 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:31.876 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 485(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:31.941 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:32.195 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version, enable from bl_about where enable = 1 and deleted = 0 limit 1 
2020-08-17 14:20:32.196 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -==> Parameters: 
2020-08-17 14:20:32.239 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.getOne.debug:159 -<==      Total: 1
2020-08-17 14:20:32.241 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? ,enable = ? where about_id = ? and version = ? and deleted = 0 
2020-08-17 14:20:32.242 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 123(String), <p>123456</p>(String), 3(Integer), 1(Integer), 4(String), 6(Integer)
2020-08-17 14:20:32.296 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:20:32.393 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:32.396 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, PUT(String), 243(Long), {"code":20000,"data":{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":3,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597616429000,"version":6},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:20:32.467 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:33.523 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id,type_name, type_blog_count from bl_type where enable = 1 and deleted = 0 
2020-08-17 14:20:33.524 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:20:33.554 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 11
2020-08-17 14:20:33.589 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:33.591 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getAll(String), [](String), 1(Integer), null, GET(String), 74(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:33.649 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:34.548 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 14:20:34.551 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 14:20:34.587 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 14:20:34.594 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 14:20:34.595 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 14:20:34.625 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 14:20:34.662 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:34.664 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:34.692 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:34.725 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:34.726 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:34.753 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:34.788 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:34.790 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:20:34.819 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:34.854 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:34.855 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:34.881 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:34.915 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:34.920 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:20:34.948 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:34.984 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:34.985 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 471(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:35.041 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:37.398 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:20:37.402 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:20:37.436 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:20:37.438 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:37.440 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:37.470 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:37.472 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:20:37.474 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 85(Integer), 12(Integer), 1294647161643978752(String), 85(Integer)
2020-08-17 14:20:37.495 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:37.496 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 134(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:37.514 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:37.517 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 145(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:37.527 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:20:37.540 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:37.581 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:37.624 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:37.626 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 266(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":85,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:20:37.692 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:43.400 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 14:20:43.404 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 14:20:43.432 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 14:20:43.435 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 14:20:43.436 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 14:20:43.465 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 14:20:43.504 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:43.506 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:43.768 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:43.806 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:43.807 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:43.834 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:43.864 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:43.866 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:20:43.892 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:43.923 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:43.923 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:43.954 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:43.992 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:43.993 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:20:44.020 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:44.075 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:44.077 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 659(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":85,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616437000,"version":86},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:44.154 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:47.430 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:20:47.432 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:20:47.436 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:47.438 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:47.442 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:47.443 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:47.463 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:20:47.465 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:47.466 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:47.491 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:47.495 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:47.496 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:20:47.497 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 86(Integer), 12(Integer), 1294647161643978752(String), 86(Integer)
2020-08-17 14:20:47.502 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:47.551 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:20:47.643 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:47.645 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 243(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":86,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616437000,"version":86},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:20:47.712 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:52.542 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 14:20:52.543 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 14:20:52.589 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 14:20:52.613 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 14:20:52.615 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 14:20:52.659 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 14:20:52.712 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:52.713 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:52.742 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:52.781 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:52.783 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:52.811 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:52.841 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:52.841 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:20:52.870 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:52.905 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:52.906 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:20:52.935 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:52.977 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:52.978 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:20:53.007 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:53.051 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:53.053 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 541(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":86,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616447000,"version":87},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:53.110 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:54.123 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:54.127 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:54.129 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:54.130 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:54.161 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:20:54.164 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:20:54.188 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:54.190 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:20:54.192 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:20:54.194 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:20:54.194 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:54.214 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:20:54.218 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:20:54.220 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 87(Integer), 12(Integer), 1294647161643978752(String), 87(Integer)
2020-08-17 14:20:54.263 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:20:54.343 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:54.344 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 208(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616447000,"version":87},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:20:54.389 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:57.402 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:20:57.404 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:20:57.442 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:20:57.443 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:20:57.444 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:20:57.469 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:20:57.595 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:57.596 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=123123, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:57.644 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:20:57.751 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:20:57.754 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597616457000,"version":88},"commentBlogId":"1294647161643978752","commentContent":"123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02:20:57","id":"5f3a21c91018302f93b9378c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:20:57.811 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:28:27.979 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 14:28:42.788 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:28:42.820 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 14:28:42.884 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:28:42.894 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:28:42.895 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 14:28:42.979 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:31:53.681 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:31:53.695 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=芜湖 起飞, commentUser=null, commentBlog=null, commentBlogId=1293850133657653248, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 190973(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:31:53.742 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:00.851 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 14:32:18.252 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:32:18.258 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:32:18.263 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:32:18.267 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:32:18.302 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:32:18.302 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:32:18.302 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:32:18.417 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850784802377728(String)
2020-08-17 14:32:18.541 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:32:18.542 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:32:18.542 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:32:18.540 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:32:18.555 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:18.557 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:32:18.577 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:18.587 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:18.588 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:32:18.613 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:18.616 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:32:18.618 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: mybatis <if>标签踩坑(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg(String), <div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>(String), 35(Integer), 2257(Integer), 25(Integer), 10(Integer), 1(Integer), 1293850784802377728(String), 25(Integer)
2020-08-17 14:32:18.646 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:18.647 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:32:18.673 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:18.674 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:18.675 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:18.677 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 478(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:18.677 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 486(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:18.677 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:18.678 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:32:18.679 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 491(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:18.710 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:18.711 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, GET(String), 495(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:18.734 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:18.730 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:18.737 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:18.752 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:18.755 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:32:18.775 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:18.791 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:18.793 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850784802377728(String), [1293850784802377728](String), 1(Integer), null, PUT(String), 606(Long), {"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:32:18.799 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:18.801 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:32:18.823 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:18.835 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:18.847 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:18.852 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:32:18.868 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:18.873 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:18.903 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:18.905 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 722(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":1,"blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:32:18.956 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:26.100 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:32:26.108 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:29.194 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1293850133657653248(String)
2020-08-17 14:32:29.195 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":2,"blogComment":124,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"updateTime":1597616922000,"version":14},"commentBlogId":"1293850133657653248","commentContent":"芜湖 起飞","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02:28:42","id":"5f3a2459ebfa2a7c45fe3264"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:29.227 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:32:29.229 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:29.230 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:29.231 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, GET(String), 3115(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:29.234 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:32:29.243 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:29.260 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:29.264 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Image = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:32:29.267 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: fastdfs上传图片(String), http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg(String), <p>如上 上传了图片到fastdfs 服务器上</p>(String), 124(Integer), 137(Integer), 2(Integer), 13(Integer), 124(Integer), 1293850133657653248(String), 14(Integer)
2020-08-17 14:32:29.288 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:29.313 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:32:29.398 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:29.401 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1293850133657653248(String), [1293850133657653248](String), 1(Integer), null, PUT(String), 3325(Long), {"code":20000,"data":{"blogCollection":2,"blogComment":124,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597616922000,"version":14},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:32:29.456 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:35.978 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 14:32:35.979 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 14:32:36.004 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 14:32:36.009 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 14:32:36.010 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 14:32:36.037 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 14:32:36.075 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:36.078 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:32:36.181 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:36.215 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:36.220 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:32:36.244 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:36.274 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:36.276 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:32:36.300 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:36.332 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:36.334 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:32:36.362 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:36.393 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:36.394 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:32:36.423 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:36.473 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:36.478 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 561(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616457000,"version":88},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597617138000,"version":26}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:36.535 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:38.476 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:32:38.478 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:32:38.480 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:38.481 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:38.492 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:38.495 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597616457000,"version":88},"commentBlogId":"1294647161643978752","commentContent":"123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02:20:57","id":"5f3a21c91018302f93b9378c"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:32:38.505 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:32:38.508 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:32:38.509 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:32:38.533 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:32:38.537 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:38.537 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:32:38.539 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 88(Integer), 12(Integer), 1(Integer), 1294647161643978752(String), 88(Integer)
2020-08-17 14:32:38.543 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:38.590 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:32:38.675 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:32:38.677 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 225(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":1,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":88,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616457000,"version":88},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:32:38.734 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:32:50.973 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:32:50.977 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:32:51.028 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:32:51.032 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:32:51.035 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:32:51.065 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:33:22.402 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:33:22.405 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=我是最新的评论, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 31242(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:33:22.764 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:33:23.311 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:33:23.311 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:33:23.362 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:33:23.363 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:33:23.363 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:33:23.387 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:34:39.893 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:34:39.894 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=我是最新的评论, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 76609(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:34:39.945 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:34:48.411 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 14:34:59.517 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:34:59.551 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:34:59.607 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:34:59.611 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:34:59.612 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:34:59.718 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:35:15.790 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:15.793 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=我是最新的评论, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 16350(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:15.858 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:16.109 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:16.110 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), null, null, 127.0.0.1(String)
2020-08-17 14:35:16.169 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:20.930 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:35:20.932 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:35:20.964 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:35:20.965 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:35:20.966 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:35:20.969 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:35:20.971 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:35:20.972 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:35:20.973 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:35:20.981 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:20.983 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), null, null, 127.0.0.1(String)
2020-08-17 14:35:20.985 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:20.986 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:35:21.010 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:35:21.020 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:21.021 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:35:21.021 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:35:21.043 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:21.045 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:21.056 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:35:21.055 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:21.056 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:21.059 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:35:21.059 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 89(Integer), 12(Integer), 4(Integer), 1294647161643978752(String), 89(Integer)
2020-08-17 14:35:21.075 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:21.076 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 147(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:21.085 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:21.087 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:21.088 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 150(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:21.107 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:21.112 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:35:21.122 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:21.124 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:35:21.134 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:21.151 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:21.157 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:21.189 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:21.191 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:35:21.217 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:21.224 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:21.225 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 337(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":89,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617299000,"version":89},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:35:21.250 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:21.253 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:35:21.280 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:21.288 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:21.309 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:21.309 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:35:21.335 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:21.367 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:21.369 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 456(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":88,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:35:21.423 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:31.522 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:35:31.522 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:35:31.541 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:35:31.544 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:35:31.545 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:35:31.545 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:35:31.562 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:35:31.563 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:35:31.572 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:35:31.580 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:35:31.580 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:35:31.590 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:31.591 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), null, null, 127.0.0.1(String)
2020-08-17 14:35:31.593 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:35:31.594 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:31.595 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:35:31.596 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:31.597 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 69(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:31.604 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:31.605 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 85(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:31.606 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:31.607 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:31.608 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:31.609 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:35:31.622 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:31.624 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:35:31.624 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 90(Integer), 12(Integer), 4(Integer), 1294647161643978752(String), 90(Integer)
2020-08-17 14:35:31.635 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:31.662 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:31.664 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:31.664 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:35:31.668 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:31.675 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:31.675 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:31.682 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:35:31.692 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:31.726 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:31.728 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:35:31.754 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:31.775 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:31.776 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 252(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":90,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617320000,"version":90},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:35:31.786 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:31.787 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:35:31.815 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:31.830 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:31.844 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:31.845 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:35:31.876 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:31.909 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:31.910 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 382(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":89,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:35:31.969 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:42.820 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==>  Preparing: SELECT count(0) FROM bl_blog WHERE deleted = 0 
2020-08-17 14:35:42.822 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -==> Parameters: 
2020-08-17 14:35:42.849 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage_COUNT.debug:159 -<==      Total: 1
2020-08-17 14:35:42.858 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==>  Preparing: SELECT blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, update_time, version FROM bl_blog WHERE deleted = 0 order by created_time desc LIMIT ? 
2020-08-17 14:35:42.858 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -==> Parameters: 5(Integer)
2020-08-17 14:35:42.899 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getPage.debug:159 -<==      Total: 5
2020-08-17 14:35:42.928 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:42.928 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:35:42.958 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:42.995 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:42.996 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:35:43.028 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:43.060 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:43.061 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:35:43.087 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:43.127 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:43.128 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:35:43.155 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:43.192 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:43.194 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:35:43.223 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:43.259 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:43.260 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getPage(String), [Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)](String), 1(Integer), null, POST(String), 487(Long), {"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":90,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617331000,"version":91},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597617138000,"version":26}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:43.318 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:45.404 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:35:45.407 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:35:45.439 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:35:45.442 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:35:45.444 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:35:45.463 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:45.466 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:35:45.475 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:35:45.477 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:35:45.478 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 91(Integer), 12(Integer), 4(Integer), 1294647161643978752(String), 91(Integer)
2020-08-17 14:35:45.499 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:45.501 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 337(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":89,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617299000,"version":89},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:35:45.531 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:45.533 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:35:45.567 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:35:45.627 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:35:45.628 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 262(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":91,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617331000,"version":91},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:35:45.691 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:36:02.299 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:36:02.300 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:36:02.304 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:36:02.305 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:36:02.306 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:36:02.307 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:36:02.325 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:36:02.327 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:36:02.327 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:36:02.327 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:36:02.339 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:36:02.340 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:36:02.358 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:36:02.360 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:36:02.361 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:36:02.363 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:36:02.369 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:36:02.369 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 85(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:36:02.373 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:36:02.375 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:36:02.390 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:36:02.391 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:36:02.393 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 92(Integer), 12(Integer), 4(Integer), 1294647161643978752(String), 92(Integer)
2020-08-17 14:36:02.400 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:36:02.400 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:36:02.404 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 107(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:36:02.412 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:36:02.426 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:36:02.439 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:36:02.441 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:36:02.442 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:36:02.444 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 148(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:36:02.449 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:36:02.469 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:36:02.470 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:36:02.486 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:36:02.500 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:36:02.503 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:36:02.529 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:36:02.544 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:36:02.546 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), PUT(String), 256(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617345000,"version":92},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:36:02.562 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:36:02.563 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:36:02.603 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:36:02.630 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:36:02.638 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:36:02.640 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:36:02.669 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:36:02.706 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:36:02.708 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 409(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":91,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:36:02.764 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:37:17.864 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:37:17.865 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 32(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 14:37:17.923 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:37:22.909 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:37:22.910 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$e792f722.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$6fedcade.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$67e39ee0.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), 337(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":89,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617299000,"version":89},"msg":"阅读成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 14:37:22.968 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:38:47.944 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 14:39:00.248 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:39:00.295 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 0(Integer), org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value '2020-08-18 02:33:27'; nested exception is java.lang.IllegalArgumentException
	at com.wsy.blog.service.impl.CommentServiceImpl.getByBlogId(CommentServiceImpl.java:48)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$55b3ac6f.getByBlogId(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$FastClassBySpringCGLIB$$6090bebd.invoke(<generated>)
	at com.wsy.blog.service.impl.CommentServiceImpl$$EnhancerBySpringCGLIB$$de0e802b.getByBlogId(<generated>)
	at com.wsy.blog.controller.CommentController.getByBlogId(CommentController.java:40)
	at com.wsy.blog.controller.CommentController$$FastClassBySpringCGLIB$$d2cff4f7.invoke(<generated>)
	at com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)
	at com.wsy.blog.controller.CommentController$$EnhancerBySpringCGLIB$$225abd78.getByBlogId(<generated>)
Caused by: java.lang.IllegalArgumentException
(String), GET(String), null, null, 127.0.0.1(String)
2020-08-17 14:39:00.343 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:40:02.522 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:40:02.525 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 56162(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-08-17 14:40:02.572 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:40:13.277 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:40:13.278 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:40:13.311 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:40:13.316 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:40:13.317 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:40:13.370 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:40:13.510 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:40:13.511 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=我爱你, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 266(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:40:13.553 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:40:17.354 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:40:17.357 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 3751(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:40:17.404 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:40:30.045 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:40:30.046 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:40:30.082 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:40:30.082 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:40:30.083 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:40:30.125 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:40:30.216 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:40:30.217 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=我也爱你  芜湖, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 196(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:40:30.259 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:40:30.330 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:40:30.331 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:40:30.377 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:42:59.936 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 14:43:13.724 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:43:13.756 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:43:13.807 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:43:13.813 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:43:13.814 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:43:13.892 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:43:14.727 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:43:14.730 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=人情味大所大所, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 1086(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:43:14.783 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:43:15.125 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:43:15.127 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 206(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:43:15.183 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:43:51.549 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 14:44:25.399 DEBUG [restartedMain]com.wsy.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.2.RELEASE, Spring v5.2.8.RELEASE
2020-08-17 14:44:42.819 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:44:42.824 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:44:42.825 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:44:42.826 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:44:42.845 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:44:42.845 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:44:42.845 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:44:42.846 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:44:42.892 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:44:42.893 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:44:42.893 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:44:42.893 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:44:42.911 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:44:42.927 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:44:42.932 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:44:42.932 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:44:42.954 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:44:42.955 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:44:42.979 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:44:42.980 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:44:42.981 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:44:42.982 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 93(Integer), 12(Integer), 7(Integer), 1294647161643978752(String), 93(Integer)
2020-08-17 14:44:43.000 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:44:43.031 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:44:43.032 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:44:43.037 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:44:43.053 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:44:43.075 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:43.077 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 328(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:44:43.081 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:43.083 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 330(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:44:43.083 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:44:43.084 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:44:43.085 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:43.087 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 320(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:44:43.109 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:44:43.120 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:43.121 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 331(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:44:43.125 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:44:43.132 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:44:43.138 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:43.139 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 369(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617793000,"version":93},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:44:43.142 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:44:43.186 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:44:43.192 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:44:43.194 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:44:43.200 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:44:43.213 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:44:43.240 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:43.242 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 489(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":7,"blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:44:43.286 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:44:45.788 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:44:45.790 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:44:45.843 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:44:45.845 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:44:45.847 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:44:45.877 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:44:46.078 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:46.079 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=123123123, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 317(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:44:46.134 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:44:46.232 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:44:46.233 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:44:46.298 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:48:14.981 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:48:14.982 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:48:15.029 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:48:15.029 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:48:15.030 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:48:15.056 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:48:15.057 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:48:15.058 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 94(Integer), 12(Integer), 8(Integer), 1294647161643978752(String), 94(Integer)
2020-08-17 14:48:15.112 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:48:15.195 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:48:15.196 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:48:15.197 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:48:15.198 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:48:15.216 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:48:15.224 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:48:15.241 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:48:15.242 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:48:15.255 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:48:15.256 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:48:15.262 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:48:15.286 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:48:15.288 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:48:15.320 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:48:15.337 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:48:15.348 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:48:15.349 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 676(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":94,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617885000,"version":94},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:48:15.360 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:48:15.361 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 715(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:48:15.405 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:48:15.409 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:48:15.429 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:48:15.430 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:48:15.443 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:48:15.446 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 760(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:48:15.449 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:48:15.476 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:48:15.478 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:48:15.497 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:48:15.506 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:48:15.524 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:48:15.524 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:48:15.569 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:48:15.597 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:48:15.598 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:48:15.619 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:48:15.644 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:48:15.646 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:48:15.665 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:48:15.695 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:48:15.697 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 1165(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":8,"blogGoods":8,"blogId":"1294647161643978752","blogRead":94,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:48:15.743 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:37.014 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==>  Preparing: select blog_id,blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment,blog_source,created_time from bl_blog where deleted = 0 order by (blog_goods + blog_read) desc limit 5 
2020-08-17 14:51:37.015 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -==> Parameters: 
2020-08-17 14:51:37.016 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id,link_name,link_url,version,created_time,update_time from bl_link where deleted = 0 
2020-08-17 14:51:37.016 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-08-17 14:51:37.049 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 3
2020-08-17 14:51:37.073 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:51:37.075 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:51:37.086 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, `name`, `header`, signature, `comment`, username from bl_admin limit 1 
2020-08-17 14:51:37.088 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-08-17 14:51:37.116 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:51:37.117 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-08-17 14:51:37.117 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.BlogMapper.recommendedRead.debug:159 -<==      Total: 5
2020-08-17 14:51:37.118 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:51:37.121 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:51:37.145 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:51:37.146 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 10(Integer)
2020-08-17 14:51:37.147 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:51:37.149 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:51:37.149 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 95(Integer), 12(Integer), 8(Integer), 1294647161643978752(String), 95(Integer)
2020-08-17 14:51:37.151 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:37.152 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/getAll(String), [](String), 1(Integer), null, GET(String), 76(Long), {"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:51:37.167 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:51:37.192 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:51:37.195 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:37.199 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 123(Long), {"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:51:37.208 DEBUG [http-nio-8080-exec-10]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:37.240 DEBUG [http-nio-8080-exec-8]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:37.245 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:37.248 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getIsGood/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":true,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:51:37.267 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:37.270 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 78(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:51:37.275 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:51:37.278 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 13(Integer)
2020-08-17 14:51:37.288 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:37.292 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 277(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":95,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597618094000,"version":95},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:51:37.301 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:51:37.306 DEBUG [http-nio-8080-exec-7]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:37.327 DEBUG [http-nio-8080-exec-4]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:37.337 DEBUG [http-nio-8080-exec-5]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:37.359 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:51:37.361 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 16(Integer)
2020-08-17 14:51:37.391 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:51:37.439 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:51:37.440 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 14(Integer)
2020-08-17 14:51:37.471 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:51:37.505 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:51:37.508 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:51:37.535 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:51:37.567 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:37.568 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recommendedRead(String), [](String), 1(Integer), null, GET(String), 562(Long), {"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":8,"blogGoods":8,"blogId":"1294647161643978752","blogRead":94,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}(String), 127.0.0.1(String)
2020-08-17 14:51:37.624 DEBUG [http-nio-8080-exec-2]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:38.954 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==>  Preparing: update bl_blog set blog_collection = blog_collection + 1 where blog_id = ? 
2020-08-17 14:51:38.956 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:51:39.008 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.collection.debug:159 -<==    Updates: 1
2020-08-17 14:51:39.009 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:51:39.010 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:51:39.042 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:51:39.199 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:39.200 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/collection(String), [Collection(id=null, User=null, userId=null, Blog=null, BlogId=1294647161643978752, createdTime=null)](String), 1(Integer), null, POST(String), 259(Long), {"code":20000,"msg":"收藏成功"}(String), 127.0.0.1(String)
2020-08-17 14:51:39.272 DEBUG [http-nio-8080-exec-1]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:39.377 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:51:39.380 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:51:39.416 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:51:39.420 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==>  Preparing: select type_name from bl_type where type_id = ? and deleted = 0 
2020-08-17 14:51:39.422 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -==> Parameters: 12(Integer)
2020-08-17 14:51:39.449 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.TypeMapper.getNameById.debug:159 -<==      Total: 1
2020-08-17 14:51:39.450 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_Title = ? ,blog_Content = ? ,blog_Goods = ? ,blog_Read = ? ,blog_Collection = ? ,blog_Type = ? ,blog_Comment = ? where blog_id = ? and version = ? and deleted = 0 
2020-08-17 14:51:39.450 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: shiroFilter踩坑(String), <h1 style="box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">shiroFilter踩坑</h1>
<p style="box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">authc"</strong>&nbsp;这个权限必须得放在放行权限的后面"<strong style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;">anon</strong>"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>(String), 8(Integer), 96(Integer), 1(Integer), 12(Integer), 8(Integer), 1294647161643978752(String), 96(Integer)
2020-08-17 14:51:39.507 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-08-17 14:51:39.600 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:39.602 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, PUT(String), 258(Long), {"code":20000,"data":{"blogCollection":1,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":96,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597618298000,"version":96},"msg":"阅读成功"}(String), 127.0.0.1(String)
2020-08-17 14:51:39.661 DEBUG [http-nio-8080-exec-9]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:45.536 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==>  Preparing: update bl_blog set blog_comment = blog_comment + 1 where blog_id = ? 
2020-08-17 14:51:45.536 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:51:45.590 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.comment.debug:159 -<==    Updates: 1
2020-08-17 14:51:45.591 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_content, blog_goods, blog_read, blog_collection,blog_type, blog_remark, blog_comment,blog_source,created_time,update_time,version from bl_blog where blog_id = ? and deleted = 0 
2020-08-17 14:51:45.592 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1294647161643978752(String)
2020-08-17 14:51:45.625 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-08-17 14:51:45.748 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:45.749 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=嘤嘤嘤, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)](String), 1(Integer), null, POST(String), 247(Long), {"code":20000,"msg":"评论成功！"}(String), 127.0.0.1(String)
2020-08-17 14:51:45.805 DEBUG [http-nio-8080-exec-3]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-08-17 14:51:45.930 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log (log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?, ?, ?, ?, ?, ?, ?, ?) 
2020-08-17 14:51:45.933 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlogId/1294647161643978752(String), [1294647161643978752](String), 1(Integer), null, GET(String), 62(Long), {"code":20000,"data":[{"commentBlog":{"blogCollection":1,"blogComment":9,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":96,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597618305000,"version":97},"commentBlogId":"1294647161643978752","commentContent":"嘤嘤嘤","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597647105626,"id":"5f3a2901d42868424ba7545b"},{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-08-17 14:51:46.003 DEBUG [http-nio-8080-exec-6]com.wsy.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
