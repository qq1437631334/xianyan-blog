2020-08-17 01:36:13.408 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 17280 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:36:13.435 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:36:14.774 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:36:14.775 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:36:14.804 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-08-17 01:36:15.194 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$54e06fc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:15.234 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:15.247 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3f74f2fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:15.272 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$264c9740] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:15.274 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:36:15.301 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:15.389 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:15.418 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:17.891 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-4} inited
2020-08-17 01:36:17.892 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.108 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.633 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.641 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.665 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.671 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy133] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.676 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.703 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.708 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy134] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.715 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.721 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.764 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:18.810 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:19.487 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 01:36:19.488 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 01:36:19.491 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 01:36:19.494 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 01:36:19.562 INFO  [restartedMain]o.a.c.core.ContainerBase.[Tomcat-2].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 01:36:19.564 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 6064 ms
2020-08-17 01:36:19.778 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-E7QN2JV with PID 13648 (started by wsy in D:\MyProject\blog)
2020-08-17 01:36:19.794 INFO  [main]com.wsy.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:36:21.591 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:36:21.597 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:36:22.040 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 01:36:22.065 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 459ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:36:22.087 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 01:36:22.103 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:36:22.106 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 01:36:22.109 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:36:22.118 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.048 seconds (JVM running for 48325.606)
2020-08-17 01:36:22.142 INFO  [main]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:36:22.142 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 01:36:22.156 INFO  [restartedMain]o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent:63 -Condition evaluation unchanged
2020-08-17 01:36:23.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$23e02654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:23.329 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:23.351 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e74a98a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:23.366 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$f54c4dcc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:23.370 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:36:23.527 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:23.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:23.695 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.049 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:36:29.053 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.156 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.736 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.758 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.779 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.792 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.795 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.835 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.837 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.843 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.846 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:29.981 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:30.104 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:36:34.244 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 01:36:34.427 INFO  [cluster-ClusterId{value='5f396ea2a986d46e8ec23dc2', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:12}] to 112.74.99.109:27017
2020-08-17 01:36:34.468 INFO  [cluster-ClusterId{value='5f396ea2a986d46e8ec23dc2', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32916500}
2020-08-17 01:36:36.800 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 18.613 seconds (JVM running for 21.434)
2020-08-17 01:36:37.409 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:13}] to 112.74.99.109:27017
2020-08-17 01:36:37.517 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:13}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 01:36:37.547 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 01:36:37.553 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:40:32.487 INFO  [Thread-9]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 01:40:32.512 INFO  [Thread-9]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-4} closed
2020-08-17 01:40:32.912 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 17280 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:40:32.914 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:40:33.482 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:40:33.483 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:40:33.497 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020-08-17 01:40:33.680 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$54e06fc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:33.694 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:33.706 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3f74f2fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:33.713 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$264c9740] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:33.715 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:40:33.728 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:33.740 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:33.753 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:35.704 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-5} inited
2020-08-17 01:40:35.705 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:35.887 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.421 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.438 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.478 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.501 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.513 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.582 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.586 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.595 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.607 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.682 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:36.817 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:37.320 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 01:40:37.324 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 01:40:37.325 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 01:40:37.326 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 01:40:37.406 INFO  [restartedMain]o.a.c.core.ContainerBase.[Tomcat-2].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 01:40:37.409 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4491 ms
2020-08-17 01:40:39.937 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-E7QN2JV with PID 21928 (started by wsy in D:\MyProject\blog)
2020-08-17 01:40:39.942 INFO  [main]com.wsy.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:40:41.458 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 01:40:41.519 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 01:40:41.528 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 01:40:41.536 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 8.709 seconds (JVM running for 48585.024)
2020-08-17 01:40:41.542 INFO  [restartedMain]o.s.b.d.a.ConditionEvaluationDeltaLoggingListener.onApplicationEvent:63 -Condition evaluation unchanged
2020-08-17 01:40:41.944 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:40:41.947 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:40:42.322 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 366ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:40:42.352 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:40:42.354 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:40:42.383 INFO  [main]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:40:42.384 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-08-17 01:40:43.420 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$59a33266] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:43.496 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:43.511 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4437b59c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:43.530 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$2b0f59de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:43.534 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:40:43.616 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:43.640 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:43.711 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.266 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:40:46.267 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.366 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.725 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.737 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.751 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.758 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.762 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.790 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.794 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.796 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.798 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:46.898 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:47.086 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:40:47.958 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 01:40:48.077 INFO  [cluster-ClusterId{value='5f396f9f1822ad5734d85060', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:14}] to 112.74.99.109:27017
2020-08-17 01:40:48.117 INFO  [cluster-ClusterId{value='5f396f9f1822ad5734d85060', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33465600}
2020-08-17 01:40:52.147 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 13.307 seconds (JVM running for 15.973)
2020-08-17 01:40:52.684 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:15}] to 112.74.99.109:27017
2020-08-17 01:40:52.836 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 01:40:52.840 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:15}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 01:40:52.853 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:45:28.050 INFO  [Thread-28]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 01:45:28.056 INFO  [Thread-28]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-5} closed
2020-08-17 01:45:28.424 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 17280 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:45:28.430 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:45:29.259 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:45:29.260 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:45:29.273 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020-08-17 01:45:29.469 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$54e06fc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:29.493 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:29.507 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3f74f2fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:29.513 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$264c9740] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:29.516 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:45:29.536 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:29.548 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:29.557 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:32.521 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-6} inited
2020-08-17 01:45:32.523 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:33.067 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:33.549 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-6} closed
2020-08-17 01:45:33.579 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 01:45:36.904 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-E7QN2JV with PID 15664 (started by wsy in D:\MyProject\blog)
2020-08-17 01:45:36.912 INFO  [main]com.wsy.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:45:41.244 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:45:41.253 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:45:43.149 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 1863ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:45:43.189 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:45:43.191 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:45:43.745 INFO  [main]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:45:43.752 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 307ms. Found 0 Redis repository interfaces.
2020-08-17 01:45:46.238 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 18532 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:45:46.257 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:45:46.534 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 01:45:46.536 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 01:45:49.612 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$d2cbce47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:49.917 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:49.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$bd60517d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:49.963 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a437f5bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:49.972 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:45:50.188 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:50.263 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:50.411 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:50.538 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:45:50.540 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:45:50.967 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 410ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:45:51.005 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:45:51.008 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:45:51.040 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:45:51.040 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2020-08-17 01:45:53.661 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$fc194f65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:53.813 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:53.865 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e6add29b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:53.898 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$cd8576dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:53.935 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:45:54.247 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:54.321 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:54.369 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:55.861 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:45:55.862 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:55.962 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:56.585 INFO  [main]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:45:56.601 INFO  [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 01:45:57.096 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:45:57.100 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:57.575 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:45:59.414 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:45:59.500 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 01:46:36.291 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 13556 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:46:36.304 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:46:36.409 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 01:46:36.409 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 01:46:38.115 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:46:38.117 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:46:38.245 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 121ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:46:38.284 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:46:38.288 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:46:38.314 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:46:38.316 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-08-17 01:46:39.083 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$61d88144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:39.144 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:39.162 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4c6d047a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:39.167 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3344a8bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:39.170 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:46:39.273 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:39.319 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:39.387 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:41.634 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:46:41.635 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:41.727 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:46:42.028 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:46:42.038 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 01:49:33.836 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 21688 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:49:33.853 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:49:34.010 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 01:49:34.014 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 01:49:35.280 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:49:35.281 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:49:35.373 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 86ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:49:35.406 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:49:35.410 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:49:35.436 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:49:35.437 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020-08-17 01:49:36.164 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$8d3b0ad5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:36.222 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:36.238 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$77cf8e0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:36.247 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5ea7324d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:36.253 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:49:36.355 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:36.385 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:36.455 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:38.937 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:49:38.937 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:39.027 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:49:39.470 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:49:39.493 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 01:51:48.424 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-E7QN2JV with PID 5140 (started by wsy in D:\MyProject\blog)
2020-08-17 01:51:48.437 INFO  [main]com.wsy.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:51:49.954 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:51:49.957 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:51:50.280 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 313ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:51:50.312 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:51:50.317 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:51:50.358 INFO  [main]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:51:50.359 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces.
2020-08-17 01:51:51.389 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$6f056fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:51.499 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:51.513 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5999f2f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:51.530 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4071973a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:51.534 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:51:51.655 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:51.696 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:51.758 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:54.555 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:51:54.556 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:54.650 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:51:55.012 INFO  [main]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:51:55.022 INFO  [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 01:52:46.120 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-E7QN2JV with PID 20056 (started by wsy in D:\MyProject\blog)
2020-08-17 01:52:46.124 INFO  [main]com.wsy.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:52:47.570 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:52:47.578 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:52:47.900 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 309ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:52:47.923 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:52:47.925 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:52:47.946 INFO  [main]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:52:47.946 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-08-17 01:52:48.658 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$59a33266] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:48.744 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:48.760 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4437b59c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:48.784 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$2b0f59de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:48.789 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:52:48.897 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:48.922 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:48.978 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:51.490 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:52:51.491 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:51.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:52:51.820 INFO  [main]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:52:51.830 INFO  [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 01:55:24.088 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-E7QN2JV with PID 19376 (started by wsy in D:\MyProject\blog)
2020-08-17 01:55:24.090 INFO  [main]com.wsy.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:55:25.013 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:55:25.014 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:55:25.254 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 234ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:55:25.277 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:55:25.278 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:55:25.295 INFO  [main]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:55:25.295 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-08-17 01:55:26.034 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$ab49aac1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:26.110 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:26.123 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$95de2df7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:26.131 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$7cb5d239] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:26.135 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:55:26.222 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:26.253 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:26.339 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:28.895 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:55:28.895 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:28.987 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.298 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.311 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.323 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.336 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.338 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.369 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.371 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.373 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.451 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:29.530 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:55:30.524 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 01:55:30.670 INFO  [cluster-ClusterId{value='5f397312ab7c614859b39a73', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:20}] to 112.74.99.109:27017
2020-08-17 01:55:30.703 INFO  [cluster-ClusterId{value='5f397312ab7c614859b39a73', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30605900}
2020-08-17 01:55:34.745 INFO  [main]com.wsy.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 11.295 seconds (JVM running for 13.097)
2020-08-17 01:55:35.182 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:21}] to 112.74.99.109:27017
2020-08-17 01:55:35.309 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 01:55:35.313 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:21}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 01:55:35.320 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:56:31.016 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 4448 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:56:31.019 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:56:31.069 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 01:56:31.070 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 01:56:32.032 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:56:32.035 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:56:32.108 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 68ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:56:32.124 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:56:32.128 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:56:32.151 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:56:32.151 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 01:56:32.687 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$f6a3f141] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:32.735 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:32.746 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e1387477] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:32.749 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c81018b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:32.753 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:56:32.820 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:32.837 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:32.862 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.040 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:56:35.041 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.147 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.503 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.512 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.524 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.537 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.539 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.563 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.565 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.567 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.569 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.624 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:35.663 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:56:36.215 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 01:56:36.225 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 01:56:36.227 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 01:56:36.227 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 01:56:36.341 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 01:56:36.343 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5273 ms
2020-08-17 01:56:37.131 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 01:56:37.228 INFO  [cluster-ClusterId{value='5f3973551d7f16519f9817a7', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:22}] to 112.74.99.109:27017
2020-08-17 01:56:37.251 INFO  [cluster-ClusterId{value='5f3973551d7f16519f9817a7', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20843300}
2020-08-17 01:56:37.749 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 01:56:39.612 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 01:56:39.637 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 01:56:39.648 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.38 seconds (JVM running for 10.978)
2020-08-17 01:56:55.384 INFO  [http-nio-8080-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 01:56:55.384 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 01:56:55.406 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 21 ms
2020-08-17 01:56:55.598 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/login
2020-08-17 01:56:55.599 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 01:56:55.603 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 01:56:55.605 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.login
2020-08-17 01:56:55.605 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e)]
2020-08-17 01:56:55.953 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"5C120A3BCE636B1BBA78D9EC4A3C4BED"},"msg":"操作成功！"}
2020-08-17 01:56:55.954 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 356
2020-08-17 01:59:17.933 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 01:59:17.949 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 01:59:25.080 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 8468 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 01:59:25.085 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 01:59:25.174 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 01:59:25.175 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 01:59:26.478 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:59:26.481 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 01:59:26.628 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 117ms. Found 1 MongoDB repository interfaces.
2020-08-17 01:59:26.647 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 01:59:26.649 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 01:59:26.680 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 01:59:26.680 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-08-17 01:59:27.235 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$ba694fe6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:27.274 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:27.287 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a4fdd31c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:27.296 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8bd5775e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:27.304 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 01:59:27.377 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:27.400 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:27.423 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:29.634 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 01:59:29.635 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:29.729 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:29.997 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.013 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.020 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.025 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.029 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.048 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.050 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.051 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.053 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.104 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.153 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 01:59:30.653 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 01:59:30.667 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 01:59:30.667 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 01:59:30.667 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 01:59:30.775 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 01:59:30.776 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5600 ms
2020-08-17 01:59:31.367 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 01:59:31.485 INFO  [cluster-ClusterId{value='5f39740340b0ad6f569a3a13', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:23}] to 112.74.99.109:27017
2020-08-17 01:59:31.517 INFO  [cluster-ClusterId{value='5f39740340b0ad6f569a3a13', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29317300}
2020-08-17 01:59:31.937 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 01:59:33.950 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 01:59:34.027 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 01:59:34.051 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.809 seconds (JVM running for 12.035)
2020-08-17 01:59:37.513 INFO  [http-nio-8080-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 01:59:37.514 INFO  [http-nio-8080-exec-5]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 01:59:37.529 INFO  [http-nio-8080-exec-5]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 15 ms
2020-08-17 02:00:31.975 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 02:00:31.976 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:00:31.977 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:00:31.981 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 02:00:31.982 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 02:00:32.204 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"5C120A3BCE636B1BBA78D9EC4A3C4BED"},"msg":"操作成功！"}
2020-08-17 02:00:32.205 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 231
2020-08-17 02:01:10.174 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 02:01:10.175 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:01:10.176 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:01:10.177 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 02:01:10.178 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=14)]
2020-08-17 02:01:10.521 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":0,"total":4},"msg":"查询成功！"}
2020-08-17 02:01:10.522 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 348
2020-08-17 02:01:40.029 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 02:01:40.030 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:01:40.030 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:01:40.031 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 02:01:40.031 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=这是评论, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)]
2020-08-17 02:01:40.142 INFO  [http-nio-8080-exec-6]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:24}] to 112.74.99.109:27017
2020-08-17 02:01:40.198 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 02:01:40.199 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 170
2020-08-17 02:02:52.846 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 02:02:52.848 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:24}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 02:02:52.853 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:03:00.508 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 13168 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:03:00.515 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:03:00.569 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:03:00.569 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:03:01.502 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:03:01.503 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:03:01.598 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 90ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:03:01.619 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:03:01.620 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:03:01.639 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:03:01.639 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
2020-08-17 02:03:02.151 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$a6d2f867] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:02.204 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:02.217 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$91677b9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:02.220 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$783f1fdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:02.224 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:03:02.299 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:02.315 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:02.343 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.551 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:03:04.551 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.642 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.915 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.921 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.930 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.942 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.946 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.967 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.968 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.970 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:04.971 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:05.019 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:05.064 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:03:05.558 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:03:05.579 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:03:05.582 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:03:05.583 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:03:05.684 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:03:05.685 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5116 ms
2020-08-17 02:03:06.251 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:03:06.352 INFO  [cluster-ClusterId{value='5f3974da6b4910464e2de482', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:25}] to 112.74.99.109:27017
2020-08-17 02:03:06.378 INFO  [cluster-ClusterId{value='5f3974da6b4910464e2de482', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21433900}
2020-08-17 02:03:06.832 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:03:08.731 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 02:03:08.755 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 02:03:08.765 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.027 seconds (JVM running for 10.852)
2020-08-17 02:03:13.288 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 02:03:13.288 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 02:03:13.307 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-08-17 02:03:13.607 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 02:03:13.608 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:03:13.609 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:03:13.614 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 02:03:13.614 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=这是评论, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)]
2020-08-17 02:03:13.938 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:26}] to 112.74.99.109:27017
2020-08-17 02:03:14.079 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 02:03:14.080 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 473
2020-08-17 02:05:49.992 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 02:05:49.996 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:26}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 02:05:50.001 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:06:52.018 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 20316 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:06:52.024 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:06:52.102 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:06:52.103 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:06:53.156 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:06:53.157 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:06:53.270 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 103ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:06:53.286 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:06:53.287 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:06:53.309 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:06:53.309 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020-08-17 02:06:53.838 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$350da548] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:53.894 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:53.909 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1fa2287e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:53.915 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$679ccc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:53.918 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:06:53.991 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:54.020 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:54.049 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.403 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:06:56.404 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.505 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.775 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.782 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.790 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.796 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.800 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.824 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.829 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.833 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.839 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.924 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:56.964 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:06:57.630 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:06:57.638 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:06:57.638 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:06:57.639 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:06:57.748 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:06:57.749 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5646 ms
2020-08-17 02:06:58.289 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:06:58.380 INFO  [cluster-ClusterId{value='5f3975c205e7f04f6690db93', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:27}] to 112.74.99.109:27017
2020-08-17 02:06:58.422 INFO  [cluster-ClusterId{value='5f3975c205e7f04f6690db93', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29554300}
2020-08-17 02:06:58.900 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:07:00.940 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 02:07:00.965 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 02:07:00.974 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.659 seconds (JVM running for 12.039)
2020-08-17 02:07:10.384 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 02:07:10.384 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 02:07:10.402 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 18 ms
2020-08-17 02:07:10.518 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 02:07:10.519 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:07:10.519 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:07:10.521 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 02:07:10.521 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=芜湖 起飞12312312, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)]
2020-08-17 02:07:10.844 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:28}] to 112.74.99.109:27017
2020-08-17 02:07:10.975 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 02:07:10.976 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 458
2020-08-17 02:08:29.788 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 02:08:29.791 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:28}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 02:08:29.797 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:08:35.281 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 22372 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:08:35.284 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:08:35.328 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:08:35.328 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:08:36.098 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:08:36.099 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:08:36.186 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 80ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:08:36.208 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:08:36.209 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:08:36.229 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:08:36.229 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-08-17 02:08:36.723 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$8d13501c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:36.765 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:36.774 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$77a7d352] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:36.778 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5e7f7794] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:36.782 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:08:36.845 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:36.861 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:36.886 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:38.947 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:08:38.948 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.018 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.256 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.263 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.270 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.274 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.276 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.295 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.297 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.298 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.300 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.352 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.386 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:08:39.841 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:08:39.850 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:08:39.850 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:08:39.851 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:08:39.950 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:08:39.950 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4622 ms
2020-08-17 02:08:40.484 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:08:40.571 INFO  [cluster-ClusterId{value='5f3976285b7dc32bb947e18d', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:29}] to 112.74.99.109:27017
2020-08-17 02:08:40.600 INFO  [cluster-ClusterId{value='5f3976285b7dc32bb947e18d', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26654300}
2020-08-17 02:08:41.002 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:08:42.795 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 02:08:42.818 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 02:08:42.829 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 8.172 seconds (JVM running for 9.367)
2020-08-17 02:09:01.456 INFO  [http-nio-8080-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 02:09:01.456 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 02:09:01.472 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-08-17 02:09:01.599 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 02:09:01.600 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:09:01.601 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:09:01.603 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 02:09:01.603 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=芜3512312423飞12312312, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)]
2020-08-17 02:09:01.907 INFO  [http-nio-8080-exec-2]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:30}] to 112.74.99.109:27017
2020-08-17 02:09:02.028 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 02:09:02.028 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 429
2020-08-17 02:09:11.864 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 02:09:11.865 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 02:09:11.865 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:09:11.865 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 02:09:11.866 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 02:09:11.975 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}
2020-08-17 02:09:11.976 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 112
2020-08-17 02:11:39.073 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 02:11:39.080 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:30}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 02:11:39.091 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:13:15.721 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 9832 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:13:15.729 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:13:15.825 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:13:15.825 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:13:16.884 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:13:16.885 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:13:16.958 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 69ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:13:16.979 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:13:16.980 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:13:16.994 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:13:16.995 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 02:13:17.556 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$151dc0b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:17.607 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:17.617 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ffb243ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:17.620 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e689e831] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:17.624 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:13:17.699 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:17.716 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:17.747 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.132 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:13:20.133 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.207 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.469 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.479 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.488 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.494 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.498 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.539 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.540 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.549 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.551 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.610 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:20.649 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:13:21.155 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:13:21.168 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:13:21.169 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:13:21.169 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:13:21.295 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:13:21.295 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5470 ms
2020-08-17 02:13:21.860 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:13:21.956 INFO  [cluster-ClusterId{value='5f3977413735637ebe0cb8eb', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:31}] to 112.74.99.109:27017
2020-08-17 02:13:21.983 INFO  [cluster-ClusterId{value='5f3977413735637ebe0cb8eb', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23527700}
2020-08-17 02:13:22.462 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:13:24.692 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 02:13:24.720 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 02:13:24.730 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 10.189 seconds (JVM running for 12.385)
2020-08-17 02:13:29.347 INFO  [http-nio-8080-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 02:13:29.348 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 02:13:29.365 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 17 ms
2020-08-17 02:13:29.517 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 02:13:29.518 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:13:29.518 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:13:29.520 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 02:13:29.520 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=123asdasczxczxcas, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)]
2020-08-17 02:13:29.873 INFO  [http-nio-8080-exec-2]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:32}] to 112.74.99.109:27017
2020-08-17 02:13:30.011 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 02:13:30.013 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 496
2020-08-17 02:13:32.690 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 02:13:32.690 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:13:32.691 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:13:32.692 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 02:13:32.693 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=dfgcvxzzxcvzxcasd, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)]
2020-08-17 02:13:32.779 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 02:13:32.780 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 90
2020-08-17 02:13:39.458 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 02:13:39.459 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:13:39.461 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:13:39.462 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 02:13:39.463 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=pink, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 02:13:39.565 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"token":"5C120A3BCE636B1BBA78D9EC4A3C4BED"},"msg":"操作成功！"}
2020-08-17 02:13:39.566 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 108
2020-08-17 02:14:01.300 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 02:14:01.301 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 02:14:01.301 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:14:01.302 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 02:14:01.302 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=吃撒OHJDOASDAS, commentUser=null, commentBlog=null, commentBlogId=1294534531398889472, commentGood=null, createdTime=null)]
2020-08-17 02:14:01.381 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 02:14:01.381 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 81
2020-08-17 02:14:03.409 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 02:14:03.411 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 02:14:03.412 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:14:03.414 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 02:14:03.415 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 02:14:03.538 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"}],"msg":"操作成功！"}
2020-08-17 02:14:03.539 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 130
2020-08-17 02:16:19.622 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 02:16:19.624 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:32}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 02:16:19.630 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:16:25.489 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 21768 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:16:25.492 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:16:25.538 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:16:25.539 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:16:26.598 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:16:26.599 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:16:26.687 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 84ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:16:26.720 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:16:26.723 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:16:26.758 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:16:26.758 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-08-17 02:16:27.522 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$8bed956d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:27.570 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:27.583 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$768218a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:27.587 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5d59bce5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:27.590 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:16:27.669 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:27.687 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:27.709 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:33.604 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:16:33.604 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:33.683 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:33.953 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:33.959 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:33.971 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:33.980 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:33.983 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:34.003 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:34.005 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:34.006 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:34.008 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:34.068 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:34.104 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:16:34.583 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:16:34.590 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:16:34.591 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:16:34.591 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:16:34.694 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:16:34.695 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 9156 ms
2020-08-17 02:16:35.523 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:16:35.638 INFO  [cluster-ClusterId{value='5f39780309124c0abe9c6aca', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:33}] to 112.74.99.109:27017
2020-08-17 02:16:35.665 INFO  [cluster-ClusterId{value='5f39780309124c0abe9c6aca', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26061200}
2020-08-17 02:16:36.062 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:16:36.138 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:16:36.141 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Stopping service [Tomcat]
2020-08-17 02:16:36.156 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 02:17:00.686 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 21084 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:17:00.690 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:17:00.743 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:17:00.744 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:17:01.688 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:17:01.689 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:17:01.764 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 69ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:17:01.786 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:17:01.787 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:17:01.807 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:17:01.808 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
2020-08-17 02:17:02.356 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$ec687bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:02.403 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:02.415 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f95b0af2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:02.418 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e032af34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:02.421 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:17:02.491 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:02.508 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:02.535 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:04.766 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:17:04.766 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:04.844 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.151 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.160 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.175 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.188 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.191 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.219 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.221 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.224 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.226 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.290 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.332 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:05.849 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:17:05.858 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:17:05.859 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:17:05.859 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:17:05.954 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:17:05.954 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5210 ms
2020-08-17 02:17:06.506 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:17:06.622 INFO  [cluster-ClusterId{value='5f39782221baf1425d70554d', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:34}] to 112.74.99.109:27017
2020-08-17 02:17:06.648 INFO  [cluster-ClusterId{value='5f39782221baf1425d70554d', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24097900}
2020-08-17 02:17:07.073 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:17:07.153 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:17:07.155 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Stopping service [Tomcat]
2020-08-17 02:17:07.167 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 02:17:57.103 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 16816 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:17:57.107 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:17:57.154 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:17:57.154 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:17:58.101 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:17:58.102 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:17:58.176 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 70ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:17:58.199 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:17:58.200 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:17:58.217 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:17:58.217 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-08-17 02:17:58.783 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$8ee3941e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:58.833 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:58.843 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$79781754] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:58.849 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$604fbb96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:58.852 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:17:58.926 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:58.943 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:17:58.971 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.203 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:18:01.204 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.287 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.545 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.552 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.559 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.573 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.575 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.597 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.599 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.600 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.602 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.652 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:01.689 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:02.310 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:18:02.335 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:18:02.336 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:18:02.337 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:18:02.434 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:18:02.434 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5280 ms
2020-08-17 02:18:03.124 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:18:03.248 INFO  [cluster-ClusterId{value='5f39785b795c1a50a8d29651', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:35}] to 112.74.99.109:27017
2020-08-17 02:18:03.274 INFO  [cluster-ClusterId{value='5f39785b795c1a50a8d29651', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23088300}
2020-08-17 02:18:03.801 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:18:06.020 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 02:18:06.050 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 02:18:06.060 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.837 seconds (JVM running for 12.03)
2020-08-17 02:18:08.678 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 02:18:08.681 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 02:18:08.701 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-08-17 02:18:08.900 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 02:18:08.902 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 02:18:08.905 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:18:08.907 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 02:18:08.907 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 02:18:09.035 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:36}] to 112.74.99.109:27017
2020-08-17 02:18:09.303 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"}],"msg":"操作成功！"}
2020-08-17 02:18:09.304 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 404
2020-08-17 02:18:12.806 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 02:18:12.807 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 02:18:12.807 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:18:12.808 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 02:18:12.808 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 02:18:12.854 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"}],"msg":"操作成功！"}
2020-08-17 02:18:12.855 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 49
2020-08-17 02:18:36.670 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 02:18:36.672 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:36}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 02:18:36.678 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 02:18:42.231 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 22504 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 02:18:42.234 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 02:18:42.278 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 02:18:42.279 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 02:18:43.138 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:18:43.139 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 02:18:43.206 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 63ms. Found 1 MongoDB repository interfaces.
2020-08-17 02:18:43.227 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 02:18:43.228 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 02:18:43.244 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 02:18:43.244 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 02:18:43.711 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$1b7a7a66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:43.756 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:43.767 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$60efd9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:43.770 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$ece6a1de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:43.773 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 02:18:43.841 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:43.858 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:43.885 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.088 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 02:18:46.092 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.166 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.400 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.405 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.416 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.425 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.428 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.448 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.449 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.451 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.452 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.499 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:46.535 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 02:18:47.073 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 02:18:47.083 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 02:18:47.084 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 02:18:47.084 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 02:18:47.171 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 02:18:47.172 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4893 ms
2020-08-17 02:18:47.723 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 02:18:47.805 INFO  [cluster-ClusterId{value='5f397887a45e88278b83d1a4', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:37}] to 112.74.99.109:27017
2020-08-17 02:18:47.833 INFO  [cluster-ClusterId{value='5f397887a45e88278b83d1a4', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24402300}
2020-08-17 02:18:48.304 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 02:18:50.119 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 02:18:50.158 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 02:18:50.167 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 8.574 seconds (JVM running for 9.798)
2020-08-17 02:19:00.010 INFO  [http-nio-8080-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 02:19:00.011 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 02:19:00.089 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 76 ms
2020-08-17 02:19:00.202 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 02:19:00.203 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 02:19:00.204 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 02:19:00.206 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 02:19:00.207 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 02:19:00.416 INFO  [http-nio-8080-exec-2]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:38}] to 112.74.99.109:27017
2020-08-17 02:19:00.722 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}
2020-08-17 02:19:00.723 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 521
2020-08-17 02:19:23.050 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 02:19:23.053 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:38}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 02:19:23.058 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 09:19:01.243 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 18584 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 09:19:01.256 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 09:19:01.520 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 09:19:01.523 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 09:19:04.907 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 09:19:04.915 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 09:19:05.332 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 396ms. Found 1 MongoDB repository interfaces.
2020-08-17 09:19:05.451 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 09:19:05.456 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 09:19:05.542 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 09:19:05.544 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2020-08-17 09:19:07.667 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$31f3e560] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:07.878 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:07.948 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1c886896] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:07.959 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3600cd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:07.980 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 09:19:08.319 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:08.697 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:08.909 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:13.512 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 09:19:13.513 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:13.731 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.407 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.416 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.438 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.460 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.465 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.516 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.518 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.523 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.529 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.675 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:14.804 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:19:16.047 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 09:19:16.078 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 09:19:16.080 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 09:19:16.081 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 09:19:16.434 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 09:19:16.435 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 14908 ms
2020-08-17 09:19:18.688 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 09:19:18.964 INFO  [cluster-ClusterId{value='5f39db164ca30b75e2e3e7a0', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:47}] to 112.74.99.109:27017
2020-08-17 09:19:19.002 INFO  [cluster-ClusterId{value='5f39db164ca30b75e2e3e7a0', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28994000}
2020-08-17 09:19:20.567 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 09:19:25.617 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 09:19:25.678 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 09:19:25.697 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 26.349 seconds (JVM running for 30.244)
2020-08-17 09:26:26.714 INFO  [http-nio-8080-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 09:26:26.715 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 09:26:26.734 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-08-17 09:26:26.868 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/login
2020-08-17 09:26:26.869 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:26:26.871 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 09:26:26.875 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.login
2020-08-17 09:26:26.875 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e)]
2020-08-17 09:26:29.150 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"3C5462B271D3165BFD995D872EA4FDD9"},"msg":"操作成功！"}
2020-08-17 09:26:29.151 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 2283
2020-08-17 09:27:14.390 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 09:27:14.398 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 09:27:20.906 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 7660 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 09:27:20.909 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 09:27:20.948 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 09:27:20.949 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 09:27:21.728 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 09:27:21.728 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 09:27:21.805 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 61ms. Found 1 MongoDB repository interfaces.
2020-08-17 09:27:21.821 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 09:27:21.822 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 09:27:21.843 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 09:27:21.844 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 09:27:22.275 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$af9ea603] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:22.311 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:22.321 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9a332939] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:22.328 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$810acd7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:22.335 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 09:27:22.389 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:22.412 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:22.438 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:24.672 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 09:27:24.672 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:24.745 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.017 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.023 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.031 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.034 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.036 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.055 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.064 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.066 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.068 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.110 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.142 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:27:25.574 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 09:27:25.583 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 09:27:25.584 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 09:27:25.584 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 09:27:25.685 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 09:27:25.685 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4736 ms
2020-08-17 09:27:26.300 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 09:27:26.411 INFO  [cluster-ClusterId{value='5f39dcfe7d50bd2ab0e3c5b0', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:48}] to 112.74.99.109:27017
2020-08-17 09:27:26.441 INFO  [cluster-ClusterId{value='5f39dcfe7d50bd2ab0e3c5b0', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27979100}
2020-08-17 09:27:26.795 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 09:27:28.482 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 09:27:28.516 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 09:27:28.528 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 8.229 seconds (JVM running for 9.422)
2020-08-17 09:27:31.663 INFO  [http-nio-8080-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 09:27:31.664 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 09:27:31.678 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 14 ms
2020-08-17 09:27:31.718 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 09:27:31.719 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:27:31.720 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 09:27:31.722 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:27:31.723 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 09:27:31.856 INFO  [http-nio-8080-exec-2]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:49}] to 112.74.99.109:27017
2020-08-17 09:27:32.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}
2020-08-17 09:27:32.066 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 348
2020-08-17 09:30:44.056 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:30:44.056 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:30:44.056 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:30:44.056 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:30:44.056 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:30:44.085 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:30:44.085 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:30:44.085 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:30:44.085 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:30:44.090 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:30:44.090 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:30:44.090 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:30:44.090 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:30:44.090 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:30:44.090 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:30:44.300 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:30:44.301 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 245
2020-08-17 09:30:44.306 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 09:30:44.306 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:30:44.307 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:30:44.307 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:30:44.308 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 09:30:44.308 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 223
2020-08-17 09:30:44.308 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 09:30:44.875 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker"}],"msg":"获取成功"}
2020-08-17 09:30:44.875 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 790
2020-08-17 09:30:45.270 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":9,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597549506000,"version":10},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 09:30:45.270 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 964
2020-08-17 09:30:55.045 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:30:55.045 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:30:55.045 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:30:55.045 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:30:55.045 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:30:55.285 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":10,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597549506000,"version":10},"msg":"阅读成功"}
2020-08-17 09:30:55.285 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 240
2020-08-17 09:32:35.377 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:32:35.377 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:32:35.378 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:32:35.378 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:32:35.378 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:32:35.655 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":11,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599054000,"version":11},"msg":"阅读成功"}
2020-08-17 09:32:35.655 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 278
2020-08-17 09:33:04.224 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:33:04.226 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:33:04.228 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:33:04.228 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:33:04.229 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:33:04.471 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":12,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599155000,"version":12},"msg":"阅读成功"}
2020-08-17 09:33:04.471 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 248
2020-08-17 09:33:41.987 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:33:41.990 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:33:41.991 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:33:41.991 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:33:41.992 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:33:42.234 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":13,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599184000,"version":13},"msg":"阅读成功"}
2020-08-17 09:33:42.234 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 247
2020-08-17 09:34:30.618 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:34:30.618 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:34:30.618 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:30.619 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:34:30.619 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:34:30.855 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":14,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599221000,"version":14},"msg":"阅读成功"}
2020-08-17 09:34:30.857 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 238
2020-08-17 09:34:39.086 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:34:39.087 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:34:39.088 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:39.090 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:34:39.093 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:34:39.346 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":15,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599270000,"version":15},"msg":"阅读成功"}
2020-08-17 09:34:39.354 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 268
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:34:42.606 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:34:42.686 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:34:42.686 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 80
2020-08-17 09:34:42.833 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":16,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599278000,"version":16},"msg":"阅读成功"}
2020-08-17 09:34:42.833 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 227
2020-08-17 09:34:43.025 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":15,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:34:43.025 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 419
2020-08-17 09:34:43.731 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:34:43.731 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1125
2020-08-17 09:34:51.627 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 09:34:51.627 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:34:51.627 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:51.627 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 09:34:51.627 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 09:34:51.731 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"2E677B91796CA6CB9FF54EDAF41855E2"},"msg":"操作成功！"}
2020-08-17 09:34:51.731 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 104
2020-08-17 09:34:52.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 09:34:52.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:34:52.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:52.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 09:34:52.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 09:34:52.064 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:34:52.072 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:34:52.144 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:34:52.144 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:34:52.144 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 80
2020-08-17 09:34:52.144 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 72
2020-08-17 09:34:52.512 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":16,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:34:52.512 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 440
2020-08-17 09:34:52.512 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":16,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599282000,"version":17},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 09:34:52.512 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 448
2020-08-17 09:35:24.957 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:35:24.957 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:35:24.957 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:35:24.957 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:35:24.965 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:35:25.213 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":17,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599282000,"version":17},"msg":"阅读成功"}
2020-08-17 09:35:25.213 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 256
2020-08-17 09:36:23.142 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:36:23.147 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:36:23.149 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:23.151 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:36:23.152 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:36:23.394 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":18,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599324000,"version":18},"msg":"阅读成功"}
2020-08-17 09:36:23.396 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 254
2020-08-17 09:36:25.425 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:36:25.425 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:36:25.425 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:25.425 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:36:25.425 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:36:25.433 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:36:25.433 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:36:25.433 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:25.433 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:36:25.433 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:36:25.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:36:25.497 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:36:25.497 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 09:36:25.521 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:36:25.521 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 80
2020-08-17 09:36:25.665 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":19,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599382000,"version":19},"msg":"阅读成功"}
2020-08-17 09:36:25.665 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 240
2020-08-17 09:36:25.857 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":18,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:36:25.857 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 416
2020-08-17 09:36:52.456 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:36:52.464 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:36:52.472 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:36:52.528 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:36:52.528 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 09:36:52.544 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:36:52.544 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 72
2020-08-17 09:36:52.696 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":20,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599385000,"version":20},"msg":"阅读成功"}
2020-08-17 09:36:52.696 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 240
2020-08-17 09:36:52.840 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":19,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:36:52.840 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 368
2020-08-17 09:37:49.188 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:37:49.188 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:37:49.188 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:37:49.188 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:37:49.188 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:37:49.196 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:37:49.260 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:37:49.260 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 09:37:49.284 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:37:49.284 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 88
2020-08-17 09:37:49.436 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":21,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599412000,"version":21},"msg":"阅读成功"}
2020-08-17 09:37:49.444 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 256
2020-08-17 09:37:49.596 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":20,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:37:49.604 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 408
2020-08-17 09:38:59.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:38:59.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:38:59.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:38:59.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:38:59.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:39:00.074 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":22,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599469000,"version":22},"msg":"阅读成功"}
2020-08-17 09:39:00.076 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 255
2020-08-17 09:39:01.247 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:39:01.247 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:39:01.247 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:39:01.247 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:39:01.247 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:39:01.263 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:39:01.327 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:39:01.327 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 09:39:01.335 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:39:01.335 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 72
2020-08-17 09:39:01.495 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":23,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599539000,"version":23},"msg":"阅读成功"}
2020-08-17 09:39:01.495 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 248
2020-08-17 09:39:01.655 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":22,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:39:01.655 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 392
2020-08-17 09:39:43.661 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:39:43.661 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:39:43.661 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:39:43.662 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:39:43.662 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:39:43.889 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":24,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599541000,"version":24},"msg":"阅读成功"}
2020-08-17 09:39:43.897 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 236
2020-08-17 09:39:50.818 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:39:50.819 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:39:50.820 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:39:50.822 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:39:50.823 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:39:50.849 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:39:50.850 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:39:50.850 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:39:50.850 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:39:50.850 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:39:50.858 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 09:39:50.859 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 41
2020-08-17 09:39:51.108 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":25,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599583000,"version":25},"msg":"阅读成功"}
2020-08-17 09:39:51.109 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 260
2020-08-17 09:40:06.948 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:40:06.950 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:40:06.951 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:06.951 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:40:06.951 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:40:06.954 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:40:06.954 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:40:06.954 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:06.955 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:40:06.956 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:40:06.984 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 09:40:06.985 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 31
2020-08-17 09:40:07.203 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":26,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599590000,"version":26},"msg":"阅读成功"}
2020-08-17 09:40:07.203 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 255
2020-08-17 09:40:09.112 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:40:09.112 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:40:09.112 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:09.112 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:40:09.112 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:09.128 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:09.136 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:40:09.136 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:40:09.136 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:40:09.136 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:40:09.136 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:40:09.136 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:40:09.160 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 09:40:09.160 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 32
2020-08-17 09:40:09.192 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:40:09.192 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 09:40:09.192 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:40:09.192 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 09:40:09.344 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599606000,"version":27},"msg":"阅读成功"}
2020-08-17 09:40:09.344 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 232
2020-08-17 09:40:09.508 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":26,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:40:09.508 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 380
2020-08-17 09:40:49.416 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 09:40:49.416 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:40:49.424 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:49.424 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 09:40:49.424 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=强啊王哥（此条五毛）, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 09:40:49.568 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 09:40:49.568 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 152
2020-08-17 09:40:49.664 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:40:49.664 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:40:49.664 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:40:49.664 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:40:49.664 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:40:49.696 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:40:49.696 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 32
2020-08-17 09:41:10.001 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:41:10.001 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:41:10.003 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:41:10.004 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:41:10.005 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:41:10.010 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:41:10.011 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:41:10.012 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:41:10.012 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:41:10.012 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:41:10.043 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:41:10.044 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 34
2020-08-17 09:41:10.168 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599608000,"version":28},"msg":"阅读成功"}
2020-08-17 09:41:10.168 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 167
2020-08-17 09:41:21.360 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 09:41:21.360 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:41:21.360 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:41:21.360 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 09:41:21.360 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=芜湖   起飞！！！！, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 09:41:21.432 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 09:41:21.432 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 72
2020-08-17 09:41:21.523 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:41:21.523 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:41:21.523 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:41:21.523 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:41:21.523 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:41:21.555 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:41:21.555 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 32
2020-08-17 09:41:53.063 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 09:41:53.063 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:41:53.063 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:41:53.063 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 09:41:53.063 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 09:41:53.143 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":400006,"msg":"用户名或密码错误！"}
2020-08-17 09:41:53.143 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 80
2020-08-17 09:42:01.035 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 09:42:01.035 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:42:01.035 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:01.035 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 09:42:01.035 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=pink, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 09:42:01.075 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"token":"8E464400999D12C9BDDF4B63DDA4996A"},"msg":"操作成功！"}
2020-08-17 09:42:01.075 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:42:01.371 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:42:01.379 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:42:01.411 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:42:01.411 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 09:42:01.459 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:42:01.459 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 80
2020-08-17 09:42:01.739 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:42:01.739 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 360
2020-08-17 09:42:01.771 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":2,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 09:42:01.771 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 400
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293808463692021760
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293808463692021760
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:42:07.604 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:42:07.636 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 09:42:07.636 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 32
2020-08-17 09:42:07.902 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597474463000,"version":4},"msg":"阅读成功"}
2020-08-17 09:42:07.910 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 306
2020-08-17 09:42:16.269 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 09:42:16.269 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:42:16.269 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:16.269 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 09:42:16.269 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=很棒啊 很实用, commentUser=null, commentBlog=null, commentBlogId=1293808463692021760, commentGood=null, createdTime=null)]
2020-08-17 09:42:16.445 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 09:42:16.445 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 176
2020-08-17 09:42:16.565 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293808463692021760
2020-08-17 09:42:16.565 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:42:16.565 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:42:16.565 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:42:16.565 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:42:16.661 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}
2020-08-17 09:42:16.661 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 96
2020-08-17 09:43:08.620 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293808463692021760
2020-08-17 09:43:08.621 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:43:08.622 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:08.622 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:43:08.623 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:43:08.623 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293808463692021760
2020-08-17 09:43:08.624 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:08.624 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:08.624 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:43:08.624 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:43:08.628 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:43:08.629 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:43:08.629 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:43:08.629 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:43:08.629 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:43:08.670 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:43:08.670 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 42
2020-08-17 09:43:08.692 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}
2020-08-17 09:43:08.694 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 71
2020-08-17 09:43:08.695 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:43:08.695 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 67
2020-08-17 09:43:08.910 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":4,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599727000,"version":5},"msg":"阅读成功"}
2020-08-17 09:43:08.912 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 292
2020-08-17 09:43:09.014 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:43:09.014 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 386
2020-08-17 09:43:34.489 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293808463692021760
2020-08-17 09:43:34.489 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:43:34.490 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:34.490 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:43:34.490 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:43:34.520 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:43:34.520 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:34.520 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:43:34.521 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:34.522 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:43:34.522 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:43:34.549 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293808463692021760
2020-08-17 09:43:34.549 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:43:34.550 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:43:34.550 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:43:34.550 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:43:34.599 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:43:34.599 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:43:34.599 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 79
2020-08-17 09:43:34.599 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 78
2020-08-17 09:43:34.622 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}
2020-08-17 09:43:34.625 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 76
2020-08-17 09:43:34.798 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":5,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599788000,"version":6},"msg":"阅读成功"}
2020-08-17 09:43:34.800 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 311
2020-08-17 09:43:34.932 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:43:34.932 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 412
2020-08-17 09:44:13.864 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 09:44:13.865 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:44:13.865 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:13.865 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 09:44:13.865 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:44:13.945 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 09:44:13.946 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 82
2020-08-17 09:44:17.047 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 09:44:17.048 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:44:17.048 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:17.048 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 09:44:17.049 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 09:44:17.435 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":5,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599814000,"version":7},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 09:44:17.436 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 389
2020-08-17 09:44:19.063 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293808463692021760
2020-08-17 09:44:19.063 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:44:19.064 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:19.064 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:44:19.064 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:44:19.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293808463692021760
2020-08-17 09:44:19.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:44:19.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:19.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:44:19.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:44:19.131 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}
2020-08-17 09:44:19.133 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 69
2020-08-17 09:44:19.354 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":6,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599814000,"version":7},"msg":"阅读成功"}
2020-08-17 09:44:19.355 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 292
2020-08-17 09:44:31.187 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293808463692021760
2020-08-17 09:44:31.188 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:44:31.189 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:31.189 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:44:31.190 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 09:44:31.195 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:44:31.195 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:44:31.195 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:44:31.195 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:44:31.196 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:31.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:31.196 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:44:31.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:44:31.196 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:44:31.196 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:44:31.198 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:44:31.198 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:44:31.199 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:31.199 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:44:31.199 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:44:31.260 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:44:31.261 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 66
2020-08-17 09:44:31.263 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:44:31.263 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 65
2020-08-17 09:44:31.474 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599858000,"version":8},"msg":"阅读成功"}
2020-08-17 09:44:31.483 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 296
2020-08-17 09:44:31.484 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:44:31.484 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 289
2020-08-17 09:44:57.048 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 09:44:57.049 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:44:57.049 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:57.049 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 09:44:57.049 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 09:44:57.496 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 09:44:57.502 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 454
2020-08-17 09:44:59.412 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:44:59.413 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:44:59.415 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:44:59.415 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:44:59.416 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:44:59.644 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":29,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599669000,"version":29},"msg":"阅读成功"}
2020-08-17 09:44:59.645 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 233
2020-08-17 09:45:36.658 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:45:36.660 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:45:36.660 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:45:36.660 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:45:36.660 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:45:36.660 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:45:36.660 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:45:36.661 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:45:36.661 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:45:36.661 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:45:36.661 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:45:36.662 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:45:36.663 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:45:36.807 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:45:36.808 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 148
2020-08-17 09:45:36.808 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:45:36.809 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 149
2020-08-17 09:45:36.993 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":30,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599899000,"version":30},"msg":"阅读成功"}
2020-08-17 09:45:36.994 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 337
2020-08-17 09:45:37.115 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":29,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:45:37.115 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 455
2020-08-17 09:47:32.723 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 09:47:32.724 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:47:32.725 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 09:47:32.725 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:47:32.726 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 09:47:32.763 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}
2020-08-17 09:47:32.764 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 41
2020-08-17 09:48:31.004 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 09:48:31.005 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:48:31.006 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 09:48:31.007 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:48:31.008 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 09:48:31.042 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}
2020-08-17 09:48:31.044 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 09:49:19.362 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294534531398889472
2020-08-17 09:49:19.363 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:49:19.364 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 09:49:19.364 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:49:19.364 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294534531398889472]
2020-08-17 09:49:19.397 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"吃撒OHJDOASDAS","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 02-14-01","id":"5f3977693735637ebe0cb8ee"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"dfgcvxzzxcvzxcasd","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-32","id":"5f39774c3735637ebe0cb8ed"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"123asdasczxczxcas","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02-13-29","id":"5f3977493735637ebe0cb8ec"},{"commentBlogId":"1294534531398889472","commentContent":"这是评论","id":"5f39748440b0ad6f569a3a14"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"这是评论","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3974e16b4910464e2de483"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜湖 起飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f3975ce05e7f04f6690db94"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<p>测试2</p>","blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"updateTime":1597473953000,"version":2},"commentBlogId":"1294534531398889472","commentContent":"芜3512312423飞12312312","commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"id":"5f39763d5b7dc32bb947e18e"}],"msg":"操作成功！"}
2020-08-17 09:49:19.397 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 35
2020-08-17 09:50:15.959 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 09:50:15.968 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:49}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 09:50:15.976 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 09:50:25.763 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 10568 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 09:50:25.767 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 09:50:25.839 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 09:50:25.840 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 09:50:26.850 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 09:50:26.851 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 09:50:26.967 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 98ms. Found 1 MongoDB repository interfaces.
2020-08-17 09:50:26.986 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 09:50:26.987 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 09:50:27.018 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 09:50:27.018 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-08-17 09:50:27.617 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$af28b1fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:27.677 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:27.688 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$99bd3531] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:27.694 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8094d973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:27.698 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 09:50:27.784 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:27.801 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:27.849 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.301 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 09:50:30.301 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.375 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.746 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.752 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.761 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.765 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.767 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.800 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.802 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.804 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.805 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.858 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:30.898 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 09:50:31.531 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 09:50:31.548 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 09:50:31.549 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 09:50:31.549 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 09:50:31.683 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 09:50:31.684 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5844 ms
2020-08-17 09:50:32.311 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 09:50:32.419 INFO  [cluster-ClusterId{value='5f39e268946c672ec3fc8069', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:50}] to 112.74.99.109:27017
2020-08-17 09:50:32.445 INFO  [cluster-ClusterId{value='5f39e268946c672ec3fc8069', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22324000}
2020-08-17 09:50:33.247 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 09:50:35.713 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 09:50:35.750 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 09:50:35.759 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 10.975 seconds (JVM running for 13.238)
2020-08-17 09:50:36.077 INFO  [http-nio-8080-exec-8]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 09:50:36.078 INFO  [http-nio-8080-exec-8]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 09:50:36.098 INFO  [http-nio-8080-exec-8]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 20 ms
2020-08-17 09:51:03.172 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:51:03.172 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:51:03.172 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:51:03.173 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:03.173 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:03.173 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:03.175 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:03.175 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:03.175 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:03.181 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:51:03.181 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:51:03.182 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:51:03.183 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:51:03.183 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:51:03.183 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:51:03.183 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:51:03.380 INFO  [http-nio-8080-exec-4]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:51}] to 112.74.99.109:27017
2020-08-17 09:51:03.539 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:51:03.540 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 368
2020-08-17 09:51:03.544 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:51:03.546 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 374
2020-08-17 09:51:03.551 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:51:03.552 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 371
2020-08-17 09:51:03.618 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":31,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597599936000,"version":31},"msg":"阅读成功"}
2020-08-17 09:51:03.618 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 437
2020-08-17 09:51:03.752 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":30,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:51:03.753 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 581
2020-08-17 09:51:06.660 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:51:06.661 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:51:06.662 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:06.662 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:51:06.662 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:51:06.666 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:51:06.666 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:06.666 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:51:06.666 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:51:06.666 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:51:06.666 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:51:06.667 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:51:06.740 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:51:06.740 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:51:06.741 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 75
2020-08-17 09:51:06.741 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 75
2020-08-17 09:51:06.772 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:51:06.772 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 106
2020-08-17 09:51:06.927 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":32,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600263000,"version":32},"msg":"阅读成功"}
2020-08-17 09:51:06.929 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 269
2020-08-17 09:51:07.047 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":31,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:51:07.047 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 381
2020-08-17 09:53:42.695 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:53:42.695 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:53:42.696 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:53:42.696 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:53:42.696 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:53:42.696 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:53:42.697 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:53:42.697 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:53:42.697 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:53:42.697 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:53:42.732 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:53:42.734 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 38
2020-08-17 09:53:42.939 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":33,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600266000,"version":33},"msg":"阅读成功"}
2020-08-17 09:53:42.940 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 245
2020-08-17 09:53:55.632 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:53:55.632 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:53:55.633 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:53:55.633 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:53:55.633 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:53:55.634 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:53:55.634 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:53:55.635 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:53:55.635 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:53:55.636 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:53:55.667 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:53:55.668 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 34
2020-08-17 09:53:55.868 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":34,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600422000,"version":34},"msg":"阅读成功"}
2020-08-17 09:53:55.868 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 236
2020-08-17 09:54:02.221 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:54:02.222 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:54:02.222 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:02.223 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:54:02.223 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:54:02.223 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:02.223 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:02.224 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:02.224 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:54:02.224 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:02.261 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:54:02.264 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 41
2020-08-17 09:54:02.459 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":35,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600435000,"version":35},"msg":"阅读成功"}
2020-08-17 09:54:02.459 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 238
2020-08-17 09:54:12.649 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:54:12.650 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:54:12.651 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:12.651 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:54:12.652 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:54:12.652 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:12.653 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:12.653 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:12.654 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:54:12.655 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:12.685 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:54:12.685 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 34
2020-08-17 09:54:12.909 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":36,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600442000,"version":36},"msg":"阅读成功"}
2020-08-17 09:54:12.910 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 261
2020-08-17 09:54:22.590 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:54:22.590 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:54:22.591 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:54:22.591 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:22.592 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:22.592 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:22.592 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:54:22.592 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:54:22.593 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:22.593 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:22.593 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:54:22.594 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:22.594 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:22.595 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:54:22.595 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:54:22.602 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:54:22.603 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:22.603 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:22.603 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:54:22.604 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:54:22.605 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:54:22.606 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:22.606 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:22.606 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:54:22.607 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:54:22.623 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:54:22.624 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 34
2020-08-17 09:54:22.656 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:54:22.656 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 63
2020-08-17 09:54:22.664 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:54:22.664 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 59
2020-08-17 09:54:22.827 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":37,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600452000,"version":37},"msg":"阅读成功"}
2020-08-17 09:54:22.828 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 238
2020-08-17 09:54:22.968 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":36,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:54:22.969 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 367
2020-08-17 09:54:52.003 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:54:52.004 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:54:52.005 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:52.006 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:54:52.006 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:52.011 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:54:52.011 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:54:52.012 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:52.012 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:52.013 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:52.013 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:52.013 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:54:52.013 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:54:52.013 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:54:52.013 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:54:52.013 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:54:52.014 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:52.014 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:52.014 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:54:52.014 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:54:52.025 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:54:52.026 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:54:52.026 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:54:52.026 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:54:52.026 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:54:52.064 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:54:52.065 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 39
2020-08-17 09:54:52.072 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:54:52.072 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 61
2020-08-17 09:54:52.080 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:54:52.081 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 68
2020-08-17 09:54:52.242 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":38,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600462000,"version":38},"msg":"阅读成功"}
2020-08-17 09:54:52.244 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 241
2020-08-17 09:54:52.394 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":37,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:54:52.395 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 384
2020-08-17 09:55:05.399 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:55:05.400 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:55:05.401 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:55:05.401 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:55:05.401 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:55:05.402 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:55:05.402 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:55:05.402 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:55:05.403 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:55:05.404 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:55:05.435 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:55:05.436 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 34
2020-08-17 09:55:05.627 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":39,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600491000,"version":39},"msg":"阅读成功"}
2020-08-17 09:55:05.655 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 256
2020-08-17 09:55:07.002 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:55:07.003 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:55:07.004 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:55:07.004 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:55:07.005 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:55:07.008 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:55:07.009 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:55:07.010 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:55:07.010 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:55:07.010 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:55:07.010 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:55:07.011 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:55:07.011 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:55:07.012 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:55:07.012 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:55:07.015 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:55:07.016 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:55:07.016 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:55:07.016 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:55:07.017 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:55:07.017 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:55:07.017 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:55:07.018 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:55:07.018 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:55:07.018 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:55:07.043 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:55:07.044 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 36
2020-08-17 09:55:07.078 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:55:07.079 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 69
2020-08-17 09:55:07.080 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:55:07.081 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 09:55:07.228 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":40,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600505000,"version":40},"msg":"阅读成功"}
2020-08-17 09:55:07.229 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 227
2020-08-17 09:55:07.418 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":39,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:55:07.418 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 403
2020-08-17 09:56:53.622 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 09:56:53.622 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:56:53.622 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:56:53.622 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 09:56:53.622 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 09:56:53.703 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"5E3A203E1795C973736EA6C83D1A3AB6"},"msg":"登陆成功"}
2020-08-17 09:56:53.703 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 81
2020-08-17 09:56:53.916 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 09:56:53.916 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:56:53.917 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:56:53.917 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 09:56:53.917 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:56:53.919 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 09:56:53.919 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 09:56:53.920 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:56:53.922 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 09:56:53.922 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:56:53.923 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:56:53.954 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 09:56:53.955 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 36
2020-08-17 09:56:53.981 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 09:56:53.981 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 62
2020-08-17 09:56:53.989 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 09:56:53.989 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 67
2020-08-17 09:56:54.151 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600506000,"version":41},"msg":"阅读成功"}
2020-08-17 09:56:54.153 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 237
2020-08-17 09:56:54.313 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":40,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 09:56:54.314 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 392
2020-08-17 09:57:19.699 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 09:57:19.700 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:57:19.700 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:57:19.700 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 09:57:19.700 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:57:19.806 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 09:57:19.807 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 108
2020-08-17 09:57:20.513 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 09:57:20.513 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:57:20.513 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:57:20.514 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 09:57:20.514 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 09:57:20.881 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getTimeLine
2020-08-17 09:57:20.882 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:57:20.882 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:57:20.883 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getTimeLine
2020-08-17 09:57:20.883 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:57:20.946 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}
2020-08-17 09:57:20.947 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 66
2020-08-17 09:57:21.014 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 09:57:21.015 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 502
2020-08-17 09:57:21.904 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 09:57:21.905 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:57:21.905 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:57:21.905 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 09:57:21.905 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:57:22.123 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"aboutContent":"我的个人","aboutId":"1","aboutRead":48,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597522868000,"version":49},"msg":"阅读成功"}
2020-08-17 09:57:22.123 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 219
2020-08-17 09:57:22.403 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getTimeLine
2020-08-17 09:57:22.404 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 09:57:22.404 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:57:22.404 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getTimeLine
2020-08-17 09:57:22.404 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:57:22.471 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}
2020-08-17 09:57:22.472 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 69
2020-08-17 09:57:26.619 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 09:57:26.619 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 09:57:26.620 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:57:26.620 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 09:57:26.620 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 09:57:26.831 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"aboutContent":"我的个人","aboutId":"1","aboutRead":49,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597600641000,"version":50},"msg":"阅读成功"}
2020-08-17 09:57:26.833 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 214
2020-08-17 09:57:27.534 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 09:57:27.534 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 09:57:27.534 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 09:57:27.535 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 09:57:27.535 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 09:57:27.957 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 09:57:27.957 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 423
2020-08-17 10:10:37.443 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:10:37.445 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:10:37.446 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:10:37.446 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:10:37.447 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=1, header=null, nickname=zz147258, userEmail=2388688213@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:10:39.628 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 10:10:39.628 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 2185
2020-08-17 10:10:51.207 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 10:10:51.208 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:10:51.208 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:10:51.208 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 10:10:51.208 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=qq143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:10:51.283 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":400006,"msg":"用户名或密码错误！"}
2020-08-17 10:10:51.283 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 76
2020-08-17 10:10:57.281 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 10:10:57.281 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:10:57.281 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:10:57.282 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 10:10:57.282 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:10:57.346 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597601439000,"nickname":"zz147258","password":"d4c5c1db2e99021e03201f22bcdde6fc","sex":1,"updateTime":1597601439000,"userEmail":"2388688213@qq.com","userId":13,"username":"wsy143763","version":1},"token":"0A5A6622F27F4C10444415F4D3945FB3"},"msg":"登陆成功"}
2020-08-17 10:10:57.346 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 65
2020-08-17 10:10:57.686 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 10:10:57.687 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:10:57.687 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:10:57.687 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 10:10:57.687 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 10:10:57.687 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 10:10:57.687 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:10:57.687 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:10:57.688 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:10:57.688 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:10:57.688 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:10:57.688 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 10:10:57.688 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 10:10:57.688 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:10:57.688 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:10:57.777 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 10:10:57.778 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 92
2020-08-17 10:10:57.780 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 10:10:57.781 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 94
2020-08-17 10:10:59.083 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 10:10:59.084 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1397
2020-08-17 10:11:01.712 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 10:11:01.712 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:11:01.713 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:11:01.713 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 10:11:01.713 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 10:11:02.113 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":41,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 10:11:02.114 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 402
2020-08-17 10:11:05.060 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 10:11:05.061 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 10:11:05.063 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:11:05.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 10:11:05.064 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:11:05.064 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 10:11:05.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:11:05.065 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:11:05.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 10:11:05.065 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:11:05.100 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 10:11:05.101 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 37
2020-08-17 10:11:05.289 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":42,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597600613000,"version":42},"msg":"阅读成功"}
2020-08-17 10:11:05.289 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 229
2020-08-17 10:13:57.933 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 10:13:57.934 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:13:57.935 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:13:57.973 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 10:13:57.973 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 39
2020-08-17 10:13:58.001 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 10:13:58.002 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 68
2020-08-17 10:13:58.179 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":43,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601464000,"version":43},"msg":"阅读成功"}
2020-08-17 10:13:58.180 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 247
2020-08-17 10:13:58.248 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":42,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 10:13:58.248 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 314
2020-08-17 10:13:58.986 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 10:13:58.986 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1052
2020-08-17 10:14:06.226 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 10:14:06.227 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 10:14:06.228 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:06.228 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 10:14:06.229 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:14:06.229 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 10:14:06.231 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:06.232 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:06.232 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 10:14:06.233 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:14:06.234 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 10:14:06.235 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:06.235 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:06.236 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 10:14:06.236 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 10:14:06.236 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:06.236 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:14:06.236 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:06.236 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 10:14:06.237 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:14:06.240 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 10:14:06.240 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:06.241 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:06.241 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 10:14:06.241 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:14:06.264 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 10:14:06.266 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 37
2020-08-17 10:14:06.299 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 10:14:06.299 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 10:14:06.300 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 66
2020-08-17 10:14:06.300 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 60
2020-08-17 10:14:06.482 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":44,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601637000,"version":44},"msg":"阅读成功"}
2020-08-17 10:14:06.484 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 258
2020-08-17 10:14:06.635 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":43,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 10:14:06.636 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 400
2020-08-17 10:14:28.667 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:14:28.669 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:14:28.669 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:28.670 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:14:28.670 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=1, header=null, nickname=nick, userEmail=2388688213@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:14:28.822 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 10:14:28.822 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 155
2020-08-17 10:14:50.556 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 10:14:50.557 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:14:50.557 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:50.557 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 10:14:50.557 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=wsy143763, password=d4c5c1db2e99021e03201f22bcdde6fc, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:14:50.612 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597601668000,"nickname":"nick","password":"d4c5c1db2e99021e03201f22bcdde6fc","sex":1,"updateTime":1597601668000,"userEmail":"2388688213@qq.com","userId":14,"username":"wsy143763","version":1},"token":"0C57DE4D263F8707D5A0BF3AB7A2890A"},"msg":"登陆成功"}
2020-08-17 10:14:50.613 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 57
2020-08-17 10:14:50.841 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 10:14:50.842 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 10:14:50.843 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:50.843 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 10:14:50.843 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 10:14:50.843 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:50.843 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:14:50.844 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:50.844 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 10:14:50.844 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 10:14:50.847 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 10:14:50.847 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 10:14:50.848 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:50.848 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:50.849 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:50.849 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:50.849 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 10:14:50.849 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 10:14:50.849 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:14:50.849 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:14:50.850 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 10:14:50.850 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:14:50.850 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:14:50.851 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 10:14:50.852 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:14:50.902 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 10:14:50.902 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 59
2020-08-17 10:14:50.934 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 10:14:50.934 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 10:14:50.935 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 88
2020-08-17 10:14:50.935 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 85
2020-08-17 10:14:51.076 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601646000,"version":45},"msg":"阅读成功"}
2020-08-17 10:14:51.077 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 236
2020-08-17 10:14:51.220 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":44,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 10:14:51.220 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 373
2020-08-17 10:15:23.433 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 10:15:23.434 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:15:23.435 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 10:15:23.435 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:15:23.435 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 10:15:23.435 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:15:23.435 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:15:23.500 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 10:15:23.501 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 68
2020-08-17 10:15:23.503 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 10:15:23.503 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 69
2020-08-17 10:15:23.789 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 10:15:23.789 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 355
2020-08-17 10:29:23.447 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 10:29:23.458 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:51}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 10:29:23.468 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 10:29:31.140 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 16568 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 10:29:31.145 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 10:29:31.257 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 10:29:31.257 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 10:29:32.512 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 10:29:32.514 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 10:29:32.611 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 90ms. Found 1 MongoDB repository interfaces.
2020-08-17 10:29:32.636 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 10:29:32.637 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 10:29:32.657 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 10:29:32.657 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-08-17 10:29:33.262 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$593adba6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:33.309 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:33.335 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$43cf5edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:33.341 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$2aa7031e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:33.344 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 10:29:33.450 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:33.477 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:33.511 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:35.920 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 10:29:35.921 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:35.993 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.279 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.285 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.292 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.295 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.298 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.324 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.325 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.327 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.329 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.377 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:36.412 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:29:37.073 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 10:29:37.085 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 10:29:37.086 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 10:29:37.086 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 10:29:37.194 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 10:29:37.194 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5937 ms
2020-08-17 10:29:37.812 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 10:29:37.998 INFO  [cluster-ClusterId{value='5f39eb9141ece660c5bf7ed2', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:55}] to 112.74.99.109:27017
2020-08-17 10:29:38.041 INFO  [cluster-ClusterId{value='5f39eb9141ece660c5bf7ed2', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39706100}
2020-08-17 10:29:38.467 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 10:29:40.322 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 10:29:40.373 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 10:29:40.384 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 11.201 seconds (JVM running for 15.352)
2020-08-17 10:29:54.744 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 10:29:54.744 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 10:29:54.772 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 28 ms
2020-08-17 10:29:54.893 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:29:54.893 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:29:54.894 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:29:54.896 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:29:54.897 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=999, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=2, header=null, nickname=999, userEmail=1231123123, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:29:55.287 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 10:29:55.288 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 395
2020-08-17 10:30:01.008 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 10:30:01.009 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:30:01.009 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:30:01.009 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 10:30:01.009 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=999, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:30:01.084 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597602594000,"nickname":"999","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597602594000,"userEmail":"1231123123","userId":16,"username":"999","version":1},"token":"95178B19B6DAB0C64DCCF243035164CB"},"msg":"登陆成功"}
2020-08-17 10:30:01.085 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 77
2020-08-17 10:30:01.501 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 10:30:01.501 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 10:30:01.501 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:30:01.502 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 10:30:01.503 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:30:01.576 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 10:30:01.577 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 76
2020-08-17 10:30:01.591 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 10:30:01.591 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 90
2020-08-17 10:30:01.905 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 10:30:01.905 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 404
2020-08-17 10:32:32.525 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:32:32.526 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:32:32.526 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:32:32.526 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:32:32.526 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=123123, password=4297f44b13955235245b2497399d7a93, name=null, sex=1, header=null, nickname=adqwe, userEmail=qweqwe, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:32:32.676 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 10:32:32.676 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 151
2020-08-17 10:39:47.595 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 10:39:47.600 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 10:39:54.711 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 15428 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 10:39:54.719 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 10:39:54.798 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 10:39:54.798 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 10:39:55.867 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 10:39:55.870 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 10:39:55.992 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 109ms. Found 1 MongoDB repository interfaces.
2020-08-17 10:39:56.024 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 10:39:56.026 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 10:39:56.048 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 10:39:56.049 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-08-17 10:39:56.638 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$c3ae073a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:56.693 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:56.706 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ae428a70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:56.711 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$951a2eb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:56.715 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 10:39:56.792 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:56.812 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:56.846 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:58.924 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 10:39:58.924 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:58.990 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.209 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.216 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.224 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.227 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.229 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.248 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.250 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.252 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.253 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.305 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.339 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:39:59.847 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 10:39:59.854 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 10:39:59.854 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 10:39:59.855 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 10:39:59.945 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 10:39:59.945 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5147 ms
2020-08-17 10:40:00.457 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 10:40:00.539 INFO  [cluster-ClusterId{value='5f39ee00b0ceb33a8f98deb7', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:56}] to 112.74.99.109:27017
2020-08-17 10:40:00.562 INFO  [cluster-ClusterId{value='5f39ee00b0ceb33a8f98deb7', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20596500}
2020-08-17 10:40:01.112 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 10:40:03.204 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 10:40:03.226 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 10:40:03.236 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.329 seconds (JVM running for 10.701)
2020-08-17 10:42:21.579 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 10:42:21.579 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 10:42:21.597 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 18 ms
2020-08-17 10:42:21.750 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:42:21.750 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:42:21.753 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:42:21.755 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:42:21.755 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=111111, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:45:38.355 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 10:45:38.362 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 10:45:42.832 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 10676 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 10:45:42.836 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 10:45:42.878 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 10:45:42.879 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 10:45:43.642 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 10:45:43.643 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 10:45:43.721 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 74ms. Found 1 MongoDB repository interfaces.
2020-08-17 10:45:43.734 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 10:45:43.735 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 10:45:43.749 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 10:45:43.750 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2020-08-17 10:45:44.177 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$580a16dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:44.222 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:44.232 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$429e9a12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:44.236 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$29763e54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:44.246 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 10:45:44.304 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:44.327 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:44.350 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.509 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 10:45:46.509 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.581 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.840 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.847 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.855 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.858 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.860 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.890 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.891 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.893 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.894 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.943 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:46.976 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 10:45:47.473 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 10:45:47.481 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 10:45:47.482 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 10:45:47.482 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 10:45:47.575 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 10:45:47.575 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4696 ms
2020-08-17 10:45:48.088 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 10:45:48.191 INFO  [cluster-ClusterId{value='5f39ef5cf73e8f2cad59f979', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:58}] to 112.74.99.109:27017
2020-08-17 10:45:48.221 INFO  [cluster-ClusterId{value='5f39ef5cf73e8f2cad59f979', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28799200}
2020-08-17 10:45:48.600 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 10:45:50.387 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 10:45:50.456 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 10:45:50.463 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 8.251 seconds (JVM running for 9.401)
2020-08-17 10:45:57.493 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 10:45:57.493 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 10:45:57.515 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 22 ms
2020-08-17 10:45:57.636 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:45:57.636 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:45:57.637 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:45:57.638 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:45:57.639 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=111111, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:45:57.989 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 10:45:57.990 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 355
2020-08-17 10:46:07.087 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:46:07.088 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:46:07.088 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:46:07.088 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:46:07.088 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=111111, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:46:09.631 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:46:09.632 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:46:09.632 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:46:09.632 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:46:09.633 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=1111112, password=96e79218965eb72c92a549dd5a330112, name=null, sex=1, header=null, nickname=111111, userEmail=111111, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:46:09.786 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 10:46:09.786 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 155
2020-08-17 10:47:08.084 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 10:47:08.085 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:47:08.086 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:47:08.087 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 10:47:08.087 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=99999, password=d3eb9a9233e52948740d7eb8c3062d14, name=null, sex=2, header=null, nickname=99999, userEmail=99999, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:47:08.256 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 10:47:08.257 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 173
2020-08-17 10:47:13.620 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 10:47:13.621 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 10:47:13.622 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:47:13.622 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 10:47:13.623 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=99999, password=d3eb9a9233e52948740d7eb8c3062d14, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 10:47:13.714 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597603627000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82C2iAIuM8AACPXPf76OA103.jpg","nickname":"99999","password":"d3eb9a9233e52948740d7eb8c3062d14","sex":2,"updateTime":1597603627000,"userEmail":"99999","userId":21,"username":"99999","version":1},"token":"6F9F3977711DFF89BFD280EA6DCD9DA0"},"msg":"登陆成功"}
2020-08-17 10:47:13.714 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 95
2020-08-17 10:47:14.031 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 10:47:14.031 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 10:47:14.031 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 10:47:14.032 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:47:14.032 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:47:14.032 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 10:47:14.032 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:47:14.032 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:47:14.032 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 10:47:14.033 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 10:47:14.033 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 10:47:14.033 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 10:47:14.033 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:47:14.033 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:47:14.033 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 10:47:14.098 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 10:47:14.099 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 68
2020-08-17 10:47:14.111 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 10:47:14.111 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 80
2020-08-17 10:47:14.406 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 10:47:14.407 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 376
2020-08-17 11:08:30.651 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 11:08:30.651 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 11:08:30.651 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:08:30.652 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:08:30.653 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:08:32.139 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 11:08:32.140 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1489
2020-08-17 11:08:32.741 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 11:08:32.742 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 2090
2020-08-17 11:08:33.211 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 11:08:33.212 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 2561
2020-08-17 11:09:19.649 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/register
2020-08-17 11:09:19.649 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:09:19.649 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:09:19.650 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.register
2020-08-17 11:09:19.650 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=1437631334, password=22beb15bae1724729125ef76cf2840a6, name=null, sex=1, header=null, nickname=w, userEmail=1437631334@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 11:09:19.841 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"注册成功！"}
2020-08-17 11:09:19.841 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 192
2020-08-17 11:09:31.025 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 11:09:31.026 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:09:31.026 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:09:31.026 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 11:09:31.026 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=1437631334, password=22beb15bae1724729125ef76cf2840a6, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 11:09:31.084 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV81A_2Acw06AACPXPf76OA574.jpg","nickname":"w","password":"22beb15bae1724729125ef76cf2840a6","sex":1,"updateTime":1597604959000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"token":"09A9B8762D4F062E94C34885D137E0BE"},"msg":"登陆成功"}
2020-08-17 11:09:31.084 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 59
2020-08-17 11:09:31.423 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 11:09:31.424 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:09:31.425 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:09:31.425 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 11:09:31.425 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:09:31.435 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 11:09:31.436 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:09:31.437 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:09:31.437 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 11:09:31.437 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 11:09:31.438 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:09:31.438 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:09:31.438 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:09:31.439 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 11:09:31.441 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:09:31.483 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 11:09:31.485 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 62
2020-08-17 11:09:31.548 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 11:09:31.549 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 113
2020-08-17 11:09:31.839 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 11:09:31.841 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 406
2020-08-17 11:10:39.714 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 11:10:39.715 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:10:39.715 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:10:39.715 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 11:10:39.715 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:10:39.768 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 11:10:39.768 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 11:10:39.769 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:10:39.770 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:10:39.770 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:10:39.770 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:10:39.771 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 11:10:39.771 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 11:10:39.771 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:10:39.771 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:10:39.785 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 11:10:39.786 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 72
2020-08-17 11:10:39.830 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 11:10:39.831 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 63
2020-08-17 11:10:40.072 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 11:10:40.074 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 306
2020-08-17 11:10:55.777 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 11:10:55.778 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:10:55.778 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:10:55.778 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 11:10:55.778 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=1437631334, password=22beb15bae1724729125ef76cf2840a6, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 11:10:55.823 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"22beb15bae1724729125ef76cf2840a6","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"token":"CFEE222A72481A5405FCC208E737CC0F"},"msg":"登陆成功"}
2020-08-17 11:10:55.824 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 47
2020-08-17 11:10:56.162 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 11:10:56.162 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 11:10:56.163 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:10:56.163 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:10:56.163 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:10:56.163 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:10:56.163 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 11:10:56.163 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 11:10:56.164 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:10:56.164 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:10:56.168 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 11:10:56.168 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:10:56.169 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:10:56.169 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 11:10:56.170 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:10:56.210 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 11:10:56.211 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 49
2020-08-17 11:10:56.230 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 11:10:56.230 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 62
2020-08-17 11:10:56.469 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 11:10:56.469 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 307
2020-08-17 11:11:00.129 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:11:00.129 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:11:00.129 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:11:00.130 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:11:00.130 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 11:11:00.660 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":45,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601690000,"version":46},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:11:00.661 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 532
2020-08-17 11:11:01.867 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 11:11:01.867 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 11:11:01.868 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:11:01.868 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:11:01.868 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:11:01.868 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:11:01.869 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:11:01.869 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:11:01.869 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:11:01.869 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:11:02.083 INFO  [http-nio-8080-exec-6]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:59}] to 112.74.99.109:27017
2020-08-17 11:11:02.125 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597601690000,"version":46},"msg":"阅读成功"}
2020-08-17 11:11:02.126 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 259
2020-08-17 11:11:02.222 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 11:11:02.224 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 357
2020-08-17 11:11:08.572 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 11:11:08.573 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:11:08.573 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:11:08.574 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 11:11:08.575 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=我真帅, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 11:11:08.756 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 11:11:08.757 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 185
2020-08-17 11:11:08.855 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 11:11:08.856 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:11:08.856 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:11:08.857 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:11:08.857 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:11:08.891 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 11:11:08.892 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 37
2020-08-17 11:12:06.348 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 11:12:06.349 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:12:06.350 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:12:06.350 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 11:12:06.350 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:12:06.459 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 11:12:06.460 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 112
2020-08-17 11:36:37.580 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:36:37.581 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:36:37.581 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:37.582 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:36:37.582 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=12)]
2020-08-17 11:36:39.729 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":0,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597605061000,"version":47}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":1,"pages":1,"prePage":0,"size":1,"startRow":0,"total":1},"msg":"查询成功！"}
2020-08-17 11:36:39.729 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 2149
2020-08-17 11:36:43.027 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 11:36:43.028 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:36:43.029 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:43.029 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:36:43.029 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:36:43.036 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 11:36:43.037 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:36:43.037 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:43.037 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:36:43.038 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:36:43.202 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597605061000,"version":47},"msg":"阅读成功"}
2020-08-17 11:36:43.203 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 176
2020-08-17 11:36:46.994 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 11:36:46.994 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:36:46.995 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:46.995 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 11:36:46.996 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:36:47.058 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 11:36:47.059 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 65
2020-08-17 11:36:52.102 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:36:52.103 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:36:52.103 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:52.104 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:36:52.104 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 11:36:52.419 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":237,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:36:52.420 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 318
2020-08-17 11:36:54.149 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293808631053139968
2020-08-17 11:36:54.150 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:36:54.151 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:54.151 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:36:54.151 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293808631053139968
2020-08-17 11:36:54.151 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808631053139968]
2020-08-17 11:36:54.152 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:36:54.152 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:54.152 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:36:54.153 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808631053139968]
2020-08-17 11:36:54.209 INFO  [http-nio-8080-exec-6]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:60}] to 112.74.99.109:27017
2020-08-17 11:36:54.237 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 11:36:54.240 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 89
2020-08-17 11:36:54.428 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":231,"blogComment":2354,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597471241000,"version":6},"msg":"阅读成功"}
2020-08-17 11:36:54.430 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 281
2020-08-17 11:36:56.563 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:36:56.564 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:36:56.565 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:56.565 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:36:56.566 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 11:36:56.892 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":7,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:36:56.893 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 330
2020-08-17 11:36:58.266 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293808463692021760
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293808463692021760
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 11:36:58.267 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:36:58.268 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293808463692021760]
2020-08-17 11:36:58.336 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":3,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"updateTime":1597599727000,"version":5},"commentBlogId":"1293808463692021760","commentContent":"很棒啊 很实用","commentGood":0,"commentUser":{"createdTime":1597522539000,"nickname":"pink","password":"","sex":1,"updateTime":1597522539000,"userEmail":"2131231","userId":11,"username":"pink","version":1},"createdTime":"2020-08-17 09-42-16","id":"5f39e0787d50bd2ab0e3c5b3"}],"msg":"操作成功！"}
2020-08-17 11:36:58.340 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 73
2020-08-17 11:36:58.508 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":123,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">1.安装mysql5.7 docker镜像</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">拉取官方mysql5.7镜像&nbsp;</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs apache\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attribute\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">docker</span> pull mysql:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5</span>.<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70\" alt=\"\" width=\"742\" height=\"313\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">查看镜像库</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">docker</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">images</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;<img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617133338751.png\" alt=\"\" width=\"799\" height=\"105\" /></p>\n<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; text-decoration: none; cursor: pointer; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; color: #4ea1db; overflow-wrap: break-word;\" name=\"t1\"></a><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">2.创建mysql容器</strong></h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在本地创建mysql的映射目录</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">mkdir -p <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data /</span>root<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>logs <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql/conf</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs properties\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\"><span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">touch</span> <span class=\"hljs-string\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">my.cnf</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">创建容器,将数据,日志,配置文件映射到本机</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs groovy\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker run -p <span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span>:<span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">3306</span> --name mysql -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/conf:/</span>etc<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/mysql/</span>conf.d -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/logs:/</span>logs -v <span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/root/</span>mysql<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/data:/</span>var<span class=\"hljs-regexp\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #98c379; overflow-wrap: break-word; font-size: 14px;\">/lib/</span>mysql -e MYSQL_ROOT_PASSWORD=root -d <span class=\"hljs-attr\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">mysql:</span><span class=\"hljs-number\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #d19a66; overflow-wrap: break-word; font-size: 14px;\">5.7</span></code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-d:</strong>&nbsp;后台运行容器</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-p&nbsp;</strong>将容器的端口映射到本机的端口</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-v&nbsp;</strong>将主机目录挂载到容器的目录</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">-e&nbsp;</strong>设置参数</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135000551.png\" alt=\"\" width=\"1200\" height=\"81\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">启动mysql容器</p>\n<pre class=\"has\" style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 8px; font-weight: 400; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; color: #000000; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><code class=\"hljs sql\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; display: block; overflow-x: auto; color: #abb2bf; background: #282c34; border-radius: 4px; line-height: 22px; white-space: pre; overflow-wrap: break-word; font-size: 14px;\">docker <span class=\"hljs-keyword\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-family: 'Source Code Pro', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Anonymous Pro', 'Droid Sans Mono', Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, 'PingFang SC', 'Microsoft YaHei', sans-serif; color: #c678dd; overflow-wrap: break-word; font-size: 14px;\">start</span> mysql</code></pre>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135050730.png\" alt=\"\" width=\"473\" height=\"64\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">&nbsp;查看/root/mysql/data目录是否有数据文件</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\"><img class=\"has\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\" src=\"https://img-blog.csdnimg.cn/20190617135810787.png\" alt=\"\" width=\"1172\" height=\"99\" /></p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">使用工具连接测试</p>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 16px; color: #4d4d4d; line-height: 26px; overflow-x: auto; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">参考链接：<a href=\"https://blog.csdn.net/weixin_40461281/article/details/92610876\">https://blog.csdn.net/weixin_40461281/article/details/92610876</a></p>","blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597599871000,"version":9},"msg":"阅读成功"}
2020-08-17 11:36:58.511 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 245
2020-08-17 11:37:02.211 INFO  [http-nio-8080-exec-3]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:59}] to 112.74.99.109:27017 because there was a socket exception raised by this connection.
2020-08-17 11:37:02.247 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 11:37:02.248 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 19212
2020-08-17 11:37:02.424 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:37:02.426 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:37:02.426 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:37:02.427 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:37:02.427 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 11:37:02.732 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":47,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:37:02.732 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 309
2020-08-17 11:37:05.081 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 11:37:05.084 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:37:05.085 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:37:05.086 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 11:37:05.087 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:37:05.087 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:37:05.087 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:37:05.087 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:37:05.087 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:37:05.088 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:37:05.133 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 11:37:05.134 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 48
2020-08-17 11:37:05.269 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":48,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606602000,"version":48},"msg":"阅读成功"}
2020-08-17 11:37:05.270 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 189
2020-08-17 11:37:08.733 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 11:37:08.734 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:37:08.734 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:37:08.735 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 11:37:08.735 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:37:08.783 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 11:37:08.783 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 50
2020-08-17 11:37:10.710 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:37:10.711 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:37:10.711 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:37:10.711 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:37:10.711 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=12)]
2020-08-17 11:37:10.845 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":0,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":48,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606624000,"version":49}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":1,"pages":1,"prePage":0,"size":1,"startRow":0,"total":1},"msg":"查询成功！"}
2020-08-17 11:37:10.846 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 136
2020-08-17 11:37:12.318 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 11:37:12.319 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:37:12.320 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:37:12.321 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 11:37:12.322 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:37:12.322 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:37:12.322 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:37:12.322 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:37:12.323 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:37:12.323 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:37:12.367 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11-11-08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-41-21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09-40-49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 11:37:12.368 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 47
2020-08-17 11:37:12.500 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":49,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606624000,"version":49},"msg":"阅读成功"}
2020-08-17 11:37:12.501 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 183
2020-08-17 11:39:55.282 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 11:39:55.288 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:60}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 11:39:55.309 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 11:40:05.779 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 21108 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 11:40:05.785 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 11:40:05.889 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 11:40:05.890 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 11:40:07.678 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 11:40:07.682 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 11:40:07.850 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 160ms. Found 1 MongoDB repository interfaces.
2020-08-17 11:40:07.888 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 11:40:07.889 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 11:40:07.941 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 11:40:07.943 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces.
2020-08-17 11:40:09.055 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$79daed11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:09.136 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:09.157 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$646f7047] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:09.170 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4b471489] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:09.183 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 11:40:09.292 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:09.336 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:09.377 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:12.513 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 11:40:12.514 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:12.604 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:12.966 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:12.977 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:12.986 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:12.993 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:12.998 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:13.036 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:13.039 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:13.043 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:13.045 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:13.114 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:13.193 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 11:40:13.935 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 11:40:13.949 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 11:40:13.950 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 11:40:13.951 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 11:40:14.178 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 11:40:14.179 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 8289 ms
2020-08-17 11:40:14.950 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 11:40:15.095 INFO  [cluster-ClusterId{value='5f39fc1ef5337a246e6a28a8', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:61}] to 112.74.99.109:27017
2020-08-17 11:40:15.128 INFO  [cluster-ClusterId{value='5f39fc1ef5337a246e6a28a8', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27009500}
2020-08-17 11:40:15.880 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 11:40:18.552 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 11:40:18.585 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 11:40:18.595 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 14.516 seconds (JVM running for 16.908)
2020-08-17 11:41:17.383 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 11:41:17.384 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 11:41:17.434 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 50 ms
2020-08-17 11:41:17.480 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 11:41:17.480 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 11:41:17.480 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 11:41:17.481 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:41:17.481 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:41:17.481 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:41:17.482 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:41:17.482 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:41:17.482 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:41:17.485 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:41:17.486 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:41:17.486 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:41:17.486 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:41:17.486 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:41:17.772 INFO  [http-nio-8080-exec-2]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:65}] to 112.74.99.109:27017
2020-08-17 11:41:17.911 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 11:41:17.912 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 432
2020-08-17 11:41:17.914 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 11:41:17.914 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 434
2020-08-17 11:41:17.920 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 11:41:17.921 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 436
2020-08-17 11:41:18.037 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":50,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606632000,"version":50},"msg":"阅读成功"}
2020-08-17 11:41:18.038 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 553
2020-08-17 11:41:18.190 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":49,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 11:41:18.190 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 710
2020-08-17 11:44:11.808 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 11:44:11.809 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:44:11.810 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:44:11.811 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 11:44:11.812 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:44:11.815 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 11:44:11.819 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:44:11.820 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:44:11.820 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 11:44:11.820 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 11:44:11.820 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 11:44:11.821 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 11:44:11.822 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:44:11.822 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:44:11.822 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:44:11.855 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 11:44:11.857 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 43
2020-08-17 11:44:11.921 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 11:44:11.922 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 102
2020-08-17 11:44:12.087 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 11:44:12.092 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 272
2020-08-17 11:44:12.364 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597606877000,"version":51},"msg":"阅读成功"}
2020-08-17 11:44:12.368 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 560
2020-08-17 11:44:12.588 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":50,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 11:44:12.588 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 768
2020-08-17 11:48:01.593 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 11:48:01.594 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:48:01.595 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:01.598 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 11:48:01.598 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:48:01.723 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 11:48:01.724 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 131
2020-08-17 11:48:02.414 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getTimeLine
2020-08-17 11:48:02.415 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 11:48:02.415 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:02.415 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getTimeLine
2020-08-17 11:48:02.415 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:48:02.488 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}
2020-08-17 11:48:02.489 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 75
2020-08-17 11:48:05.771 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 11:48:05.772 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 11:48:05.772 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:05.772 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 11:48:05.773 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 11:48:05.985 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597600646000,"version":51},"msg":"阅读成功"}
2020-08-17 11:48:05.986 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 215
2020-08-17 11:48:38.065 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:48:38.065 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:48:38.065 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:38.066 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:48:38.066 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 11:48:38.703 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:48:38.707 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 642
2020-08-17 11:48:39.988 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:48:39.989 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:48:39.989 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:39.989 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:48:39.990 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=blog_goods, orderByMode=desc, typeId=null)]
2020-08-17 11:48:40.447 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:48:40.449 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 461
2020-08-17 11:48:42.659 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:48:42.660 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:48:42.661 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:42.661 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:48:42.662 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=blog_comment, orderByMode=desc, typeId=null)]
2020-08-17 11:48:43.085 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:48:43.086 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 427
2020-08-17 11:48:45.396 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:48:45.397 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:48:45.397 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:45.397 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:48:45.398 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=blog_read, orderByMode=desc, typeId=null)]
2020-08-17 11:48:45.791 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:48:45.791 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 395
2020-08-17 11:48:46.641 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 11:48:46.642 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 11:48:46.642 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 11:48:46.643 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 11:48:46.643 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=blog_collection, orderByMode=desc, typeId=null)]
2020-08-17 11:48:47.038 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 11:48:47.039 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 398
2020-08-17 12:04:42.992 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 12:04:42.998 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:65}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 12:04:43.004 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 12:04:50.802 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 21036 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 12:04:50.806 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 12:04:50.859 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 12:04:50.859 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 12:04:51.689 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 12:04:51.690 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 12:04:51.764 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 62ms. Found 1 MongoDB repository interfaces.
2020-08-17 12:04:51.778 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 12:04:51.779 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 12:04:51.803 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 12:04:51.803 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-08-17 12:04:52.233 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$7f08a444] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:52.274 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:52.285 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$699d277a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:52.288 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5074cbbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:52.292 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 12:04:52.356 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:52.371 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:52.393 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:56.750 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 12:04:56.751 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:56.972 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.194 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.208 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.216 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.219 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.221 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.240 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.241 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.243 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.244 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.292 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.398 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 12:04:57.798 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 12:04:57.808 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 12:04:57.809 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 12:04:57.809 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 12:04:57.957 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 12:04:57.957 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 7098 ms
2020-08-17 12:04:58.533 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 12:04:58.782 INFO  [cluster-ClusterId{value='5f3a01eae9a2bd3b0ab85fe6', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:66}] to 112.74.99.109:27017
2020-08-17 12:04:58.889 INFO  [cluster-ClusterId{value='5f3a01eae9a2bd3b0ab85fe6', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=98583900}
2020-08-17 12:04:59.145 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 12:05:01.113 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 12:05:01.135 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 12:05:01.143 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 10.944 seconds (JVM running for 12.503)
2020-08-17 12:05:17.515 INFO  [http-nio-8080-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 12:05:17.517 INFO  [http-nio-8080-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 12:05:17.560 INFO  [http-nio-8080-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 42 ms
2020-08-17 12:05:17.644 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 12:05:17.644 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 12:05:17.644 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 12:05:17.645 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:05:17.645 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:05:17.645 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:05:17.646 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:05:17.646 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:05:17.646 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:05:17.655 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 12:05:17.655 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 12:05:17.655 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 12:05:17.657 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:05:17.657 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:05:17.657 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:05:17.880 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 12:05:17.881 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:05:17.882 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:05:17.884 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 12:05:17.885 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:05:18.247 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 12:05:18.247 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 603
2020-08-17 12:05:18.250 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 12:05:18.251 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 607
2020-08-17 12:05:18.626 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 12:05:18.627 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 747
2020-08-17 12:05:18.675 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 12:05:18.676 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1032
2020-08-17 12:07:02.912 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 12:07:02.913 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:02.913 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:02.914 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 12:07:02.915 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:02.984 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 12:07:02.986 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 74
2020-08-17 12:07:03.247 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 12:07:03.249 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:03.251 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:03.252 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 12:07:03.253 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:03.329 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 12:07:03.329 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 82
2020-08-17 12:07:10.805 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 12:07:10.805 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:10.806 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:10.806 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 12:07:10.806 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:11.073 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 12:07:11.073 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 268
2020-08-17 12:07:15.085 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/getPage
2020-08-17 12:07:15.086 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:15.086 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:15.087 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.getPage
2020-08-17 12:07:15.087 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:15.163 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597293061000,"version":1},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597607285000,"version":52}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}
2020-08-17 12:07:15.163 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 78
2020-08-17 12:07:19.060 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAllBack
2020-08-17 12:07:19.061 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:19.061 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:19.061 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAllBack
2020-08-17 12:07:19.061 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:19.124 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"deleted":0,"enable":1,"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 12:07:19.126 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 66
2020-08-17 12:07:20.239 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/getPage
2020-08-17 12:07:20.240 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:20.240 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:20.241 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.getPage
2020-08-17 12:07:20.241 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:20.330 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597293061000,"version":1},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":1,"updateTime":1597607285000,"version":52}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}
2020-08-17 12:07:20.331 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 92
2020-08-17 12:07:22.134 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/disable/1
2020-08-17 12:07:22.135 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 12:07:22.136 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:22.136 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.disable
2020-08-17 12:07:22.136 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1]
2020-08-17 12:07:22.291 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"弃用成功"}
2020-08-17 12:07:22.292 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 158
2020-08-17 12:07:22.372 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/getPage
2020-08-17 12:07:22.372 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:22.372 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:22.373 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.getPage
2020-08-17 12:07:22.373 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:22.457 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597293061000,"version":1},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}
2020-08-17 12:07:22.457 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 85
2020-08-17 12:07:24.005 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/enable/2
2020-08-17 12:07:24.005 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 12:07:24.006 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:24.006 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.enable
2020-08-17 12:07:24.006 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[2]
2020-08-17 12:07:24.195 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"启用成功"}
2020-08-17 12:07:24.196 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 191
2020-08-17 12:07:24.304 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/getPage
2020-08-17 12:07:24.305 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:24.306 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:24.308 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.getPage
2020-08-17 12:07:24.309 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:24.396 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":0,"aboutTitle":"测试2","createdTime":1597293061000,"enable":1,"updateTime":1597608443000,"version":2},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}
2020-08-17 12:07:24.396 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 92
2020-08-17 12:07:26.675 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 12:07:26.675 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 12:07:26.675 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:26.676 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 12:07:26.676 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:26.825 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"aboutContent":"测试2","aboutId":"2","aboutRead":1,"aboutTitle":"测试2","createdTime":1597293061000,"enable":1,"updateTime":1597608443000,"version":2},"msg":"阅读成功"}
2020-08-17 12:07:26.825 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 150
2020-08-17 12:07:31.290 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/disable/2
2020-08-17 12:07:31.291 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 12:07:31.291 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:31.291 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.disable
2020-08-17 12:07:31.291 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[2]
2020-08-17 12:07:31.445 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"弃用成功"}
2020-08-17 12:07:31.445 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 155
2020-08-17 12:07:31.526 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/getPage
2020-08-17 12:07:31.526 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:31.526 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:31.526 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.getPage
2020-08-17 12:07:31.527 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:31.593 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":0,"updateTime":1597294358000,"version":3},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":1,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597608451000,"version":4},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}
2020-08-17 12:07:31.593 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 67
2020-08-17 12:07:33.163 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 12:07:33.164 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 12:07:33.165 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:33.166 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 12:07:33.166 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:33.168 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 12:07:33.168 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:33.169 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:33.170 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:33.170 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 12:07:33.170 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:33.170 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 12:07:33.170 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:33.245 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 12:07:33.245 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 77
2020-08-17 12:07:33.254 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 12:07:33.254 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 85
2020-08-17 12:07:33.528 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 12:07:33.528 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 359
2020-08-17 12:07:37.695 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getTimeLine
2020-08-17 12:07:37.696 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:37.696 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:37.696 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getTimeLine
2020-08-17 12:07:37.696 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:37.743 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1294647161643978752","blogMonth":"2020-08","blogTitle":"shiroFilter踩坑","createdTime":1597474112000},{"blogId":"1294534531398889472","blogMonth":"2020-08","blogTitle":"测试2","createdTime":1597447259000},{"blogId":"1293808631053139968","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274190000},{"blogId":"1293808463692021760","blogMonth":"2020-08","blogTitle":"docker 安装 mysql5.7","createdTime":1597274150000}],"month":"2020-08"},{"list":[{"blogId":"1293850784802377728","blogMonth":"2020-07","blogTitle":"mybatis <if>标签踩坑","createdTime":1594605840000},{"blogId":"1293851272755122176","blogMonth":"2020-07","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","createdTime":1594260357000},{"blogId":"1293850133657653248","blogMonth":"2020-07","blogTitle":"fastdfs上传图片","createdTime":1594173685000}],"month":"2020-07"},{"list":[{"blogId":"1293896447598579712","blogMonth":"2020-06","blogTitle":"测试1","createdTime":1592370327000}],"month":"2020-06"}],"msg":"操作成功！"}
2020-08-17 12:07:37.744 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 49
2020-08-17 12:07:43.257 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/enable/4
2020-08-17 12:07:43.258 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 12:07:43.258 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:43.258 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.enable
2020-08-17 12:07:43.258 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[4]
2020-08-17 12:07:43.429 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"启用成功"}
2020-08-17 12:07:43.429 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 172
2020-08-17 12:07:43.513 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/getPage
2020-08-17 12:07:43.513 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:43.513 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:43.513 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.getPage
2020-08-17 12:07:43.514 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:43.598 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":0,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597608463000,"version":4},{"aboutContent":"测试3","aboutId":"3","aboutRead":0,"aboutTitle":"测试3","createdTime":1597293081000,"enable":0,"updateTime":1597295870000,"version":5},{"aboutContent":"测试2","aboutId":"2","aboutRead":1,"aboutTitle":"测试2","createdTime":1597293061000,"enable":0,"updateTime":1597608451000,"version":4},{"aboutContent":"我的个人","aboutId":"1","aboutRead":50,"aboutTitle":"个人","createdTime":1597292985000,"enable":0,"updateTime":1597608441000,"version":53}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功"}
2020-08-17 12:07:43.600 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 87
2020-08-17 12:07:45.738 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 12:07:45.738 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 12:07:45.738 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:45.739 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 12:07:45.739 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:45.891 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":1,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597608463000,"version":4},"msg":"阅读成功"}
2020-08-17 12:07:45.892 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 154
2020-08-17 12:07:49.532 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAllBack
2020-08-17 12:07:49.535 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:49.537 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:49.538 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAllBack
2020-08-17 12:07:49.538 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:49.592 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"deleted":0,"enable":1,"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"deleted":0,"enable":1,"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 12:07:49.593 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 61
2020-08-17 12:07:52.007 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 12:07:52.007 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 12:07:52.008 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:52.008 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 12:07:52.008 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 12:07:52.053 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 12:07:52.053 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 46
2020-08-17 12:07:53.908 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/getPage
2020-08-17 12:07:53.908 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:07:53.908 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:07:53.909 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.getPage
2020-08-17 12:07:53.909 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:07:53.982 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"22beb15bae1724729125ef76cf2840a6","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},{"createdTime":1597522539000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82C2iAIuM8AACPXPf76OA103.jpg","nickname":"pink","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597599783000,"userEmail":"2131231","userId":11,"username":"pink","version":1},{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},{"createdTime":1597345023000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","name":"w","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":1,"updateTime":1597353309000,"userEmail":"1437631334@qq.com","userId":3,"username":"wsy1437631334","version":2}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":1,"prePage":0,"size":4,"startRow":1,"total":4},"msg":"查询成功！"}
2020-08-17 12:07:53.983 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 75
2020-08-17 12:08:13.986 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /log/getPage
2020-08-17 12:08:13.986 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:08:13.986 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:08:13.987 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LogController.getPage
2020-08-17 12:08:13.987 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=10, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:08:14.115 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":10,"hasNextPage":true,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":false,"list":[{"createdTime":1597608473000,"logId":2987,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]","logResult":"{\"code\":20000,\"data\":{\"endRow\":4,\"hasNextPage\":false,\"hasPreviousPage\":false,\"isFirstPage\":true,\"isLastPage\":true,\"list\":[{\"createdTime\":1597604959000,\"header\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80\",\"nickname\":\"w\",\"password\":\"22beb15bae1724729125ef76cf2840a6\",\"sex\":1,\"updateTime\":1597605033000,\"userEmail\":\"1437631334@qq.com\",\"userId\":22,\"username\":\"1437631334\",\"version\":1},{\"createdTime\":1597522539000,\"header\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV82C2iAIuM8AACPXPf76OA103.jpg\",\"nickname\":\"pink\",\"password\":\"e10adc3949ba59abbe56e057f20f883e\",\"sex\":1,\"updateTime\":1597599783000,\"userEmail\":\"2131231\",\"userId\":11,\"username\":\"pink\",\"version\":1},{\"createdTime\":1597348773000,\"header\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg\",\"name\":\"李玟\",\"nickname\":\"oops\",\"password\":\"e10adc3949ba59abbe56e057f20f883e\",\"sex\":2,\"updateTime\":1597348773000,\"userEmail\":\"2388688213@qq.com\",\"userId\":8,\"username\":\"oops\",\"version\":1},{\"createdTime\":1597345023000,\"header\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80\",\"name\":\"w\",\"nickname\":\"oops\",\"password\":\"e10adc3949ba59abbe56e057f20f883e\",\"sex\":1,\"updateTime\":1597353309000,\"userEmail\":\"1437631334@qq.com\",\"userId\":3,\"username\":\"wsy1437631334\",\"version\":2}],\"navigateFirstPage\":1,\"navigateLastPage\":1,\"navigatePages\":8,\"navigatepageNums\":[1],\"nextPage\":0,\"pageNum\":1,\"pageSize\":4,\"pages\":1,\"prePage\":0,\"size\":4,\"startRow\":1,\"total\":4},\"msg\":\"查询成功！\"}","logStatus":1,"logTime":75,"logUrl":"/user/getPage"},{"createdTime":1597608471000,"logId":2986,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg\",\"id\":1,\"name\":\"w\",\"signature\":\"生而为人，我很抱歉\",\"username\":\"qq1437631334\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":46,"logUrl":"/admin/getAdmin"},{"createdTime":1597608469000,"logId":2985,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"Java\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"PHP\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"JavaScript\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"Springboot\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":1,\"typeId\":10,\"typeName\":\"Mybatis\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":11,\"typeName\":\"HTML\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":1,\"typeId\":12,\"typeName\":\"Shiro\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":1,\"typeId\":13,\"typeName\":\"fastdfs\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":5,\"typeId\":14,\"typeName\":\"docker\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":15,\"typeName\":\"Vue\"},{\"deleted\":0,\"enable\":1,\"typeBlogCount\":1,\"typeId\":16,\"typeName\":\"Mysql\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":61,"logUrl":"/type/getAllBack"},{"createdTime":1597608465000,"logId":2984,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"aboutContent\":\"<p>123456</p>\",\"aboutId\":\"4\",\"aboutRead\":1,\"aboutTitle\":\"123\",\"createdTime\":1597293441000,\"enable\":1,\"updateTime\":1597608463000,\"version\":4},\"msg\":\"阅读成功\"}","logStatus":1,"logTime":154,"logUrl":"/about/read"},{"createdTime":1597608463000,"logId":2982,"logIp":"127.0.0.1","logMethod":"PUT","logParams":"[4]","logResult":"{\"code\":20000,\"msg\":\"启用成功\"}","logStatus":1,"logTime":172,"logUrl":"/about/enable/4"},{"createdTime":1597608463000,"logId":2983,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]","logResult":"{\"code\":20000,\"data\":{\"endRow\":4,\"hasNextPage\":false,\"hasPreviousPage\":false,\"isFirstPage\":true,\"isLastPage\":true,\"list\":[{\"aboutContent\":\"<p>123456</p>\",\"aboutId\":\"4\",\"aboutRead\":0,\"aboutTitle\":\"123\",\"createdTime\":1597293441000,\"enable\":1,\"updateTime\":1597608463000,\"version\":4},{\"aboutContent\":\"测试3\",\"aboutId\":\"3\",\"aboutRead\":0,\"aboutTitle\":\"测试3\",\"createdTime\":1597293081000,\"enable\":0,\"updateTime\":1597295870000,\"version\":5},{\"aboutContent\":\"测试2\",\"aboutId\":\"2\",\"aboutRead\":1,\"aboutTitle\":\"测试2\",\"createdTime\":1597293061000,\"enable\":0,\"updateTime\":1597608451000,\"version\":4},{\"aboutContent\":\"我的个人\",\"aboutId\":\"1\",\"aboutRead\":50,\"aboutTitle\":\"个人\",\"createdTime\":1597292985000,\"enable\":0,\"updateTime\":1597608441000,\"version\":53}],\"navigateFirstPage\":1,\"navigateLastPage\":1,\"navigatePages\":8,\"navigatepageNums\":[1],\"nextPage\":0,\"pageNum\":1,\"pageSize\":4,\"pages\":1,\"prePage\":0,\"size\":4,\"startRow\":1,\"total\":4},\"msg\":\"查询成功\"}","logStatus":1,"logTime":87,"logUrl":"/about/getPage"},{"createdTime":1597608457000,"logId":2981,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"list\":[{\"blogId\":\"1294647161643978752\",\"blogMonth\":\"2020-08\",\"blogTitle\":\"shiroFilter踩坑\",\"createdTime\":1597474112000},{\"blogId\":\"1294534531398889472\",\"blogMonth\":\"2020-08\",\"blogTitle\":\"测试2\",\"createdTime\":1597447259000},{\"blogId\":\"1293808631053139968\",\"blogMonth\":\"2020-08\",\"blogTitle\":\"docker 安装 mysql5.7\",\"createdTime\":1597274190000},{\"blogId\":\"1293808463692021760\",\"blogMonth\":\"2020-08\",\"blogTitle\":\"docker 安装 mysql5.7\",\"createdTime\":1597274150000}],\"month\":\"2020-08\"},{\"list\":[{\"blogId\":\"1293850784802377728\",\"blogMonth\":\"2020-07\",\"blogTitle\":\"mybatis <if>标签踩坑\",\"createdTime\":1594605840000},{\"blogId\":\"1293851272755122176\",\"blogMonth\":\"2020-07\",\"blogTitle\":\"Vue-v-bind、v-for、v-if等基本操作\",\"createdTime\":1594260357000},{\"blogId\":\"1293850133657653248\",\"blogMonth\":\"2020-07\",\"blogTitle\":\"fastdfs上传图片\",\"createdTime\":1594173685000}],\"month\":\"2020-07\"},{\"list\":[{\"blogId\":\"1293896447598579712\",\"blogMonth\":\"2020-06\",\"blogTitle\":\"测试1\",\"createdTime\":1592370327000}],\"month\":\"2020-06\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":49,"logUrl":"/blog/getTimeLine"},{"createdTime":1597608453000,"logId":2979,"logIp":"127.0.0.1","logMessage":"com.wsy.blog.exception.BlogException: 目前暂时没有关于我的！\n\tat com.wsy.blog.service.impl.AboutServiceImpl.read(AboutServiceImpl.java:86)\n\tat com.wsy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$e7d4fe8f.invoke(<generated>)\n\tat com.wsy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ac36c7f.read(<generated>)\n\tat com.wsy.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$e7d4fe8f.invoke(<generated>)\n\tat com.wsy.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$a1d99307.read(<generated>)\n\tat com.wsy.blog.controller.AboutController.read(AboutController.java:114)\n\tat com.wsy.blog.controller.AboutController$$FastClassBySpringCGLIB$$e190bfa5.invoke(<generated>)\n\tat com.wsy.blog.aspect.RequestAspect.doAround(RequestAspect.java:69)\n\tat com.wsy.blog.controller.AboutController$$EnhancerBySpringCGLIB$$7e3280a4.read(<generated>)\n","logMethod":"PUT","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"endRow\":4,\"hasNextPage\":false,\"hasPreviousPage\":false,\"isFirstPage\":true,\"isLastPage\":true,\"list\":[{\"aboutContent\":\"<p>123456</p>\",\"aboutId\":\"4\",\"aboutRead\":0,\"aboutTitle\":\"123\",\"createdTime\":1597293441000,\"enable\":0,\"updateTime\":1597294358000,\"version\":3},{\"aboutContent\":\"测试3\",\"aboutId\":\"3\",\"aboutRead\":0,\"aboutTitle\":\"测试3\",\"createdTime\":1597293081000,\"enable\":0,\"updateTime\":1597295870000,\"version\":5},{\"aboutContent\":\"测试2\",\"aboutId\":\"2\",\"aboutRead\":0,\"aboutTitle\":\"测试2\",\"createdTime\":1597293061000,\"enable\":0,\"updateTime\":1597293061000,\"version\":1},{\"aboutContent\":\"我的个人\",\"aboutId\":\"1\",\"aboutRead\":50,\"aboutTitle\":\"个人\",\"createdTime\":1597292985000,\"enable\":1,\"updateTime\":1597607285000,\"version\":52}],\"navigateFirstPage\":1,\"navigateLastPage\":1,\"navigatePages\":8,\"navigatepageNums\":[1],\"nextPage\":0,\"pageNum\":1,\"pageSize\":4,\"pages\":1,\"prePage\":0,\"size\":4,\"startRow\":1,\"total\":4},\"msg\":\"查询成功\"}","logStatus":0,"logTime":78,"logUrl":"/about/read"},{"createdTime":1597608453000,"logId":2980,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"blogCollection\":23,\"blogComment\":1,\"blogGoods\":34,\"blogId\":\"1293850784802377728\",\"blogImage\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg\",\"blogRead\":2243,\"blogTitle\":\"mybatis <if>标签踩坑\",\"blogType\":10,\"createdTime\":1594605840000,\"typeName\":\"Mybatis\"},{\"blogCollection\":231,\"blogComment\":2354,\"blogGoods\":20,\"blogId\":\"1293808631053139968\",\"blogImage\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg\",\"blogRead\":238,\"blogTitle\":\"docker 安装 mysql5.7\",\"blogType\":16,\"createdTime\":1597274190000,\"typeName\":\"Mysql\"},{\"blogCollection\":1,\"blogComment\":123,\"blogGoods\":123,\"blogId\":\"1293850133657653248\",\"blogImage\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg\",\"blogRead\":128,\"blogTitle\":\"fastdfs上传图片\",\"blogType\":13,\"createdTime\":1594173685000,\"typeName\":\"fastdfs\"},{\"blogCollection\":1,\"blogComment\":213,\"blogGoods\":123,\"blogId\":\"1293896447598579712\",\"blogImage\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif\",\"blogRead\":0,\"blogTitle\":\"测试1\",\"blogType\":14,\"createdTime\":1592370327000,\"typeName\":\"docker\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1294647161643978752\",\"blogRead\":51,\"blogTitle\":\"shiroFilter踩坑\",\"blogType\":12,\"createdTime\":1597474112000,\"typeName\":\"Shiro\"}],\"msg\":\"获取成功\"}","logStatus":1,"logTime":359,"logUrl":"/blog/recommendedRead"},{"createdTime":1597608452000,"logId":2977,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg\",\"id\":1,\"name\":\"w\",\"signature\":\"生而为人，我很抱歉\",\"username\":\"qq1437631334\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":77,"logUrl":"/admin/getAdmin"}],"navigateFirstPage":1,"navigateLastPage":8,"navigatePages":8,"navigatepageNums":[1,2,3,4,5,6,7,8],"nextPage":2,"pageNum":1,"pageSize":10,"pages":295,"prePage":0,"size":10,"startRow":1,"total":2945},"msg":"查询成功！"}
2020-08-17 12:08:14.117 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 131
2020-08-17 12:45:33.524 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 12:45:33.526 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 12:45:33.527 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 12:45:33.527 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 12:45:33.528 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 12:45:44.593 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 12:45:44.594 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 11070
2020-08-17 13:02:53.031 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 13:02:53.041 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 13:03:02.489 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 10328 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 13:03:02.493 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 13:03:02.578 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 13:03:02.578 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 13:03:03.682 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:03:03.683 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 13:03:03.752 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 65ms. Found 2 MongoDB repository interfaces.
2020-08-17 13:03:03.770 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:03:03.772 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 13:03:03.800 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:03:03.801 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:03:03.801 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 13:03:04.458 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$2c0e65bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:04.499 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:04.509 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$16a2e8f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:04.512 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$fd7a8d35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:04.515 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 13:03:04.578 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:04.595 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:04.620 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.108 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 13:03:07.109 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.177 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.476 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.481 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.492 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.501 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.503 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.527 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.529 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.531 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.536 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.615 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:07.654 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:03:08.087 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 13:03:08.099 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 13:03:08.099 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 13:03:08.099 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 13:03:08.201 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 13:03:08.201 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5622 ms
2020-08-17 13:03:08.556 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 13:03:08.674 INFO  [cluster-ClusterId{value='5f3a0f8c3ce65778ce53dcb8', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:67}] to 112.74.99.109:27017
2020-08-17 13:03:08.699 INFO  [cluster-ClusterId{value='5f3a0f8c3ce65778ce53dcb8', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23568400}
2020-08-17 13:03:09.108 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 13:03:09.180 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 13:03:09.182 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Stopping service [Tomcat]
2020-08-17 13:03:09.190 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 13:12:36.817 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 14044 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 13:12:36.822 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 13:12:36.921 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 13:12:36.922 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 13:12:38.242 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:12:38.244 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 13:12:38.374 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 116ms. Found 2 MongoDB repository interfaces.
2020-08-17 13:12:38.393 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:12:38.398 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 13:12:38.426 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:12:38.427 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:12:38.429 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-08-17 13:12:39.209 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$a6245a25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:39.274 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:39.289 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$90b8dd5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:39.294 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$7790819d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:39.303 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 13:12:39.415 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:39.437 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:39.475 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:43.735 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 13:12:43.735 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:43.835 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.289 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.315 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.323 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.329 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.337 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.370 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.371 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.373 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.375 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.477 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:44.605 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:12:45.488 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 13:12:45.503 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 13:12:45.504 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 13:12:45.504 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 13:12:45.655 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 13:12:45.656 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 8734 ms
2020-08-17 13:12:46.215 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 13:12:46.321 INFO  [cluster-ClusterId{value='5f3a11cec079587c8438e054', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:68}] to 112.74.99.109:27017
2020-08-17 13:12:46.351 INFO  [cluster-ClusterId{value='5f3a11cec079587c8438e054', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23915300}
2020-08-17 13:12:47.065 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 13:12:47.170 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 13:12:47.174 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Stopping service [Tomcat]
2020-08-17 13:12:47.190 INFO  [restartedMain]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-08-17 13:16:16.057 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 20404 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 13:16:16.069 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 13:16:16.150 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 13:16:16.150 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 13:16:17.389 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:16:17.390 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 13:16:17.502 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 97ms. Found 2 MongoDB repository interfaces.
2020-08-17 13:16:17.524 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:16:17.525 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 13:16:17.559 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:16:17.560 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:16:17.561 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2020-08-17 13:16:18.273 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$6c5bfcda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:18.322 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:18.335 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$56f08010] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:18.342 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3dc82452] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:18.353 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 13:16:18.434 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:18.463 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:18.500 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.429 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 13:16:21.430 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.515 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.855 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.865 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.873 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.878 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.883 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.906 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.907 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.909 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.912 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:21.989 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:22.033 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:16:22.707 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 13:16:22.722 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 13:16:22.722 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 13:16:22.722 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 13:16:22.837 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 13:16:22.837 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 6687 ms
2020-08-17 13:16:23.319 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 13:16:23.435 INFO  [cluster-ClusterId{value='5f3a12a7fae52310d96c39ac', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:69}] to 112.74.99.109:27017
2020-08-17 13:16:23.469 INFO  [cluster-ClusterId{value='5f3a12a7fae52310d96c39ac', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23537500}
2020-08-17 13:16:24.092 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 13:16:26.919 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 13:16:26.952 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 13:16:26.965 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 12.324 seconds (JVM running for 14.829)
2020-08-17 13:16:32.805 INFO  [http-nio-8080-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 13:16:32.805 INFO  [http-nio-8080-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 13:16:32.824 INFO  [http-nio-8080-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-08-17 13:16:32.900 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:16:32.900 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:16:32.900 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:16:32.902 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:16:32.902 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:16:32.902 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:16:32.904 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:16:32.904 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:16:32.904 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:16:32.908 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:16:32.908 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:16:32.909 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:16:32.908 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:16:32.910 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:16:32.911 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:16:33.153 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 13:16:33.155 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:16:33.163 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:16:33.164 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 13:16:33.166 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 13:16:33.555 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:16:33.557 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 657
2020-08-17 13:16:33.560 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:16:33.564 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 664
2020-08-17 13:16:33.676 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:16:33.678 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 778
2020-08-17 13:16:33.872 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":51,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 13:16:33.875 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 722
2020-08-17 13:16:40.981 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:16:40.981 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:16:40.983 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:16:40.983 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:16:40.984 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:16:40.984 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:16:40.984 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:16:40.985 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:16:40.986 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:16:40.986 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:16:41.128 INFO  [http-nio-8080-exec-6]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:70}] to 112.74.99.109:27017
2020-08-17 13:16:41.255 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":52,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597607051000,"version":52},"msg":"阅读成功"}
2020-08-17 13:16:41.256 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 275
2020-08-17 13:16:41.309 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:16:41.311 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 330
2020-08-17 13:17:45.552 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 13:17:45.557 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:70}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 13:17:45.571 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 13:17:53.625 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 4948 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 13:17:53.634 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 13:17:53.687 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 13:17:53.687 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 13:17:54.672 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:17:54.673 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 13:17:54.756 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 72ms. Found 2 MongoDB repository interfaces.
2020-08-17 13:17:54.772 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:17:54.773 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 13:17:54.800 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:17:54.800 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:17:54.801 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-08-17 13:17:55.354 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$4102704c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:55.403 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:55.416 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$2b96f382] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:55.419 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$126e97c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:55.423 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 13:17:55.508 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:55.533 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:55.572 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:57.685 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 13:17:57.686 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:57.767 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.045 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.052 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.059 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.065 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.068 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.088 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.089 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.098 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.099 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.155 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.201 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:17:58.751 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 13:17:58.760 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 13:17:58.761 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 13:17:58.762 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 13:17:58.870 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 13:17:58.870 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5183 ms
2020-08-17 13:17:59.298 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 13:17:59.390 INFO  [cluster-ClusterId{value='5f3a1307fee51a1b2df58d96', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:71}] to 112.74.99.109:27017
2020-08-17 13:17:59.421 INFO  [cluster-ClusterId{value='5f3a1307fee51a1b2df58d96', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28593500}
2020-08-17 13:17:59.887 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 13:18:02.215 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 13:18:02.257 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 13:18:02.267 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 9.446 seconds (JVM running for 10.873)
2020-08-17 13:18:57.328 INFO  [http-nio-8080-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 13:18:57.330 INFO  [http-nio-8080-exec-5]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 13:18:57.357 INFO  [http-nio-8080-exec-5]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 26 ms
2020-08-17 13:18:57.442 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:18:57.442 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:18:57.443 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:18:57.442 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:18:57.443 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:18:57.445 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:18:57.447 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:18:57.447 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:18:57.447 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:18:57.450 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:18:57.450 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:18:57.450 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:18:57.450 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:18:57.451 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:18:57.451 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:18:57.451 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:18:57.452 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:18:57.451 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:18:57.451 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:18:57.451 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:18:57.452 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:18:57.452 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:18:57.452 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:18:57.452 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:18:57.452 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:18:57.691 INFO  [http-nio-8080-exec-5]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:72}] to 112.74.99.109:27017
2020-08-17 13:18:57.971 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:18:57.972 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 530
2020-08-17 13:18:57.974 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:18:57.974 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":53,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612600000,"version":53},"msg":"阅读成功"}
2020-08-17 13:18:57.975 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 533
2020-08-17 13:18:57.975 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 525
2020-08-17 13:18:57.983 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:18:57.983 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 533
2020-08-17 13:18:58.035 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1294647161643978752","blogRead":52,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:18:58.036 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 594
2020-08-17 13:19:00.452 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:19:00.453 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:19:00.453 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:19:00.453 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:19:00.454 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:19:23.941 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:19:23.942 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:19:23.942 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:19:23.942 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:19:23.942 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:19:57.234 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 13:19:57.241 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:72}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 13:19:57.278 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 13:20:07.121 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 19856 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 13:20:07.125 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 13:20:07.189 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 13:20:07.189 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 13:20:08.306 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:20:08.306 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 13:20:08.389 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 77ms. Found 2 MongoDB repository interfaces.
2020-08-17 13:20:08.412 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:20:08.415 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 13:20:08.433 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:20:08.433 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:20:08.433 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-08-17 13:20:09.017 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$99dd30cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:09.079 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:09.090 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8471b405] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:09.093 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$6b495847] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:09.099 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 13:20:09.182 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:09.200 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:09.255 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:15.957 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 13:20:15.958 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.035 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.609 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.618 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.631 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.640 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.642 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.668 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.670 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.672 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.673 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.781 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:16.839 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:20:17.551 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 13:20:17.560 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 13:20:17.562 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 13:20:17.563 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 13:20:17.825 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 13:20:17.827 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 10638 ms
2020-08-17 13:20:18.626 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 13:20:18.821 INFO  [cluster-ClusterId{value='5f3a13927fffe822e55d0470', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:73}] to 112.74.99.109:27017
2020-08-17 13:20:18.849 INFO  [cluster-ClusterId{value='5f3a13927fffe822e55d0470', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23130300}
2020-08-17 13:20:19.572 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 13:20:22.708 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 13:20:22.735 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 13:20:22.744 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 16.456 seconds (JVM running for 19.046)
2020-08-17 13:20:35.122 INFO  [http-nio-8080-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 13:20:35.123 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 13:20:35.178 INFO  [http-nio-8080-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 55 ms
2020-08-17 13:20:35.340 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:20:35.340 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:20:35.342 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:20:35.342 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:20:35.346 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:20:35.348 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:20:35.355 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:20:35.355 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:20:35.358 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:20:35.358 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:20:35.706 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:74}] to 112.74.99.109:27017
2020-08-17 13:20:36.302 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":54,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612763000,"version":54},"msg":"阅读成功"}
2020-08-17 13:20:36.305 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 965
2020-08-17 13:20:36.311 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:20:36.313 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 973
2020-08-17 13:21:01.682 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:21:01.683 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:21:01.684 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:01.684 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:21:01.685 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:01.687 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:21:01.689 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:01.690 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:01.690 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:21:01.690 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:01.726 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:21:01.726 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 39
2020-08-17 13:21:01.922 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":55,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612835000,"version":55},"msg":"阅读成功"}
2020-08-17 13:21:01.924 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 242
2020-08-17 13:21:07.136 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:21:07.136 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:21:07.137 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:07.137 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:21:07.138 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:07.138 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:07.139 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:21:07.139 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:21:07.139 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:07.139 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:07.142 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:21:07.144 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:07.145 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:07.146 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:21:07.146 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:07.146 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:21:07.147 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:07.147 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:07.148 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:21:07.148 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:07.148 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:21:07.148 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:07.148 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:07.148 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:21:07.149 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:07.193 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:21:07.195 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 59
2020-08-17 13:21:07.239 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:21:07.240 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 92
2020-08-17 13:21:07.249 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:21:07.250 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 108
2020-08-17 13:21:07.414 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":56,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612861000,"version":56},"msg":"阅读成功"}
2020-08-17 13:21:07.415 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 279
2020-08-17 13:21:07.517 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":55,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:21:07.519 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 373
2020-08-17 13:21:27.965 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:21:27.967 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:21:27.967 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:21:27.968 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:27.968 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:27.968 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:21:27.968 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:27.969 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:27.969 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:21:27.970 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:27.974 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:21:27.976 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:27.977 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:27.979 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:21:27.980 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:27.981 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:21:27.981 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:27.982 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:27.982 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:21:27.983 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:27.984 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:21:27.986 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:27.987 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:27.988 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:21:27.989 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:28.004 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:21:28.005 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 38
2020-08-17 13:21:28.077 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:21:28.078 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 94
2020-08-17 13:21:28.083 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:21:28.085 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 111
2020-08-17 13:21:28.208 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":57,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612867000,"version":57},"msg":"阅读成功"}
2020-08-17 13:21:28.209 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 244
2020-08-17 13:21:28.415 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":56,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:21:28.417 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 437
2020-08-17 13:21:44.962 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:21:44.963 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:21:44.964 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:44.964 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:21:44.965 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:44.966 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:21:44.966 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:44.967 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:44.968 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:21:44.968 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:45.005 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:21:45.006 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 13:21:45.388 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":58,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612887000,"version":58},"msg":"阅读成功"}
2020-08-17 13:21:45.390 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 428
2020-08-17 13:21:46.903 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:21:46.903 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:21:46.904 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:46.904 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:21:46.904 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:46.904 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:46.905 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:21:46.905 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:21:46.905 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:46.905 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:21:46.931 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:21:46.931 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:21:46.931 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:21:46.931 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:46.931 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:46.931 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:46.931 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:46.932 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:21:46.943 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:21:46.944 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 41
2020-08-17 13:21:46.985 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:21:46.986 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 55
2020-08-17 13:21:46.993 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:21:46.994 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 63
2020-08-17 13:21:47.147 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":59,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612904000,"version":59},"msg":"阅读成功"}
2020-08-17 13:21:47.149 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 246
2020-08-17 13:21:47.249 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":58,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:21:47.252 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 321
2020-08-17 13:22:10.706 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:22:10.707 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:22:10.708 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:22:10.709 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:22:10.710 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:22:10.710 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:22:10.711 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:22:10.712 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:22:10.713 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:22:10.713 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:22:10.753 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:22:10.755 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 45
2020-08-17 13:22:10.914 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":60,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612906000,"version":60},"msg":"阅读成功"}
2020-08-17 13:22:10.915 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 209
2020-08-17 13:22:12.172 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:22:12.173 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:22:12.174 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:22:12.174 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:22:12.175 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:22:12.177 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:22:12.178 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:22:12.178 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:22:12.178 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:22:12.178 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:22:12.178 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:22:12.179 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:22:12.180 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:22:12.180 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:22:12.218 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:22:12.220 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 43
2020-08-17 13:22:12.227 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:22:12.228 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 50
2020-08-17 13:22:12.237 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:22:12.238 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 60
2020-08-17 13:22:12.375 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":61,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612930000,"version":61},"msg":"阅读成功"}
2020-08-17 13:22:12.376 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 204
2020-08-17 13:22:12.583 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":60,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:22:12.583 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 405
2020-08-17 13:23:25.021 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:23:25.022 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:23:25.023 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:23:25.024 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:23:25.025 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:23:25.026 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:23:25.026 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:23:25.026 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:23:25.026 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:23:25.027 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:23:25.027 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:23:25.028 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:23:25.028 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:23:25.029 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:23:25.030 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:23:25.032 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:23:25.033 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:23:25.034 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:23:25.034 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:23:25.035 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:23:25.035 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:23:25.035 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:23:25.035 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:23:25.036 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:23:25.036 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:23:25.071 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:23:25.072 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 46
2020-08-17 13:23:25.102 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:23:25.103 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 76
2020-08-17 13:23:25.113 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:23:25.116 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 82
2020-08-17 13:23:25.291 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":62,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597612932000,"version":62},"msg":"阅读成功"}
2020-08-17 13:23:25.292 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 271
2020-08-17 13:23:25.407 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":61,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:23:25.407 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 375
2020-08-17 13:24:28.479 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:24:28.481 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:24:28.482 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:28.483 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:24:28.483 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:24:28.484 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:28.484 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:24:28.485 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:24:28.485 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:28.485 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:28.486 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:28.486 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:24:28.486 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:24:28.486 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:24:28.486 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:28.488 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:24:28.489 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:28.489 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:28.489 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:24:28.490 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:28.501 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:24:28.501 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:28.501 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:28.502 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:24:28.502 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:28.523 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:24:28.524 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 41
2020-08-17 13:24:28.626 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:24:28.626 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 125
2020-08-17 13:24:28.633 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:24:28.633 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 149
2020-08-17 13:24:28.782 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":63,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613004000,"version":63},"msg":"阅读成功"}
2020-08-17 13:24:28.782 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 303
2020-08-17 13:24:28.888 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":62,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:24:28.889 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 401
2020-08-17 13:24:32.909 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:24:32.909 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:24:32.910 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:24:32.910 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:32.911 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:32.911 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:32.912 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:24:32.912 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:24:32.912 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:24:32.912 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:24:32.915 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:24:32.916 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:32.917 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:32.917 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:24:32.917 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:32.919 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:24:32.920 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:32.920 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:32.920 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:24:32.921 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:32.922 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:24:32.922 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:32.922 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:32.922 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:24:32.923 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:32.948 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:24:32.949 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 13:24:32.969 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:24:32.970 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 55
2020-08-17 13:24:32.974 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:24:32.975 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 53
2020-08-17 13:24:33.130 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":64,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613068000,"version":64},"msg":"阅读成功"}
2020-08-17 13:24:33.131 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 222
2020-08-17 13:24:33.299 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":63,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:24:33.299 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 380
2020-08-17 13:24:56.399 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /user/login
2020-08-17 13:24:56.400 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:24:56.401 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:56.402 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UserController.login
2020-08-17 13:24:56.403 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[User(userId=null, username=oops, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-08-17 13:24:56.536 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"userInfo":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"e10adc3949ba59abbe56e057f20f883e","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"token":"F30D55D706F1D0E9D13A390908EB1656"},"msg":"登陆成功"}
2020-08-17 13:24:56.537 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 138
2020-08-17 13:24:56.792 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:24:56.792 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:24:56.793 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:56.793 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:24:56.794 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:24:56.802 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:24:56.802 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:56.803 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:24:56.803 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:56.803 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:56.803 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:56.803 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:24:56.804 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:24:56.804 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:24:56.804 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:56.809 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:24:56.810 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:56.811 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:56.811 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:24:56.813 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:24:56.813 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:24:56.813 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:24:56.813 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:56.813 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:24:56.813 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:24:56.842 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:24:56.844 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 42
2020-08-17 13:24:56.861 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:24:56.863 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 60
2020-08-17 13:24:56.874 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:24:56.874 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 63
2020-08-17 13:24:57.036 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":65,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613072000,"version":65},"msg":"阅读成功"}
2020-08-17 13:24:57.038 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 246
2020-08-17 13:24:57.200 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":64,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:24:57.200 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 391
2020-08-17 13:26:02.104 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:26:02.104 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:26:02.104 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:26:02.108 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:26:02.106 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:26:02.109 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.104 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:26:02.109 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:02.105 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:26:02.109 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:26:02.109 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:02.109 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:02.108 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:26:02.110 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:02.111 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.111 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:26:02.109 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:02.111 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.111 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:26:02.112 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:26:02.107 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:26:02.113 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:26:02.113 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:26:02.113 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:26:02.109 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:26:02.113 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:02.113 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:26:02.113 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.113 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:02.114 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:26:02.114 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:26:02.114 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:02.114 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:02.144 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:26:02.145 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 13:26:02.169 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:26:02.169 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:26:02.169 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 13:26:02.169 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 65
2020-08-17 13:26:02.169 INFO  [http-nio-8080-exec-9]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:75}] to 112.74.99.109:27017
2020-08-17 13:26:02.172 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:4, serverValue:76}] to 112.74.99.109:27017
2020-08-17 13:26:02.206 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:26:02.206 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 102
2020-08-17 13:26:02.208 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:26:02.208 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 99
2020-08-17 13:26:02.305 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":66,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613096000,"version":66},"msg":"阅读成功"}
2020-08-17 13:26:02.306 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 202
2020-08-17 13:26:02.366 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":2,"blogId":"1294647161643978752","blogRead":66,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613096000,"version":66},"msg":"阅读成功"}
2020-08-17 13:26:02.368 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 263
2020-08-17 13:26:02.389 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":4,"blogId":"1294647161643978752","blogRead":66,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613161000,"version":66},"msg":"阅读成功"}
2020-08-17 13:26:02.390 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 277
2020-08-17 13:26:05.153 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":2,"blogId":"1294647161643978752","blogRead":65,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:26:05.153 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 3045
2020-08-17 13:26:05.186 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:26:05.187 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 3076
2020-08-17 13:26:05.208 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:26:05.209 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 3098
2020-08-17 13:26:12.985 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:26:12.985 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:26:12.986 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:12.986 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:26:12.986 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:26:13.197 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:26:13.199 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 214
2020-08-17 13:26:29.283 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:26:29.285 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:26:29.286 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:29.286 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:26:29.287 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:29.290 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:26:29.291 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:29.291 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:29.291 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:26:29.293 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:29.330 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:26:29.332 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 42
2020-08-17 13:26:29.535 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":3,"blogId":"1294647161643978752","blogRead":67,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613172000,"version":67},"msg":"阅读成功"}
2020-08-17 13:26:29.538 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 255
2020-08-17 13:26:31.931 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:26:31.932 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:26:31.933 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:31.933 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:26:31.934 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:31.935 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:26:31.935 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:26:31.935 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:31.936 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:31.936 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:31.936 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:31.936 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:26:31.936 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:26:31.936 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:26:31.936 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:26:31.937 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:26:31.938 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:31.939 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:31.939 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:26:31.940 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:26:31.941 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:26:31.941 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:26:31.941 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:31.941 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:26:31.942 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:26:31.972 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:26:31.974 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 39
2020-08-17 13:26:31.990 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:26:31.990 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 55
2020-08-17 13:26:32.002 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:26:32.009 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 68
2020-08-17 13:26:32.184 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":3,"blogId":"1294647161643978752","blogRead":68,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613189000,"version":68},"msg":"阅读成功"}
2020-08-17 13:26:32.185 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 254
2020-08-17 13:26:32.317 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":3,"blogId":"1294647161643978752","blogRead":67,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:26:32.319 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 382
2020-08-17 13:26:34.256 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:26:34.256 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:26:34.256 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:26:34.256 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:26:34.257 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:26:34.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:26:34.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 185
2020-08-17 13:27:33.179 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:27:33.182 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:27:33.182 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:33.183 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:27:33.183 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:33.185 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:27:33.185 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:33.185 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:33.186 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:27:33.186 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:33.218 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:27:33.219 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 34
2020-08-17 13:27:33.413 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":4,"blogId":"1294647161643978752","blogRead":69,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613194000,"version":69},"msg":"阅读成功"}
2020-08-17 13:27:33.415 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 236
2020-08-17 13:27:40.069 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:27:40.070 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:27:40.071 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:40.071 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:27:40.072 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:40.073 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:27:40.074 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:40.074 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:40.075 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:27:40.075 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:40.076 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:27:40.076 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:40.077 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:40.078 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:27:40.078 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:27:40.079 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:27:40.079 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:40.080 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:40.082 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:27:40.082 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:27:40.085 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:27:40.085 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:40.085 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:40.085 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:27:40.086 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:27:40.117 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:27:40.126 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 53
2020-08-17 13:27:40.162 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:27:40.162 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:27:40.163 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 78
2020-08-17 13:27:40.163 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 87
2020-08-17 13:27:40.344 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":4,"blogId":"1294647161643978752","blogRead":70,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613253000,"version":70},"msg":"阅读成功"}
2020-08-17 13:27:40.345 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 276
2020-08-17 13:27:40.417 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":4,"blogId":"1294647161643978752","blogRead":69,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:27:40.418 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 339
2020-08-17 13:27:44.873 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:27:44.874 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:27:44.874 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:44.874 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:27:44.874 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:27:45.071 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:27:45.071 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 198
2020-08-17 13:27:45.179 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:27:45.180 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:27:45.180 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:45.180 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:27:45.181 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:45.454 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":5,"blogId":"1294647161643978752","blogRead":71,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613264000,"version":71},"msg":"阅读成功"}
2020-08-17 13:27:45.455 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 276
2020-08-17 13:27:51.637 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:27:51.638 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:27:51.639 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:51.639 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:27:51.641 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:51.642 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:27:51.643 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:51.644 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:51.644 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:27:51.645 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:51.648 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:27:51.649 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:51.649 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:51.650 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:27:51.650 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:27:51.652 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:27:51.653 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:51.654 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:51.654 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:27:51.654 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:27:51.656 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:27:51.656 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:27:51.656 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:51.656 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:27:51.656 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:27:51.698 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:27:51.699 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 57
2020-08-17 13:27:51.765 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:27:51.766 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 110
2020-08-17 13:27:51.772 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:27:51.772 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 124
2020-08-17 13:27:51.906 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":5,"blogId":"1294647161643978752","blogRead":72,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613265000,"version":72},"msg":"阅读成功"}
2020-08-17 13:27:51.906 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 269
2020-08-17 13:27:52.172 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":5,"blogId":"1294647161643978752","blogRead":71,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:27:52.173 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 521
2020-08-17 13:27:52.807 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:27:52.808 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:27:52.809 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:52.809 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:27:52.810 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:27:52.974 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:27:52.975 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 168
2020-08-17 13:27:53.123 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:27:53.124 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:27:53.124 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:27:53.124 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:27:53.124 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:27:53.357 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":6,"blogId":"1294647161643978752","blogRead":73,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613272000,"version":73},"msg":"阅读成功"}
2020-08-17 13:27:53.357 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 234
2020-08-17 13:28:13.957 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:28:13.957 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:28:13.958 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:28:13.958 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:28:13.959 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:28:13.959 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:28:13.959 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:28:13.959 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:28:13.959 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:28:13.960 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:28:13.961 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:28:13.961 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:28:13.961 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:28:13.961 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:28:13.961 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:28:13.961 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:28:13.961 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:28:13.962 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:28:13.999 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:28:14.001 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 43
2020-08-17 13:28:14.017 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:28:14.017 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 56
2020-08-17 13:28:14.034 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:28:14.035 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 74
2020-08-17 13:28:14.177 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":6,"blogId":"1294647161643978752","blogRead":74,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613272000,"version":74},"msg":"阅读成功"}
2020-08-17 13:28:14.178 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 221
2020-08-17 13:28:14.258 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":6,"blogId":"1294647161643978752","blogRead":73,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:28:14.258 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 297
2020-08-17 13:28:17.939 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:28:17.940 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:28:17.941 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:28:17.941 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:28:17.941 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:28:18.100 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:28:18.101 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 162
2020-08-17 13:28:18.231 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:28:18.232 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:28:18.233 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:28:18.233 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:28:18.233 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:28:18.424 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":7,"blogId":"1294647161643978752","blogRead":75,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613297000,"version":75},"msg":"阅读成功"}
2020-08-17 13:28:18.426 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 195
2020-08-17 13:30:00.896 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:30:00.897 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:30:00.897 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:30:00.898 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:30:00.898 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:30:00.913 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:30:00.914 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:30:00.913 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:30:00.914 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:30:00.914 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:30:00.913 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:30:00.914 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:30:00.914 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:30:00.915 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:30:00.914 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:30:00.916 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:30:00.917 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:30:00.918 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:30:01.157 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:30:01.158 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 244
2020-08-17 13:30:01.235 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:30:01.236 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 323
2020-08-17 13:30:01.282 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:30:01.283 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 370
2020-08-17 13:30:02.144 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":7,"blogId":"1294647161643978752","blogRead":76,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613298000,"version":76},"msg":"阅读成功"}
2020-08-17 13:30:02.145 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1249
2020-08-17 13:30:02.437 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":7,"blogId":"1294647161643978752","blogRead":75,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:30:02.437 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1524
2020-08-17 13:30:03.676 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:30:03.677 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:30:03.677 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:30:03.677 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:30:03.677 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1294647161643978752, blog=null, userId=null, user=null)]
2020-08-17 13:31:12.300 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:31:12.299 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:31:12.300 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:12.300 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:31:12.301 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.301 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:31:12.301 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:31:12.301 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.302 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:12.302 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:12.302 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.302 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:31:12.302 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:31:12.302 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:12.302 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:12.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:31:12.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:12.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.303 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:31:12.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:31:12.304 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:31:12.304 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.304 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:31:12.304 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:12.304 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:12.305 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:31:12.306 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:12.306 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.306 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:31:12.306 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:12.306 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.307 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:12.308 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:31:12.308 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:31:12.308 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:12.308 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:12.339 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:31:12.339 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:31:12.340 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 41
2020-08-17 13:31:12.340 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 39
2020-08-17 13:31:12.391 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:31:12.391 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 89
2020-08-17 13:31:12.392 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:31:12.392 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 86
2020-08-17 13:31:12.393 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:31:12.393 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 88
2020-08-17 13:31:12.451 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:31:12.451 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 144
2020-08-17 13:31:12.463 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:31:12.463 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 68787
2020-08-17 13:31:12.584 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":77,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613421000,"version":77},"msg":"阅读成功"}
2020-08-17 13:31:12.585 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 285
2020-08-17 13:31:12.643 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":77,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613421000,"version":77},"msg":"阅读成功"}
2020-08-17 13:31:12.644 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 341
2020-08-17 13:31:12.934 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":76,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:31:12.934 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 627
2020-08-17 13:31:19.006 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:31:19.006 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:31:19.008 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:19.009 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:31:19.009 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:31:19.010 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:19.010 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:19.010 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:19.010 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:31:19.011 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:19.014 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:31:19.015 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:19.016 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:19.017 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:31:19.018 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:19.040 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:31:19.040 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:31:19.040 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:31:19.040 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:19.040 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:19.040 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:19.041 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:19.046 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:31:19.046 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 32
2020-08-17 13:31:19.047 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:31:19.048 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 39
2020-08-17 13:31:19.101 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:31:19.101 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 61
2020-08-17 13:31:19.133 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:31:19.134 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 94
2020-08-17 13:31:19.263 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":78,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613472000,"version":78},"msg":"阅读成功"}
2020-08-17 13:31:19.265 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 259
2020-08-17 13:31:19.438 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":77,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:31:19.438 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 398
2020-08-17 13:31:32.950 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:31:32.951 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:31:32.952 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:32.953 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:31:32.953 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:32.955 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:31:32.956 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:32.956 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:32.956 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:31:32.957 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:31:32.958 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:31:32.959 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:32.959 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:32.959 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:32.959 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:32.994 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:31:32.995 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 37
2020-08-17 13:31:32.996 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:31:32.997 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 42
2020-08-17 13:31:33.008 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:31:33.009 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 51
2020-08-17 13:31:33.021 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:31:33.022 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 64
2020-08-17 13:31:33.193 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":79,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613478000,"version":79},"msg":"阅读成功"}
2020-08-17 13:31:33.193 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 243
2020-08-17 13:31:33.339 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":78,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:31:33.340 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 382
2020-08-17 13:31:35.651 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:31:35.652 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:31:35.652 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:35.652 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:31:35.652 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:35.654 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:31:35.654 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:35.654 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:35.655 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:35.668 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:31:35.669 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:35.669 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:35.670 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:31:35.670 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:31:35.670 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:35.670 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:35.670 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:35.670 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:31:35.671 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:35.683 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:31:35.683 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 28
2020-08-17 13:31:35.689 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:31:35.690 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 36
2020-08-17 13:31:35.713 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:31:35.715 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 60
2020-08-17 13:31:35.722 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:31:35.723 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 53
2020-08-17 13:31:35.908 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":80,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613492000,"version":80},"msg":"阅读成功"}
2020-08-17 13:31:35.909 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 258
2020-08-17 13:31:36.008 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":79,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:31:36.009 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 341
2020-08-17 13:31:37.830 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:31:37.831 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:31:37.832 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:37.833 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:31:37.833 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:37.835 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:31:37.836 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:37.836 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:37.837 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:31:37.837 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:37.837 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:31:37.837 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:37.837 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:37.837 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:31:37.837 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:31:37.838 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:31:37.839 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:37.839 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:37.840 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:31:37.841 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:31:37.865 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:31:37.865 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 28
2020-08-17 13:31:37.867 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:31:37.868 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 33
2020-08-17 13:31:37.890 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:31:37.890 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 50
2020-08-17 13:31:37.913 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:31:37.913 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 75
2020-08-17 13:31:38.071 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":81,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613495000,"version":81},"msg":"阅读成功"}
2020-08-17 13:31:38.072 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 242
2020-08-17 13:31:38.236 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":80,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:31:38.236 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 396
2020-08-17 13:33:03.738 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:33:03.739 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:33:03.740 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:03.741 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:33:03.741 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:33:03.741 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:33:03.742 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:03.742 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:03.742 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:33:03.742 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:33:03.744 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:33:03.744 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:33:03.744 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:03.745 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:03.745 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:03.745 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:03.745 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:33:03.745 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:33:03.745 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:03.746 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:33:03.747 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:33:03.747 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:33:03.748 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:03.748 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:03.748 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:03.748 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:03.748 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:33:03.748 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:33:03.748 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:03.749 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:03.777 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:33:03.779 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 38
2020-08-17 13:33:03.779 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:33:03.780 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 36
2020-08-17 13:33:03.799 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:33:03.800 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 53
2020-08-17 13:33:03.825 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:33:03.825 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 81
2020-08-17 13:33:04.004 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":82,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613497000,"version":82},"msg":"阅读成功"}
2020-08-17 13:33:04.005 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 267
2020-08-17 13:33:04.221 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":128,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":81,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:33:04.222 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 475
2020-08-17 13:33:13.819 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 13:33:13.821 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:33:13.823 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:13.825 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:33:13.825 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:13.827 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850133657653248
2020-08-17 13:33:13.828 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:13.828 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:13.829 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:33:13.830 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:13.831 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850133657653248
2020-08-17 13:33:13.832 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:13.833 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:13.834 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:33:13.835 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:13.860 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 13:33:13.860 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 33
2020-08-17 13:33:13.863 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":false,"msg":"操作成功！"}
2020-08-17 13:33:13.866 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 35
2020-08-17 13:33:14.072 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":123,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":129,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597523959000,"version":6},"msg":"阅读成功"}
2020-08-17 13:33:14.073 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 254
2020-08-17 13:33:16.825 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:33:16.825 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:33:16.825 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:16.825 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:33:16.825 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1293850133657653248, blog=null, userId=null, user=null)]
2020-08-17 13:33:17.000 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:33:17.000 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 175
2020-08-17 13:33:17.118 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 13:33:17.118 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:33:17.119 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:17.119 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:33:17.119 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:17.365 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":130,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613596000,"version":7},"msg":"阅读成功"}
2020-08-17 13:33:17.368 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 250
2020-08-17 13:33:23.736 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 13:33:23.736 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850133657653248
2020-08-17 13:33:23.737 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:33:23.737 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:23.737 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:23.737 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:23.737 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:33:23.738 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:23.738 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:33:23.738 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:23.741 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850133657653248
2020-08-17 13:33:23.742 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:23.742 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:23.742 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:33:23.743 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:23.747 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:33:23.747 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:33:23.748 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:23.748 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:23.748 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:23.748 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:23.749 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:33:23.749 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:33:23.750 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:23.750 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:23.750 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:33:23.751 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:23.751 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:23.751 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:33:23.752 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:23.765 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 13:33:23.765 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 29
2020-08-17 13:33:23.769 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:33:23.769 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 28
2020-08-17 13:33:23.798 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:33:23.799 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 49
2020-08-17 13:33:23.808 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:33:23.808 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 61
2020-08-17 13:33:23.984 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":131,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613596000,"version":8},"msg":"阅读成功"}
2020-08-17 13:33:23.985 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 249
2020-08-17 13:33:24.119 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":130,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":82,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:33:24.120 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 373
2020-08-17 13:33:43.639 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 13:33:43.641 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:33:43.641 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:43.641 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:33:43.642 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:43.645 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850133657653248
2020-08-17 13:33:43.645 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850133657653248
2020-08-17 13:33:43.647 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:43.647 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:43.647 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:43.647 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:43.648 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:33:43.648 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:33:43.648 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:43.648 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:43.675 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:33:43.675 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 13:33:43.676 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 31
2020-08-17 13:33:43.676 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 31
2020-08-17 13:33:43.880 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":132,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613603000,"version":9},"msg":"阅读成功"}
2020-08-17 13:33:43.882 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 243
2020-08-17 13:33:45.110 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 13:33:45.110 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:33:45.112 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:45.113 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:33:45.113 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:45.114 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850133657653248
2020-08-17 13:33:45.114 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:45.115 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:45.115 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:33:45.116 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:45.118 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850133657653248
2020-08-17 13:33:45.119 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:45.120 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:45.120 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:33:45.121 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:45.123 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:33:45.123 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:33:45.123 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:45.123 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:45.124 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:45.124 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:45.124 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:33:45.124 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:33:45.124 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:45.124 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:45.127 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:33:45.127 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:45.127 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:45.128 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:33:45.128 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:33:45.141 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 13:33:45.142 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 28
2020-08-17 13:33:45.147 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:33:45.148 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 30
2020-08-17 13:33:45.173 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:33:45.173 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 46
2020-08-17 13:33:45.177 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:33:45.177 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 54
2020-08-17 13:33:45.351 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":133,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613623000,"version":10},"msg":"阅读成功"}
2020-08-17 13:33:45.352 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 242
2020-08-17 13:33:45.506 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":132,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":0,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":82,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:33:45.506 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 383
2020-08-17 13:33:51.371 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 13:33:51.372 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:33:51.372 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:51.373 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:33:51.373 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:51.378 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850133657653248
2020-08-17 13:33:51.379 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:51.381 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850133657653248
2020-08-17 13:33:51.380 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:51.382 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:33:51.382 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:33:51.382 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:33:51.382 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:51.383 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:33:51.383 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 13:33:51.421 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:33:51.423 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 13:33:51.423 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 42
2020-08-17 13:33:51.425 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 47
2020-08-17 13:33:51.638 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613624000,"version":11},"msg":"阅读成功"}
2020-08-17 13:33:51.639 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 268
2020-08-17 13:34:01.353 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293896447598579712
2020-08-17 13:34:01.355 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:34:01.356 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:01.357 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:34:01.358 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293896447598579712]
2020-08-17 13:34:01.358 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293896447598579712
2020-08-17 13:34:01.359 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:34:01.360 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:01.360 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:34:01.361 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293896447598579712]
2020-08-17 13:34:01.361 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293896447598579712
2020-08-17 13:34:01.361 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:34:01.362 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:01.362 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:34:01.363 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293896447598579712]
2020-08-17 13:34:01.400 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 13:34:01.400 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":false,"msg":"操作成功！"}
2020-08-17 13:34:01.401 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 13:34:01.401 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 43
2020-08-17 13:34:01.600 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":213,"blogContent":"<p>测试123213421</p>","blogGoods":123,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":1,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597473666000,"version":4},"msg":"阅读成功"}
2020-08-17 13:34:01.602 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 249
2020-08-17 13:34:03.025 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:34:03.026 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:34:03.026 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:03.026 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:34:03.026 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1293896447598579712, blog=null, userId=null, user=null)]
2020-08-17 13:34:03.194 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:34:03.195 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 170
2020-08-17 13:34:03.302 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293896447598579712
2020-08-17 13:34:03.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:34:03.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:03.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:34:03.303 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293896447598579712]
2020-08-17 13:34:03.525 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":213,"blogContent":"<p>测试123213421</p>","blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613642000,"version":5},"msg":"阅读成功"}
2020-08-17 13:34:03.526 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 224
2020-08-17 13:34:09.074 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:34:09.075 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:34:09.076 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:09.076 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:34:09.077 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:34:09.079 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:34:09.079 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:34:09.081 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:34:09.081 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:34:09.082 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:09.082 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:34:09.082 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:34:09.082 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:34:09.083 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:34:09.083 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:34:09.140 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:34:09.141 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 62
2020-08-17 13:34:09.141 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:34:09.142 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 63
2020-08-17 13:34:09.361 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":83,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613583000,"version":83},"msg":"阅读成功"}
2020-08-17 13:34:09.363 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 289
2020-08-17 13:36:37.639 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 13:36:37.640 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:36:37.641 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:37.642 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:36:37.642 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:36:37.644 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 13:36:37.644 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:37.645 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:37.645 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:36:37.646 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:36:37.647 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 13:36:37.648 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:37.648 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:37.648 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:36:37.648 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 13:36:37.648 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:36:37.648 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:36:37.648 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:36:37.649 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:36:37.697 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:36:37.699 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 52
2020-08-17 13:36:37.701 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 13:36:37.703 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 59
2020-08-17 13:36:37.739 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:36:37.740 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 92
2020-08-17 13:36:37.743 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:36:37.743 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 95
2020-08-17 13:36:37.916 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613648000,"version":84},"msg":"阅读成功"}
2020-08-17 13:36:37.918 INFO  [http-nio-8080-exec-11]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 279
2020-08-17 13:36:38.013 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2243,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":83,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:36:38.015 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 367
2020-08-17 13:36:39.286 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:36:39.286 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:36:39.287 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:36:39.287 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:39.288 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:39.288 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:39.288 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:36:39.288 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:36:39.288 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:36:39.288 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:36:39.310 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:36:39.311 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:39.312 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:39.312 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:36:39.313 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:36:39.317 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 13:36:39.318 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 32
2020-08-17 13:36:39.341 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":false,"msg":"操作成功！"}
2020-08-17 13:36:39.341 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 31
2020-08-17 13:36:39.512 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":34,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2244,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597473676000,"version":10},"msg":"阅读成功"}
2020-08-17 13:36:39.514 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 228
2020-08-17 13:36:42.223 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/good
2020-08-17 13:36:42.223 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:36:42.223 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:42.224 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.good
2020-08-17 13:36:42.225 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Good(id=null, blogId=1293850784802377728, blog=null, userId=null, user=null)]
2020-08-17 13:36:42.400 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功"}
2020-08-17 13:36:42.401 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 178
2020-08-17 13:36:42.500 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:36:42.501 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:36:42.501 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:42.501 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:36:42.502 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:36:42.704 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597613801000,"version":11},"msg":"阅读成功"}
2020-08-17 13:36:42.709 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 209
2020-08-17 13:36:53.987 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 13:36:53.988 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:36:53.989 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:53.990 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 13:36:53.990 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=很好 很有用！, commentUser=null, commentBlog=null, commentBlogId=1293850784802377728, commentGood=null, createdTime=null)]
2020-08-17 13:36:54.144 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 13:36:54.145 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 158
2020-08-17 13:36:54.246 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:36:54.248 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:36:54.250 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:36:54.251 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:36:54.252 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:36:54.307 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:36:54.307 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 61
2020-08-17 13:50:37.024 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 13:50:37.034 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:74}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 13:50:37.036 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:4, serverValue:76}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 13:50:37.038 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:75}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 13:50:37.088 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 13:52:55.681 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 1680 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 13:52:55.688 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 13:52:55.764 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 13:52:55.765 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 13:52:57.069 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:52:57.072 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 13:52:57.180 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 102ms. Found 3 MongoDB repository interfaces.
2020-08-17 13:52:57.212 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 13:52:57.213 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 13:52:57.244 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:52:57.245 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:52:57.245 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 13:52:57.245 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 17ms. Found 0 Redis repository interfaces.
2020-08-17 13:52:58.425 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$5a735048] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:52:58.499 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:52:58.523 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4507d37e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:52:58.529 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$2bdf77c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:52:58.537 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 13:52:58.657 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:52:58.686 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:52:58.747 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.505 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 13:53:02.505 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.589 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.923 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.930 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.940 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.945 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.947 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.987 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.989 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.991 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:02.993 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:03.061 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:03.109 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 13:53:03.901 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 13:53:03.914 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 13:53:03.916 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 13:53:03.916 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 13:53:04.068 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 13:53:04.070 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 8305 ms
2020-08-17 13:53:04.612 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 13:53:04.741 INFO  [cluster-ClusterId{value='5f3a1b401018302f93b93788', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:77}] to 112.74.99.109:27017
2020-08-17 13:53:04.778 INFO  [cluster-ClusterId{value='5f3a1b401018302f93b93788', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=35466900}
2020-08-17 13:53:05.430 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 13:53:08.335 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 13:53:08.364 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 13:53:08.377 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 13.675 seconds (JVM running for 15.975)
2020-08-17 13:53:48.108 INFO  [http-nio-8080-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 13:53:48.108 INFO  [http-nio-8080-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 13:53:48.134 INFO  [http-nio-8080-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 24 ms
2020-08-17 13:53:48.223 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:53:48.223 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:53:48.223 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:53:48.224 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:53:48.224 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:53:48.224 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:53:48.224 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:53:48.224 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:53:48.224 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:53:48.227 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:53:48.227 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:53:48.227 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:53:48.228 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:53:48.228 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:53:48.228 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:53:48.526 INFO  [http-nio-8080-exec-3]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:78}] to 112.74.99.109:27017
2020-08-17 13:53:48.554 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:79}] to 112.74.99.109:27017
2020-08-17 13:53:48.852 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:53:48.854 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 631
2020-08-17 13:53:48.879 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:53:48.881 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 658
2020-08-17 13:53:49.526 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2246,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597613802000,"version":12},"msg":"阅读成功"}
2020-08-17 13:53:49.527 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1304
2020-08-17 13:54:23.097 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:54:23.098 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:54:23.099 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:54:23.101 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:54:23.101 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:54:23.102 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:54:23.102 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:54:23.104 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:54:23.107 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:54:23.108 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:54:23.101 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:54:23.117 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:54:23.119 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:54:23.121 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:54:23.123 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:54:23.157 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:54:23.160 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 59
2020-08-17 13:54:23.191 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:54:23.193 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 92
2020-08-17 13:54:23.401 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2247,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614829000,"version":13},"msg":"阅读成功"}
2020-08-17 13:54:23.403 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 306
2020-08-17 13:55:14.966 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:55:14.967 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:14.967 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:55:14.967 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:55:14.967 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:55:14.968 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:14.969 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:14.969 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:14.980 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:55:14.980 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:55:14.980 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:55:14.980 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:14.980 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:14.980 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:14.981 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:55:14.981 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:55:14.981 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:14.981 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:14.987 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:55:14.988 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 22
2020-08-17 13:55:15.043 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:55:15.045 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 65
2020-08-17 13:55:15.053 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:55:15.054 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 87
2020-08-17 13:55:15.062 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:55:15.062 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 95
2020-08-17 13:55:15.215 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2248,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614863000,"version":14},"msg":"阅读成功"}
2020-08-17 13:55:15.217 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 237
2020-08-17 13:55:15.389 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":23,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2247,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:55:15.390 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 423
2020-08-17 13:55:18.839 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/collection
2020-08-17 13:55:18.839 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:55:18.839 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:18.840 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.collection
2020-08-17 13:55:18.840 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Collection(id=null, User=null, userId=null, Blog=null, BlogId=1293850784802377728, createdTime=null)]
2020-08-17 13:55:19.220 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"收藏成功"}
2020-08-17 13:55:19.222 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 383
2020-08-17 13:55:19.338 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:55:19.339 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:55:19.339 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:19.340 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:55:19.340 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:19.620 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2249,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614918000,"version":15},"msg":"阅读成功"}
2020-08-17 13:55:19.623 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 285
2020-08-17 13:55:32.710 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:55:32.711 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:55:32.711 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:32.711 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:32.711 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:32.712 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:32.712 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:55:32.712 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:32.710 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:55:32.712 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:55:32.712 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:32.712 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:32.713 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:32.713 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:55:32.713 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:32.727 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:55:32.727 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:55:32.727 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:55:32.728 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:32.728 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:55:32.728 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:32.729 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:32.740 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:55:32.741 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 30
2020-08-17 13:55:32.773 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:55:32.774 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 47
2020-08-17 13:55:32.787 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:55:32.788 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 78
2020-08-17 13:55:32.791 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:55:32.791 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 65
2020-08-17 13:55:32.956 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2250,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614919000,"version":16},"msg":"阅读成功"}
2020-08-17 13:55:32.960 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 233
2020-08-17 13:55:33.128 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2249,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:55:33.129 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 419
2020-08-17 13:55:40.083 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:55:40.083 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:55:40.085 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:55:40.085 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:40.085 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:40.086 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:55:40.085 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:40.086 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:40.087 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:55:40.088 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:40.093 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:55:40.093 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:55:40.093 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:55:40.093 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:40.095 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:40.095 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:40.094 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:55:40.095 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:55:40.095 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:55:40.096 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:55:40.096 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:40.096 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:55:40.096 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:55:40.125 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:55:40.126 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 33
2020-08-17 13:55:40.133 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:55:40.135 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 53
2020-08-17 13:55:40.143 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:55:40.144 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 51
2020-08-17 13:55:40.160 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:55:40.160 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 67
2020-08-17 13:55:40.385 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614932000,"version":17},"msg":"阅读成功"}
2020-08-17 13:55:40.387 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 305
2020-08-17 13:55:40.431 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2250,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:55:40.431 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 338
2020-08-17 13:57:08.647 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:57:08.648 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:57:08.649 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:57:08.650 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:57:08.651 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:57:08.725 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:57:08.725 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 78
2020-08-17 13:57:09.108 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 13:57:09.109 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:57:09.110 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:57:09.110 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 13:57:09.111 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:57:09.267 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 13:57:09.268 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 160
2020-08-17 13:57:23.542 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 13:57:23.543 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:57:23.543 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:57:23.543 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 13:57:23.544 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 13:57:24.421 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 13:57:24.421 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 879
2020-08-17 13:57:27.561 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 13:57:27.561 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:57:27.561 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:57:27.562 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 13:57:27.562 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=2, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 13:57:27.942 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614940000,"version":18},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613643000,"version":6}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 13:57:27.942 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 381
2020-08-17 13:57:31.258 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getById/1293850784802377728
2020-08-17 13:57:31.259 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:57:31.259 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:57:31.259 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getById
2020-08-17 13:57:31.259 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:57:31.839 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597614940000,"version":18},"msg":"操作成功！"}
2020-08-17 13:57:31.839 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 581
2020-08-17 13:58:15.805 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/login
2020-08-17 13:58:15.806 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:58:15.806 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 13:58:15.806 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.login
2020-08-17 13:58:15.807 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=qq1437631334, password=e10adc3949ba59abbe56e057f20f883e)]
2020-08-17 13:58:15.862 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"059F0F62A2CA29F063DCBCCB86695B3C"},"msg":"操作成功！"}
2020-08-17 13:58:15.862 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 57
2020-08-17 13:58:26.219 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /upload/uploadImage
2020-08-17 13:58:26.219 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:58:26.220 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 13:58:26.220 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.UploadController.uploadImage
2020-08-17 13:58:26.220 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1f6444c]
2020-08-17 13:58:26.956 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png","msg":"上传成功！"}
2020-08-17 13:58:26.956 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 737
2020-08-17 13:58:38.421 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/update
2020-08-17 13:58:38.422 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:58:38.422 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:38.422 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.update
2020-08-17 13:58:38.422 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Blog(blogId=1293850784802377728, blogTitle=mybatis <if>标签踩坑, blogImage=http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg, blogContent=<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>, blogGoods=35, blogRead=2251, blogCollection=24, blogType=10, blogRemark=null, blogComment=1, blogSource=null, createdTime=Mon Jul 13 10:04:00 CST 2020, updateTime=Sun Aug 16 17:55:40 CST 2020, version=18, deleted=null)]
2020-08-17 13:58:38.618 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功！"}
2020-08-17 13:58:38.619 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 198
2020-08-17 13:58:38.748 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 13:58:38.749 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:58:38.749 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:38.751 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 13:58:38.752 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=2, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 13:58:39.192 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615118000,"version":19},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613643000,"version":6}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 13:58:39.193 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 445
2020-08-17 13:58:42.554 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:58:42.555 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:58:42.556 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:42.556 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:58:42.556 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:58:42.570 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:58:42.571 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:58:42.572 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:42.573 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:58:42.575 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:58:42.581 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:58:42.583 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:58:42.581 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:58:42.583 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:58:42.584 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:58:42.584 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:42.584 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:42.584 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:58:42.584 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:58:42.585 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:58:42.585 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:58:42.585 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:58:42.583 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:58:42.585 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:58:42.586 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:42.587 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:58:42.588 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:58:42.588 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:58:42.588 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:58:42.588 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:58:42.616 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:58:42.617 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 35
2020-08-17 13:58:42.634 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:58:42.636 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 66
2020-08-17 13:58:42.657 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:58:42.657 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:58:42.657 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 72
2020-08-17 13:58:42.657 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 76
2020-08-17 13:58:42.796 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615118000,"version":19},"msg":"阅读成功"}
2020-08-17 13:58:42.798 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 244
2020-08-17 13:58:43.008 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2251,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:58:43.009 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 428
2020-08-17 13:59:01.028 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getById/1293850784802377728
2020-08-17 13:59:01.029 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:59:01.029 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:01.029 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getById
2020-08-17 13:59:01.029 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:59:01.178 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615122000,"version":20},"msg":"操作成功！"}
2020-08-17 13:59:01.179 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 151
2020-08-17 13:59:07.898 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getById/1293850784802377728
2020-08-17 13:59:07.898 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:59:07.898 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:07.898 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getById
2020-08-17 13:59:07.899 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:59:08.045 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615122000,"version":20},"msg":"操作成功！"}
2020-08-17 13:59:08.046 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 148
2020-08-17 13:59:21.330 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/update
2020-08-17 13:59:21.330 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:59:21.331 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:21.331 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.update
2020-08-17 13:59:21.331 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Blog(blogId=1293850784802377728, blogTitle=mybatis <if>标签踩坑, blogImage=http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg, blogContent=<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null and typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>
<pre>&nbsp;<span class="cnblogs_code"><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null and typeNmae!=''"</span><span style="color: #0000ff;">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span>  　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;">12</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">16</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">19</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=''"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre><span style="color: #008080;"> 1</span> 　　<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">update </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="update"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #000000;">        update bl_type
</span><span style="color: #008080;"> 3</span>             <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeName!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #000000;">                    type_name = #{typeName},
</span><span style="color: #008080;"> 6</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="typeBlogCount!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span> <span style="color: #000000;">                    type_blog_count = #{typeBlogCount},
</span><span style="color: #008080;"> 9</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>                 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if </span><span style="color: #ff0000;">test</span><span style="color: #0000ff;">="enable!=null"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span> <span style="color: #000000;">                    enable = #{enable},
</span><span style="color: #008080;">12</span>                 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>             <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">set</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span> <span style="color: #000000;">        where type_id = #{typeId}
</span><span style="color: #008080;">15</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">update</span><span style="color: #0000ff;">&gt;</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>
<p>---------------------------------------更新-------------------------------------</p>
<p>问题已解决</p>
<p>为什么会出现这个问题？</p>
<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>
<p><img src="http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png" alt="" width="600" height="354" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;参考资料：<a href="https://blog.csdn.net/Dongguabai/article/details/82981250">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>, blogGoods=35, blogRead=2252, blogCollection=24, blogType=10, blogRemark=null, blogComment=1, blogSource=null, createdTime=Mon Jul 13 10:04:00 CST 2020, updateTime=Sun Aug 16 17:58:42 CST 2020, version=20, deleted=null)]
2020-08-17 13:59:21.568 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功！"}
2020-08-17 13:59:21.569 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 239
2020-08-17 13:59:21.683 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 13:59:21.684 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:59:21.685 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:21.685 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 13:59:21.685 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=2, pageSize=4, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 13:59:22.126 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":3,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615161000,"version":21},{"blogCollection":234,"blogComment":23,"blogGoods":4,"blogId":"1293851272755122176","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81EHWAb_okAEA7FSiCoxo886.jpg","blogRead":5,"blogRemark":" ","blogTitle":"Vue-v-bind、v-for、v-if等基本操作","blogType":14,"createdTime":1594260357000,"typeName":"docker","updateTime":1597473670000,"version":9},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker","updateTime":1597613643000,"version":6}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":4,"pages":2,"prePage":0,"size":4,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 13:59:22.128 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 445
2020-08-17 13:59:24.895 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:59:24.896 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:59:24.897 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 13:59:24.897 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 13:59:24.897 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:59:24.897 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:59:24.897 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:24.897 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:24.898 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:24.898 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:59:24.898 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 13:59:24.898 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 13:59:24.898 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:59:24.898 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:59:24.898 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:59:24.925 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 13:59:24.926 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:59:24.926 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 30
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:24.927 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 13:59:24.928 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 13:59:24.928 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:59:24.928 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 13:59:24.942 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 13:59:24.943 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 46
2020-08-17 13:59:24.995 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 13:59:24.996 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 71
2020-08-17 13:59:24.996 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 13:59:24.997 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 70
2020-08-17 13:59:25.249 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":24,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2253,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615161000,"version":21},"msg":"阅读成功"}
2020-08-17 13:59:25.408 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 513
2020-08-17 13:59:25.433 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":24,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2252,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 13:59:25.435 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 508
2020-08-17 13:59:54.346 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/collection
2020-08-17 13:59:54.346 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 13:59:54.347 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:54.347 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.collection
2020-08-17 13:59:54.347 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Collection(id=null, User=null, userId=null, Blog=null, BlogId=1293850784802377728, createdTime=null)]
2020-08-17 13:59:54.585 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"收藏成功"}
2020-08-17 13:59:54.586 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 240
2020-08-17 13:59:54.684 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 13:59:54.685 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 13:59:54.685 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 13:59:54.685 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 13:59:54.685 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 13:59:54.909 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2254,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615194000,"version":22},"msg":"阅读成功"}
2020-08-17 13:59:54.911 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 227
2020-08-17 14:00:00.840 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 14:00:00.840 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 14:00:00.840 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:00:00.842 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:00:00.841 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:00:00.842 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:00:00.842 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:00.842 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:00:00.842 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:00:00.842 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:00:00.842 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:00:00.870 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:00:00.871 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 30
2020-08-17 14:00:00.884 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 14:00:00.885 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 45
2020-08-17 14:00:00.897 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:00:00.898 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 57
2020-08-17 14:00:00.911 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:00:00.911 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 71
2020-08-17 14:00:01.136 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2255,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615194000,"version":23},"msg":"阅读成功"}
2020-08-17 14:00:01.139 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 299
2020-08-17 14:00:01.181 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2254,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:00:01.181 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 341
2020-08-17 14:00:02.804 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 14:00:02.805 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:00:02.805 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:02.806 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:00:02.806 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:00:02.807 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 14:00:02.807 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:02.808 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:02.808 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:00:02.809 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:00:02.809 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 14:00:02.809 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:02.810 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:02.810 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:00:02.810 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:00:02.812 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:02.813 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:00:02.813 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:00:02.813 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:00:02.813 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:00:02.813 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:00:02.837 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:00:02.838 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 29
2020-08-17 14:00:02.852 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 14:00:02.853 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 46
2020-08-17 14:00:02.867 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:00:02.869 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 57
2020-08-17 14:00:02.880 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:00:02.880 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 68
2020-08-17 14:00:03.020 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615200000,"version":24},"msg":"阅读成功"}
2020-08-17 14:00:03.022 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 218
2020-08-17 14:00:03.185 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2255,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":134,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:00:03.187 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 375
2020-08-17 14:00:06.965 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 14:00:06.967 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:00:06.970 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:06.970 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:00:06.971 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 14:00:06.976 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850133657653248
2020-08-17 14:00:06.976 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850133657653248
2020-08-17 14:00:06.977 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:06.977 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:00:06.978 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:06.978 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:06.979 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:00:06.979 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:00:06.979 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 14:00:06.980 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 14:00:07.003 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:00:07.004 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 28
2020-08-17 14:00:07.010 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 14:00:07.011 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 35
2020-08-17 14:00:07.235 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":135,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597613631000,"version":12},"msg":"阅读成功"}
2020-08-17 14:00:07.237 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 272
2020-08-17 14:00:10.049 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/collection
2020-08-17 14:00:10.050 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:00:10.051 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:10.051 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.collection
2020-08-17 14:00:10.052 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Collection(id=null, User=null, userId=null, Blog=null, BlogId=1293850133657653248, createdTime=null)]
2020-08-17 14:00:10.310 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"收藏成功"}
2020-08-17 14:00:10.311 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 262
2020-08-17 14:00:10.413 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 14:00:10.413 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:00:10.414 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:00:10.414 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:00:10.414 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 14:00:10.664 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":123,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597615209000,"version":13},"msg":"阅读成功"}
2020-08-17 14:00:10.665 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 252
2020-08-17 14:20:28.496 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 14:20:28.498 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:20:28.498 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:28.499 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 14:20:28.499 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:20:28.500 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:20:28.501 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:20:28.501 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:20:28.501 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:20:29.863 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:20:29.863 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1363
2020-08-17 14:20:30.109 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":2,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597608465000,"version":5},"msg":"阅读成功"}
2020-08-17 14:20:30.109 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1613
2020-08-17 14:20:30.371 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 14:20:30.372 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:30.373 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:30.373 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 14:20:30.374 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:20:30.448 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":123,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:20:30.449 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1949
2020-08-17 14:20:30.461 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 14:20:30.461 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 90
2020-08-17 14:20:30.518 INFO  [cluster-ClusterId{value='5f3a1b401018302f93b93788', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:4, serverValue:81}] to 112.74.99.109:27017
2020-08-17 14:20:30.596 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:20:30.596 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 2096
2020-08-17 14:20:31.355 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 14:20:31.355 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:20:31.356 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:31.356 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 14:20:31.356 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 14:20:31.839 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 14:20:31.840 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 485
2020-08-17 14:20:32.113 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /about/read
2020-08-17 14:20:32.114 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:20:32.115 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:32.116 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AboutController.read
2020-08-17 14:20:32.118 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:20:32.356 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"aboutContent":"<p>123456</p>","aboutId":"4","aboutRead":3,"aboutTitle":"123","createdTime":1597293441000,"enable":1,"updateTime":1597616429000,"version":6},"msg":"阅读成功"}
2020-08-17 14:20:32.357 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 243
2020-08-17 14:20:33.482 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /type/getAll
2020-08-17 14:20:33.484 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:33.485 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:33.486 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.TypeController.getAll
2020-08-17 14:20:33.487 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:20:33.555 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"Java"},{"typeBlogCount":0,"typeId":7,"typeName":"PHP"},{"typeBlogCount":0,"typeId":8,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":9,"typeName":"Springboot"},{"typeBlogCount":1,"typeId":10,"typeName":"Mybatis"},{"typeBlogCount":0,"typeId":11,"typeName":"HTML"},{"typeBlogCount":1,"typeId":12,"typeName":"Shiro"},{"typeBlogCount":1,"typeId":13,"typeName":"fastdfs"},{"typeBlogCount":5,"typeId":14,"typeName":"docker"},{"typeBlogCount":0,"typeId":15,"typeName":"Vue"},{"typeBlogCount":1,"typeId":16,"typeName":"Mysql"}],"msg":"操作成功！"}
2020-08-17 14:20:33.556 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 74
2020-08-17 14:20:34.479 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 14:20:34.480 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:20:34.481 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:34.481 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 14:20:34.481 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 14:20:34.950 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":84,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 14:20:34.950 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 471
2020-08-17 14:20:37.327 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:20:37.330 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:20:37.333 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:37.334 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:20:37.335 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:37.337 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:20:37.337 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:20:37.339 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:37.339 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:37.339 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:37.339 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:37.339 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:20:37.339 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:20:37.340 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:37.340 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:37.383 INFO  [http-nio-8080-exec-5]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:79}] to 112.74.99.109:27017 because there was a socket exception raised on another connection from this pool.
2020-08-17 14:20:37.383 INFO  [http-nio-8080-exec-3]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:78}] to 112.74.99.109:27017 because there was a socket exception raised on another connection from this pool.
2020-08-17 14:20:37.440 INFO  [http-nio-8080-exec-3]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:5, serverValue:82}] to 112.74.99.109:27017
2020-08-17 14:20:37.440 INFO  [http-nio-8080-exec-5]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:6, serverValue:83}] to 112.74.99.109:27017
2020-08-17 14:20:37.470 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:20:37.471 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 134
2020-08-17 14:20:37.480 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 14:20:37.482 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 145
2020-08-17 14:20:37.592 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":85,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597613797000,"version":85},"msg":"阅读成功"}
2020-08-17 14:20:37.593 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 266
2020-08-17 14:20:43.367 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 14:20:43.368 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:20:43.368 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:43.368 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 14:20:43.369 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 14:20:44.024 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":85,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616437000,"version":86},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 14:20:44.026 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 659
2020-08-17 14:20:47.369 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:20:47.370 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:20:47.371 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:47.373 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:20:47.373 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:20:47.374 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:47.374 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:47.375 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:47.375 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:20:47.376 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:20:47.376 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:47.376 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:47.376 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:47.376 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:20:47.377 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:47.406 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:20:47.407 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 31
2020-08-17 14:20:47.410 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 14:20:47.411 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 38
2020-08-17 14:20:47.611 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":86,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616437000,"version":86},"msg":"阅读成功"}
2020-08-17 14:20:47.612 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 243
2020-08-17 14:20:52.469 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 14:20:52.470 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:20:52.471 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:52.472 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 14:20:52.472 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 14:20:53.010 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":8,"blogId":"1294647161643978752","blogRead":86,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616447000,"version":87},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 14:20:53.010 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 541
2020-08-17 14:20:54.053 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:20:54.053 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:20:54.054 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:54.054 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:54.055 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:54.055 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:54.056 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:20:54.056 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:20:54.057 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:54.057 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:54.088 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:20:54.089 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 36
2020-08-17 14:20:54.092 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"}],"msg":"操作成功！"}
2020-08-17 14:20:54.093 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 14:20:54.109 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:20:54.110 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:20:54.111 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:54.111 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:20:54.112 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:54.316 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616447000,"version":87},"msg":"阅读成功"}
2020-08-17 14:20:54.317 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 208
2020-08-17 14:20:57.342 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:20:57.344 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:20:57.345 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:57.345 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:20:57.345 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=123123, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:20:57.568 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:20:57.569 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 227
2020-08-17 14:20:57.686 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:20:57.687 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:20:57.688 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:20:57.688 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:20:57.689 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:20:57.727 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597616457000,"version":88},"commentBlogId":"1294647161643978752","commentContent":"123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02:20:57","id":"5f3a21c91018302f93b9378c"}],"msg":"操作成功！"}
2020-08-17 14:20:57.728 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 42
2020-08-17 14:28:19.775 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:28:19.779 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:5, serverValue:82}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:28:19.780 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:6, serverValue:83}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:28:19.796 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 14:28:27.975 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 720 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 14:28:27.980 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 14:28:28.032 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 14:28:28.032 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 14:28:29.083 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:28:29.084 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 14:28:29.211 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 113ms. Found 3 MongoDB repository interfaces.
2020-08-17 14:28:29.236 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:28:29.238 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 14:28:29.257 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:28:29.257 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:28:29.258 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:28:29.258 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2020-08-17 14:28:29.925 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$a3d2b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:29.980 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:29.990 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$eb3855ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:29.993 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d20ffa2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:29.997 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 14:28:30.096 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:30.124 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:30.158 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:32.790 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 14:28:32.790 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:32.887 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.275 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.292 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.300 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.305 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.307 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.329 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.330 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.333 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.336 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.386 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:33.421 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:28:34.312 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 14:28:34.327 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 14:28:34.329 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 14:28:34.330 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 14:28:34.489 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 14:28:34.490 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 6458 ms
2020-08-17 14:28:35.086 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 14:28:35.208 INFO  [cluster-ClusterId{value='5f3a2393ebfa2a7c45fe3263', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:86}] to 112.74.99.109:27017
2020-08-17 14:28:35.238 INFO  [cluster-ClusterId{value='5f3a2393ebfa2a7c45fe3263', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25139000}
2020-08-17 14:28:35.813 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 14:28:38.594 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 14:28:38.661 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 14:28:38.675 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 11.514 seconds (JVM running for 13.011)
2020-08-17 14:28:42.440 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 14:28:42.440 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 14:28:42.462 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 22 ms
2020-08-17 14:28:42.679 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:28:42.680 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:28:42.680 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:28:42.682 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:28:42.683 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=芜湖 起飞, commentUser=null, commentBlog=null, commentBlogId=1293850133657653248, commentGood=null, createdTime=null)]
2020-08-17 14:31:53.371 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:87}] to 112.74.99.109:27017
2020-08-17 14:31:53.651 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:31:53.652 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 190973
2020-08-17 14:31:53.814 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:31:53.817 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:87}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:31:53.822 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 14:32:00.846 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 3108 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 14:32:00.851 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 14:32:00.910 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 14:32:00.910 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 14:32:01.795 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:32:01.797 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 14:32:01.881 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 73ms. Found 3 MongoDB repository interfaces.
2020-08-17 14:32:01.894 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:32:01.895 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 14:32:01.915 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:32:01.916 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:32:01.917 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:32:01.917 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2020-08-17 14:32:02.414 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$cf2ae23e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:02.454 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:02.478 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b9bf6574] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:02.481 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a09709b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:02.485 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 14:32:02.553 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:02.577 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:02.602 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:04.742 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 14:32:04.743 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:04.820 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.075 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.083 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.093 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.104 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.106 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.128 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.129 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.131 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.134 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.181 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.221 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:32:05.918 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 14:32:05.939 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 14:32:05.940 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 14:32:05.941 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 14:32:06.071 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 14:32:06.072 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5162 ms
2020-08-17 14:32:06.809 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 14:32:06.946 INFO  [cluster-ClusterId{value='5f3a2466ec0a75031d3cec71', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:88}] to 112.74.99.109:27017
2020-08-17 14:32:06.980 INFO  [cluster-ClusterId{value='5f3a2466ec0a75031d3cec71', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29237100}
2020-08-17 14:32:07.699 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 14:32:11.884 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 14:32:11.949 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 14:32:11.977 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 11.89 seconds (JVM running for 13.128)
2020-08-17 14:32:18.096 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 14:32:18.096 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 14:32:18.110 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-08-17 14:32:18.156 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:32:18.156 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:32:18.156 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:32:18.157 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:18.157 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:18.157 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:18.157 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:18.157 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:18.157 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850784802377728
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850784802377728
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850784802377728
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:18.160 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:32:18.161 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850784802377728]
2020-08-17 14:32:18.301 INFO  [http-nio-8080-exec-2]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:89}] to 112.74.99.109:27017
2020-08-17 14:32:18.317 INFO  [http-nio-8080-exec-5]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:90}] to 112.74.99.109:27017
2020-08-17 14:32:18.638 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:32:18.638 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 478
2020-08-17 14:32:18.641 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:32:18.642 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 486
2020-08-17 14:32:18.646 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:32:18.647 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 491
2020-08-17 14:32:18.654 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":23,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"https://img2020.cnblogs.com/blog/1631716/202008/1631716-20200810223801588-1633031372.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2245,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"updateTime":1597613802000,"version":12},"commentBlogId":"1293850784802377728","commentContent":"很好 很有用！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 01:36:54","id":"5f3a17767fffe822e55d047c"}],"msg":"操作成功！"}
2020-08-17 14:32:18.655 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 495
2020-08-17 14:32:18.764 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":25,"blogComment":1,"blogContent":"<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null and typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>使用mybatis 写mapper.xml文件时，使用if标签如：</p>\n<pre>&nbsp;<span class=\"cnblogs_code\"><span style=\"color: #008080;\">1</span> <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null and typeNmae!=''\"</span><span style=\"color: #0000ff;\">&gt;</span></span>&nbsp;<br />这时如果传入的参数为0的话会被忽略掉 无法正常的更新<br /><br /><br />使用if标签的嵌套经测试也是会忽略参数0</pre>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span>  　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\">12</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">16</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">17</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>如果if标签判断的是字段是否为空字符串也会忽略参数0</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                     <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=''\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>结论是if标签只有如以下代码时才不省略参数''0'：</p>\n<div class=\"cnblogs_code\">\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n<pre><span style=\"color: #008080;\"> 1</span> 　　<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">update </span><span style=\"color: #ff0000;\">id</span><span style=\"color: #0000ff;\">=\"update\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">        update bl_type\n</span><span style=\"color: #008080;\"> 3</span>             <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 4</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeName!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">                    type_name = #{typeName},\n</span><span style=\"color: #008080;\"> 6</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 7</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"typeBlogCount!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">                    type_blog_count = #{typeBlogCount},\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">10</span>                 <span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">if </span><span style=\"color: #ff0000;\">test</span><span style=\"color: #0000ff;\">=\"enable!=null\"</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">                    enable = #{enable},\n</span><span style=\"color: #008080;\">12</span>                 <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">if</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">13</span>             <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">set</span><span style=\"color: #0000ff;\">&gt;</span>\n<span style=\"color: #008080;\">14</span> <span style=\"color: #000000;\">        where type_id = #{typeId}\n</span><span style=\"color: #008080;\">15</span>     <span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">update</span><span style=\"color: #0000ff;\">&gt;</span></pre>\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\n</div>\n<p>那么又有问题来了，如果前台传来一个字符串时，某些字段就会被置为空字符串，这个怎么解决呢？</p>\n<p>---------------------------------------更新-------------------------------------</p>\n<p>问题已解决</p>\n<p>为什么会出现这个问题？</p>\n<p>因为在mybatis源码中有将空字符串给转换为0这个操作 所以我们传入的参数'0'时就会被判断与空字符串相等 所以if标签的结果值为false</p>\n<p><img src=\"http://112.74.99.109/group1/M00/00/00/rBQJmV86HIKAAc8YAA0tdeH3lrg844.png\" alt=\"\" width=\"600\" height=\"354\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;参考资料：<a href=\"https://blog.csdn.net/Dongguabai/article/details/82981250\">https://blog.csdn.net/Dongguabai/article/details/82981250</a></p>","blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597615202000,"version":25},"msg":"阅读成功"}
2020-08-17 14:32:18.766 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 606
2020-08-17 14:32:18.876 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2256,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":1,"blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:32:18.878 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 722
2020-08-17 14:32:26.042 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1293850133657653248
2020-08-17 14:32:26.044 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:32:26.046 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:26.047 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:32:26.048 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 14:32:26.049 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1293850133657653248
2020-08-17 14:32:26.053 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:26.054 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:26.055 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:32:26.056 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 14:32:26.078 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1293850133657653248
2020-08-17 14:32:26.079 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:26.079 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:26.079 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:32:26.079 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1293850133657653248]
2020-08-17 14:32:26.081 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":2,"blogComment":124,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":136,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"updateTime":1597616922000,"version":14},"commentBlogId":"1293850133657653248","commentContent":"芜湖 起飞","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02:28:42","id":"5f3a2459ebfa2a7c45fe3264"}],"msg":"操作成功！"}
2020-08-17 14:32:26.081 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 33
2020-08-17 14:32:26.098 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:32:29.194 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 3115
2020-08-17 14:32:29.365 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":124,"blogContent":"<p>如上 上传了图片到fastdfs 服务器上</p>","blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs","updateTime":1597616922000,"version":14},"msg":"阅读成功"}
2020-08-17 14:32:29.367 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 3325
2020-08-17 14:32:35.882 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 14:32:35.883 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:32:35.883 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:35.883 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 14:32:35.884 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 14:32:36.441 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616457000,"version":88},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597617138000,"version":26}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 14:32:36.443 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 561
2020-08-17 14:32:38.420 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:32:38.421 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:32:38.423 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:38.425 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:32:38.426 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:32:38.427 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:32:38.427 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:32:38.428 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:38.428 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:32:38.429 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:38.429 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:38.430 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:32:38.430 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:32:38.430 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:32:38.430 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:32:38.452 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:32:38.455 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 28
2020-08-17 14:32:38.462 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":46,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597605061000,"version":47},"commentBlogId":"1294647161643978752","commentContent":"我真帅","commentGood":0,"commentUser":{"createdTime":1597604959000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg?imageView2/1/w/80/h/80","nickname":"w","password":"","sex":1,"updateTime":1597605033000,"userEmail":"1437631334@qq.com","userId":22,"username":"1437631334","version":1},"createdTime":"2020-08-17 11:11:08","id":"5f39f54cf73e8f2cad59f97a"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":28,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599669000,"version":29},"commentBlogId":"1294647161643978752","commentContent":"芜湖   起飞！！！！","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:41:21","id":"5f39e0417d50bd2ab0e3c5b2"},{"commentBlog":{"blogCollection":0,"blogComment":0,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":0,"blogId":"1294647161643978752","blogRead":27,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597599608000,"version":28},"commentBlogId":"1294647161643978752","commentContent":"强啊王哥（此条五毛）","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 09:40:49","id":"5f39e0217d50bd2ab0e3c5b1"},{"commentBlog":{"blogCollection":0,"blogComment":1,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":87,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597616457000,"version":88},"commentBlogId":"1294647161643978752","commentContent":"123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":"2020-08-17 02:20:57","id":"5f3a21c91018302f93b9378c"}],"msg":"操作成功！"}
2020-08-17 14:32:38.464 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 37
2020-08-17 14:32:38.643 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":1,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":88,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597616457000,"version":88},"msg":"阅读成功"}
2020-08-17 14:32:38.644 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 225
2020-08-17 14:32:50.915 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:32:50.915 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:32:50.916 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:32:50.916 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:32:50.916 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=我是最新的评论, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:33:22.156 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:33:22.157 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 31242
2020-08-17 14:33:23.255 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:33:23.257 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:33:23.258 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:33:23.258 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:33:23.259 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=我是最新的评论, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:34:39.863 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:34:39.864 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 76609
2020-08-17 14:34:40.195 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:34:40.199 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:89}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:34:40.201 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:90}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:34:40.211 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 14:34:48.407 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 11872 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 14:34:48.411 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 14:34:48.497 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 14:34:48.497 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 14:34:49.794 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:34:49.795 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 14:34:49.937 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 136ms. Found 3 MongoDB repository interfaces.
2020-08-17 14:34:49.964 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:34:49.965 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 14:34:49.999 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:34:49.999 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:34:50.001 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:34:50.002 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2020-08-17 14:34:50.598 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$310e2bec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:50.640 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:50.659 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1ba2af22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:50.663 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$27a5364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:50.666 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 14:34:50.744 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:50.767 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:50.795 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.292 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 14:34:53.293 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.375 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.654 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.661 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.668 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.674 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.676 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.696 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.697 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.706 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.707 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.765 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:53.805 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:34:54.432 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 14:34:54.445 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 14:34:54.446 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 14:34:54.446 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 14:34:54.571 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 14:34:54.572 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 6075 ms
2020-08-17 14:34:55.013 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 14:34:55.102 INFO  [cluster-ClusterId{value='5f3a250fc620cf0ab92943bf', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:91}] to 112.74.99.109:27017
2020-08-17 14:34:55.127 INFO  [cluster-ClusterId{value='5f3a250fc620cf0ab92943bf', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20712800}
2020-08-17 14:34:55.657 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 14:34:58.441 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 14:34:58.479 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 14:34:58.492 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 10.926 seconds (JVM running for 12.432)
2020-08-17 14:34:59.010 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 14:34:59.010 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 14:34:59.030 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-08-17 14:34:59.409 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:34:59.409 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:34:59.410 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:34:59.411 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:34:59.411 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=我是最新的评论, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:35:15.461 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:92}] to 112.74.99.109:27017
2020-08-17 14:35:15.755 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:35:15.758 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 16350
2020-08-17 14:35:15.943 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:35:15.943 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:15.944 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:15.944 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:35:15.944 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:20.856 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:35:20.857 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:35:20.857 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:20.858 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:35:20.858 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:20.883 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:35:20.883 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:35:20.883 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:20.883 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:35:20.884 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:20.885 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:35:20.995 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:35:20.995 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 112
2020-08-17 14:35:21.029 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:35:21.030 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 147
2020-08-17 14:35:21.032 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:35:21.034 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 150
2020-08-17 14:35:21.192 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":89,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617299000,"version":89},"msg":"阅读成功"}
2020-08-17 14:35:21.193 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 337
2020-08-17 14:35:21.338 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":88,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:35:21.339 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 456
2020-08-17 14:35:31.495 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:35:31.495 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:31.496 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:35:31.497 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:31.498 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:31.498 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:35:31.501 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:35:31.501 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:31.502 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:31.544 INFO  [http-nio-8080-exec-3]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:93}] to 112.74.99.109:27017
2020-08-17 14:35:31.565 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:35:31.566 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 69
2020-08-17 14:35:31.574 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:35:31.576 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 80
2020-08-17 14:35:31.581 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:35:31.581 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 85
2020-08-17 14:35:31.746 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":90,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617320000,"version":90},"msg":"阅读成功"}
2020-08-17 14:35:31.747 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 252
2020-08-17 14:35:31.877 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":89,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:35:31.878 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 382
2020-08-17 14:35:42.743 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getPage
2020-08-17 14:35:42.743 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:35:42.744 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:42.744 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getPage
2020-08-17 14:35:42.745 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Page(pageNum=1, pageSize=5, orderByField=created_time, orderByMode=desc, typeId=null)]
2020-08-17 14:35:43.229 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"endRow":4,"hasNextPage":false,"hasPreviousPage":false,"isFirstPage":true,"isLastPage":true,"list":[{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":90,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617331000,"version":91},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1294534531398889472","blogRead":2,"blogRemark":"测试2","blogTitle":"测试2","blogType":14,"createdTime":1597447259000,"typeName":"docker","updateTime":1597473953000,"version":2},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql","updateTime":1597606614000,"version":7},{"blogCollection":0,"blogComment":123,"blogGoods":1,"blogId":"1293808463692021760","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810PaAQM5cAAAViAu2vV4421.png","blogRead":8,"blogTitle":"docker 安装 mysql5.7","blogType":14,"createdTime":1597274150000,"typeName":"docker","updateTime":1597606618000,"version":10},{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis","updateTime":1597617138000,"version":26}],"navigateFirstPage":1,"navigateLastPage":1,"navigatePages":8,"navigatepageNums":[1],"nextPage":0,"pageNum":1,"pageSize":5,"pages":2,"prePage":0,"size":5,"startRow":0,"total":8},"msg":"查询成功！"}
2020-08-17 14:35:43.230 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 487
2020-08-17 14:35:45.338 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:35:45.339 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:35:45.341 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:45.343 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:35:45.344 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:45.390 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:35:45.391 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:45.394 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:45.396 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:35:45.397 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:45.399 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:35:45.400 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:35:45.401 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:35:45.401 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:35:45.404 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:35:45.430 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:35:45.431 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 32
2020-08-17 14:35:45.597 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":91,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617331000,"version":91},"msg":"阅读成功"}
2020-08-17 14:35:45.598 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 262
2020-08-17 14:36:02.255 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:36:02.256 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:36:02.256 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:36:02.257 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:36:02.257 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:36:02.258 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:36:02.258 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:36:02.258 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:36:02.258 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:36:02.258 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:36:02.262 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:36:02.263 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:36:02.264 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:36:02.291 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:36:02.291 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 29
2020-08-17 14:36:02.370 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:36:02.370 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 107
2020-08-17 14:36:02.409 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:36:02.411 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 148
2020-08-17 14:36:02.511 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":4,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617345000,"version":92},"msg":"阅读成功"}
2020-08-17 14:36:02.512 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 256
2020-08-17 14:36:02.671 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":4,"blogGoods":8,"blogId":"1294647161643978752","blogRead":91,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:36:02.672 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 409
2020-08-17 14:37:17.766 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:37:17.767 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:37:17.768 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 14:37:17.769 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:37:17.770 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:37:22.819 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:37:22.820 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:37:22.821 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 14:37:22.822 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:37:22.822 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:38:38.825 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:38:38.830 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:92}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:38:38.831 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:93}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:38:38.843 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 14:38:47.937 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 7144 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 14:38:47.944 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 14:38:47.998 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 14:38:47.999 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 14:38:49.064 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:38:49.066 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 14:38:49.165 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 91ms. Found 3 MongoDB repository interfaces.
2020-08-17 14:38:49.182 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:38:49.183 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 14:38:49.212 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:38:49.213 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:38:49.214 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:38:49.214 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2020-08-17 14:38:49.828 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$19ba52f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:49.881 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:49.894 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$44ed626] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:49.898 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$eb267a68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:49.904 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 14:38:49.989 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:50.010 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:50.038 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.126 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 14:38:53.126 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.211 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.482 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.493 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.507 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.516 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.520 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.547 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.549 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.551 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.556 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.617 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:53.663 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:38:54.259 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 14:38:54.267 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 14:38:54.270 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 14:38:54.272 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 14:38:54.378 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 14:38:54.379 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 6380 ms
2020-08-17 14:38:55.012 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 14:38:55.176 INFO  [cluster-ClusterId{value='5f3a25fe32dcd620bdf93341', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:94}] to 112.74.99.109:27017
2020-08-17 14:38:55.213 INFO  [cluster-ClusterId{value='5f3a25fe32dcd620bdf93341', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30920200}
2020-08-17 14:38:55.835 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 14:38:59.543 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 14:38:59.583 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 14:38:59.597 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 12.474 seconds (JVM running for 14.676)
2020-08-17 14:38:59.801 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 14:38:59.803 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 14:38:59.826 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 23 ms
2020-08-17 14:38:59.882 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:38:59.882 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:38:59.883 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:38:59.888 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:38:59.890 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:39:00.044 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:95}] to 112.74.99.109:27017
2020-08-17 14:39:06.335 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:39:06.336 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:39:06.337 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 0:0:0:0:0:0:0:1
2020-08-17 14:39:06.338 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:39:06.340 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:40:02.497 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-08-17 14:40:02.497 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 56162
2020-08-17 14:40:13.223 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:40:13.224 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:40:13.225 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:40:13.225 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:40:13.226 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=我爱你, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:40:13.488 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:40:13.488 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 266
2020-08-17 14:40:13.580 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:40:13.582 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:40:13.583 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:40:13.584 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:40:13.584 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:40:17.330 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:40:17.331 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 3751
2020-08-17 14:40:30.001 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:40:30.004 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:40:30.005 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:40:30.007 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:40:30.008 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=我也爱你  芜湖, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:40:30.196 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:40:30.197 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 196
2020-08-17 14:40:30.278 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:40:30.278 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:40:30.278 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:40:30.279 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:40:30.279 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:40:30.311 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:40:30.311 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 33
2020-08-17 14:42:49.748 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:42:49.758 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:95}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:42:49.765 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 14:42:59.932 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 10284 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 14:42:59.936 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 14:42:59.978 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 14:42:59.978 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 14:43:00.856 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:43:00.857 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 14:43:00.962 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 99ms. Found 3 MongoDB repository interfaces.
2020-08-17 14:43:00.976 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:43:00.977 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 14:43:00.992 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:43:00.993 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:43:00.993 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:43:00.993 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 14:43:01.462 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$e92d20de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:01.504 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:01.514 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d3c1a414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:01.518 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$ba994856] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:01.522 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 14:43:01.585 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:01.603 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:01.626 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.093 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 14:43:04.093 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.200 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.462 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.477 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.511 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.528 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.533 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.567 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.570 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.574 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.575 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.624 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:04.659 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:05.145 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 14:43:05.156 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 14:43:05.157 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 14:43:05.158 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 14:43:05.274 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 14:43:05.274 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 5296 ms
2020-08-17 14:43:05.844 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 14:43:06.011 INFO  [cluster-ClusterId{value='5f3a26f94af6242195dbbb20', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:97}] to 112.74.99.109:27017
2020-08-17 14:43:06.050 INFO  [cluster-ClusterId{value='5f3a26f94af6242195dbbb20', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32562700}
2020-08-17 14:43:06.713 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 14:43:09.380 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 14:43:09.411 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 14:43:09.426 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 10.078 seconds (JVM running for 11.384)
2020-08-17 14:43:13.136 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 14:43:13.138 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 14:43:13.177 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 38 ms
2020-08-17 14:43:13.614 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:43:13.614 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:43:13.615 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:43:13.616 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:43:13.617 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=人情味大所大所, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:43:14.379 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:98}] to 112.74.99.109:27017
2020-08-17 14:43:14.699 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:43:14.700 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1086
2020-08-17 14:43:14.893 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:43:14.894 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:43:14.894 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:43:14.894 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:43:14.895 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:43:15.097 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:43:15.099 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 206
2020-08-17 14:43:45.757 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:43:45.760 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:98}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:43:45.765 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 14:43:51.546 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 748 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 14:43:51.549 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 14:43:51.593 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 14:43:51.594 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 14:43:52.783 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:43:52.785 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 14:43:52.924 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 129ms. Found 3 MongoDB repository interfaces.
2020-08-17 14:43:52.945 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:43:52.947 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 14:43:52.971 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:43:52.976 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:43:52.978 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:43:52.978 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2020-08-17 14:43:53.447 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$fdfa2c41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:53.511 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:53.525 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e88eaf77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:53.529 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$cf6653b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:53.533 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 14:43:53.616 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:53.638 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:53.665 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:56.675 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 14:43:56.678 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:56.995 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.742 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.800 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.831 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.842 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.848 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.890 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.892 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.895 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.898 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:57.997 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:58.124 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:43:58.766 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 14:43:58.783 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 14:43:58.785 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 14:43:58.786 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 14:43:59.046 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 14:43:59.046 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 7452 ms
2020-08-17 14:43:59.581 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 14:43:59.668 INFO  [cluster-ClusterId{value='5f3a272f58f98a67857427ea', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:99}] to 112.74.99.109:27017
2020-08-17 14:43:59.708 INFO  [cluster-ClusterId{value='5f3a272f58f98a67857427ea', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30530700}
2020-08-17 14:44:00.188 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 14:44:02.377 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 14:44:02.406 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 14:44:02.419 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 11.581 seconds (JVM running for 12.798)
2020-08-17 14:44:20.191 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:44:20.196 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-08-17 14:44:25.396 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-E7QN2JV with PID 7976 (D:\MyProject\blog\target\classes started by wsy in D:\MyProject\blog)
2020-08-17 14:44:25.399 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-08-17 14:44:25.445 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-17 14:44:25.445 INFO  [restartedMain]o.s.b.devtools.env.DevToolsPropertyDefaultsPostProcessor.logTo:225 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-17 14:44:26.207 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:44:26.208 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-08-17 14:44:26.281 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 64ms. Found 3 MongoDB repository interfaces.
2020-08-17 14:44:26.294 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-08-17 14:44:26.295 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-08-17 14:44:26.310 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CollectionDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:44:26.310 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.CommentDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:44:26.311 INFO  [restartedMain]o.s.d.r.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:348 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.wsy.blog.dao.GoodDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020-08-17 14:44:26.311 INFO  [restartedMain]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-08-17 14:44:26.774 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.wsy.blog.config.shiroConfig$$EnhancerBySpringCGLIB$$cee472e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:26.814 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:26.824 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b978f61b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:26.827 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a0509a5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:26.831 INFO  [restartedMain]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-08-17 14:44:26.893 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:26.908 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:26.935 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.080 INFO  [restartedMain]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-08-17 14:44:29.080 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.162 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.389 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.395 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.406 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.415 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.417 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.wsy.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.436 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.437 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.439 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.wsy.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.440 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.wsy.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.487 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:29.534 INFO  [restartedMain]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-17 14:44:30.131 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 8080 (http)
2020-08-17 14:44:30.139 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-08-17 14:44:30.140 INFO  [restartedMain]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-08-17 14:44:30.140 INFO  [restartedMain]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-17 14:44:30.226 INFO  [restartedMain]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-08-17 14:44:30.226 INFO  [restartedMain]o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:285 -Root WebApplicationContext: initialization completed in 4781 ms
2020-08-17 14:44:30.756 INFO  [restartedMain]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[112.74.99.109:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-08-17 14:44:30.869 INFO  [cluster-ClusterId{value='5f3a274ed42868424ba75458', description='null'}-112.74.99.109:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:100}] to 112.74.99.109:27017
2020-08-17 14:44:30.898 INFO  [cluster-ClusterId{value='5f3a274ed42868424ba75458', description='null'}-112.74.99.109:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=112.74.99.109:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28024800}
2020-08-17 14:44:31.338 INFO  [restartedMain]o.s.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:58 -LiveReload server is running on port 35729
2020-08-17 14:44:33.483 INFO  [restartedMain]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-08-17 14:44:33.506 INFO  [restartedMain]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 8080 (http) with context path ''
2020-08-17 14:44:33.516 INFO  [restartedMain]com.wsy.blog.BlogApplication.logStarted:61 -Started BlogApplication in 8.7 seconds (JVM running for 9.617)
2020-08-17 14:44:42.442 INFO  [http-nio-8080-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-17 14:44:42.443 INFO  [http-nio-8080-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-08-17 14:44:42.466 INFO  [http-nio-8080-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 23 ms
2020-08-17 14:44:42.727 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:44:42.727 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:44:42.727 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:44:42.727 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:44:42.727 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:44:42.727 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:44:42.728 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:42.728 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:42.728 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:42.730 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:42.731 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:44:42.731 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:44:42.731 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:44:42.731 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:44:42.731 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:44:42.731 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:44:42.857 INFO  [http-nio-8080-exec-1]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:101}] to 112.74.99.109:27017
2020-08-17 14:44:42.871 INFO  [http-nio-8080-exec-5]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:102}] to 112.74.99.109:27017
2020-08-17 14:44:43.050 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:44:43.050 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 320
2020-08-17 14:44:43.053 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:44:43.054 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 328
2020-08-17 14:44:43.055 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:44:43.056 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 330
2020-08-17 14:44:43.060 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:44:43.061 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 331
2020-08-17 14:44:43.098 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617793000,"version":93},"msg":"阅读成功"}
2020-08-17 14:44:43.099 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 369
2020-08-17 14:44:43.214 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":7,"blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:44:43.215 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 489
2020-08-17 14:44:45.730 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:44:45.731 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:44:45.731 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:45.731 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:44:45.731 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=123123123, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:44:46.047 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:44:46.047 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 317
2020-08-17 14:44:46.157 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:44:46.158 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:44:46.158 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:44:46.158 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:44:46.158 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:44:46.196 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:44:46.197 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 40
2020-08-17 14:48:14.492 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:48:14.494 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:48:14.494 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:48:14.494 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:48:14.494 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:48:14.504 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:48:14.504 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:48:14.504 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:48:14.505 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:48:14.506 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:48:14.506 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:48:14.506 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:48:14.517 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:48:14.518 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:48:14.519 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:48:14.520 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:48:14.521 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:48:14.542 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:48:14.542 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 38
2020-08-17 14:48:14.552 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:48:14.554 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 37
2020-08-17 14:48:15.167 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":94,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597617885000,"version":94},"msg":"阅读成功"}
2020-08-17 14:48:15.168 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 676
2020-08-17 14:48:15.217 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:48:15.219 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 715
2020-08-17 14:48:15.264 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:48:15.264 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 760
2020-08-17 14:48:15.667 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":8,"blogGoods":8,"blogId":"1294647161643978752","blogRead":94,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:48:15.669 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 1165
2020-08-17 14:51:36.963 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:51:36.964 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:51:36.964 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:36.965 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:51:36.965 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:51:36.977 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /link/getAll
2020-08-17 14:51:36.977 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/recommendedRead
2020-08-17 14:51:36.977 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:51:36.977 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:51:36.978 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:36.978 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:36.978 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.LinkController.getAll
2020-08-17 14:51:36.978 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.recommendedRead
2020-08-17 14:51:36.978 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:51:36.978 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:51:36.995 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /admin/getAdmin
2020-08-17 14:51:36.996 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:51:36.996 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:36.996 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.AdminController.getAdmin
2020-08-17 14:51:36.996 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[]
2020-08-17 14:51:37.052 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":1597388372000,"linkId":1,"linkName":"博客园","linkUrl":"https://www.cnblogs.com/sucker/","updateTime":1597389491000,"version":4},{"createdTime":1597388963000,"linkId":4,"linkName":"bilibili","linkUrl":"https://space.bilibili.com/412866452","updateTime":1597388963000,"version":1},{"createdTime":1597389262000,"linkId":5,"linkName":"QQ空间","linkUrl":"https://user.qzone.qq.com/1437631334/infocenter","updateTime":1597389262000,"version":1}],"msg":"操作成功！"}
2020-08-17 14:51:37.053 INFO  [http-nio-8080-exec-10]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 76
2020-08-17 14:51:37.112 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/getIsGood/1294647161643978752
2020-08-17 14:51:37.112 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:51:37.113 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:51:37.113 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:51:37.115 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:37.115 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:37.116 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:51:37.116 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:51:37.116 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.getIsGood
2020-08-17 14:51:37.118 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV815cOAVtH8AACx7prp57w026.jpg","id":1,"name":"w","signature":"生而为人，我很抱歉","username":"qq1437631334"},"msg":"操作成功！"}
2020-08-17 14:51:37.118 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:51:37.118 INFO  [http-nio-8080-exec-8]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 123
2020-08-17 14:51:37.148 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":true,"msg":"操作成功！"}
2020-08-17 14:51:37.149 INFO  [http-nio-8080-exec-7]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 37
2020-08-17 14:51:37.150 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:51:37.150 INFO  [http-nio-8080-exec-4]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 78
2020-08-17 14:51:37.239 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":95,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597618094000,"version":95},"msg":"阅读成功"}
2020-08-17 14:51:37.240 INFO  [http-nio-8080-exec-5]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 277
2020-08-17 14:51:37.537 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":25,"blogComment":1,"blogGoods":35,"blogId":"1293850784802377728","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81D_SAJ6AIAC331B3w8_k884.jpg","blogRead":2257,"blogTitle":"mybatis <if>标签踩坑","blogType":10,"createdTime":1594605840000,"typeName":"Mybatis"},{"blogCollection":2,"blogComment":124,"blogGoods":124,"blogId":"1293850133657653248","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81DzeAcRSDAACPXPf76OA586.jpg","blogRead":137,"blogTitle":"fastdfs上传图片","blogType":13,"createdTime":1594173685000,"typeName":"fastdfs"},{"blogCollection":231,"blogComment":2354,"blogGoods":20,"blogId":"1293808631053139968","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV810OyAV6OwAAArr4MOxxQ419.jpg","blogRead":238,"blogTitle":"docker 安装 mysql5.7","blogType":16,"createdTime":1597274190000,"typeName":"Mysql"},{"blogCollection":1,"blogComment":213,"blogGoods":124,"blogId":"1293896447598579712","blogImage":"http://112.74.99.109/group1/M00/00/00/rBQJmV81zxCAUfKVAAf2zQ1Ix3Y912.gif","blogRead":2,"blogTitle":"测试1","blogType":14,"createdTime":1592370327000,"typeName":"docker"},{"blogCollection":0,"blogComment":8,"blogGoods":8,"blogId":"1294647161643978752","blogRead":94,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro"}],"msg":"获取成功"}
2020-08-17 14:51:37.539 INFO  [http-nio-8080-exec-2]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 562
2020-08-17 14:51:38.899 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/collection
2020-08-17 14:51:38.899 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:51:38.899 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:38.899 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.collection
2020-08-17 14:51:38.900 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Collection(id=null, User=null, userId=null, Blog=null, BlogId=1294647161643978752, createdTime=null)]
2020-08-17 14:51:39.157 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"收藏成功"}
2020-08-17 14:51:39.158 INFO  [http-nio-8080-exec-1]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 259
2020-08-17 14:51:39.311 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /blog/read/1294647161643978752
2020-08-17 14:51:39.312 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : PUT
2020-08-17 14:51:39.313 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:39.313 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.BlogController.read
2020-08-17 14:51:39.313 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:51:39.568 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":1,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":96,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"typeName":"Shiro","updateTime":1597618298000,"version":96},"msg":"阅读成功"}
2020-08-17 14:51:39.569 INFO  [http-nio-8080-exec-9]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 258
2020-08-17 14:51:45.470 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/save
2020-08-17 14:51:45.475 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : POST
2020-08-17 14:51:45.476 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:45.476 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.save
2020-08-17 14:51:45.477 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[Comment(id=null, commentContent=嘤嘤嘤, commentUser=null, commentBlog=null, commentBlogId=1294647161643978752, commentGood=null, createdTime=null)]
2020-08-17 14:51:45.717 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功！"}
2020-08-17 14:51:45.717 INFO  [http-nio-8080-exec-3]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 247
2020-08-17 14:51:45.835 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:118 -请求地址 : /comment/getByBlogId/1294647161643978752
2020-08-17 14:51:45.836 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:119 -请求方式 : GET
2020-08-17 14:51:45.838 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:122 -IP : 127.0.0.1
2020-08-17 14:51:45.839 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:124 -方法 : com.wsy.blog.controller.CommentController.getByBlogId
2020-08-17 14:51:45.840 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.printRequestLog:130 -请求参数：[1294647161643978752]
2020-08-17 14:51:45.896 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"commentBlog":{"blogCollection":1,"blogComment":9,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":96,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597618305000,"version":97},"commentBlogId":"1294647161643978752","commentContent":"嘤嘤嘤","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597647105626,"id":"5f3a2901d42868424ba7545b"},{"commentBlog":{"blogCollection":0,"blogComment":8,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":93,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617885000,"version":94},"commentBlogId":"1294647161643978752","commentContent":"123123123","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646685878,"id":"5f3a275dd42868424ba75459"},{"commentBlog":{"blogCollection":0,"blogComment":7,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617793000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"人情味大所大所","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646593896,"id":"5f3a27024af6242195dbbb21"},{"commentBlog":{"blogCollection":0,"blogComment":6,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617629000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我也爱你  芜湖","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646430127,"id":"5f3a265e32dcd620bdf93343"},{"commentBlog":{"blogCollection":0,"blogComment":5,"blogContent":"<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-weight: bold; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 28px; color: #4f4f4f; line-height: 36px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">shiroFilter踩坑</h1>\n<p style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 16px; padding: 0px; font-weight: 400; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; color: #4d4d4d; line-height: 26px; overflow-wrap: break-word; font-style: normal; font-variant-ligatures: common-ligatures; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-style: initial; text-decoration-color: initial;\">今天出门了一趟，没有关电脑，服务器一直开着，回来发现某一些shiro设置了放行的后端接口竟然无法访问了。经过一段时间的debug，总的来说找到了原因，就是shiro过滤器的问题，通过搜索资料找到了问题根源。原来是HashMap和LinkedMap的问题。 我使用的是HashMap，HashMap不会按照顺序去存储，而shiro有个要求，就是\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">authc\"</strong>&nbsp;这个权限必须得放在放行权限的后面\"<strong style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word;\">anon</strong>\"。所以使用HashMap时会导致某一些需要放行的接口被放在了authc下面，导致放行无效。</p>","blogGoods":8,"blogId":"1294647161643978752","blogRead":92,"blogTitle":"shiroFilter踩坑","blogType":12,"createdTime":1597474112000,"updateTime":1597617613000,"version":93},"commentBlogId":"1294647161643978752","commentContent":"我爱你","commentGood":0,"commentUser":{"createdTime":1597348773000,"header":"http://112.74.99.109/group1/M00/00/00/rBQJmV82DBmAb702AACPXPf76OA387.jpg","name":"李玟","nickname":"oops","password":"","sex":2,"updateTime":1597348773000,"userEmail":"2388688213@qq.com","userId":8,"username":"oops","version":1},"createdTime":1597646413374,"id":"5f3a264d32dcd620bdf93342"}],"msg":"操作成功！"}
2020-08-17 14:51:45.897 INFO  [http-nio-8080-exec-6]com.wsy.blog.aspect.RequestAspect.doAround:71 -耗时 : 62
2020-08-17 14:52:08.046 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-08-17 14:52:08.049 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:101}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:52:08.049 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:102}] to 112.74.99.109:27017 because the pool has been closed.
2020-08-17 14:52:08.054 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
